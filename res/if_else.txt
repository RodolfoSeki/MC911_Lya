Generating LALR tables
---------- Input -----------
dcl t, p int = 0;
evaluate: proc(p int);
	if p < 0 then
	  print("Numero negativo: ", p);
	elsif (p == 0) then
	  print("Zero: ", p);
	elsif (p > 0) && (p < 10) then
	  print("Numero pequeno: ", p);
	elsif p < 100 then
	  print("Numero Grande: ", p);
	else
	  print("Numero bem grande: ", p);
	fi;
end;

evaluate(-10);
evaluate(p);
evaluate(3);
evaluate(10);
evaluate(100);

----------------------------
------ Code generated ------
H: ['Numero negativo: ', 'Zero: ', 'Numero pequeno: ', 'Numero Grande: ', 'Numero bem grande: ']
Code: [('stp',), ('alc', 2), ('ldc', 0), ('stv', 0, 0), ('ldc', 0), ('stv', 0, 1), ('jmp', 9), ('lbl', 1), ('enf', 1), ('ldv', 1, -3), ('ldc', 0), ('les',), ('jof', 2), ('prc', 0), ('ldv', 1, -3), ('prv', 0), ('jmp', 7), ('lbl', 2), ('ldv', 1, -3), ('ldc', 0), ('equ',), ('jof', 3), ('prc', 1), ('ldv', 1, -3), ('prv', 0), ('jmp', 7), ('lbl', 3), ('ldv', 1, -3), ('ldc', 0), ('grt',), ('ldv', 1, -3), ('ldc', 10), ('les',), ('and',), ('jof', 4), ('prc', 2), ('ldv', 1, -3), ('prv', 0), ('jmp', 7), ('lbl', 4), ('ldv', 1, -3), ('ldc', 100), ('les',), ('jof', 5), ('prc', 3), ('ldv', 1, -3), ('prv', 0), ('jmp', 7), ('lbl', 5), ('prc', 4), ('ldv', 1, -3), ('prv', 0), ('jmp', 7), ('lbl', 7), ('lbl', 8), ('ret', 1, 1), ('lbl', 9), ('ldc', 10), ('neg',), ('cfu', 1), ('ldv', 0, 1), ('cfu', 1), ('ldc', 3), ('cfu', 1), ('ldc', 10), ('cfu', 1), ('ldc', 100), ('cfu', 1), ('dlc', 2), ('end',)]
----------------------------
------ Running Code ------
Numero negativo: -10
Zero: 0
Numero pequeno: 3
Numero Grande: 10
Numero bem grande: 100
----------------------------
