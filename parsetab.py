
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT CHAR EXIT FALSE THEN RESULT UPPER FOR BOOL WHILE RETURNS BY ELSIF ELSE PRINT DO TRUE END FI LENGTH TO OD IF LOC LOWER ABS CHARS ARRAY TYPE REF INT DOWN ASC NUM RETURN NULL SYN DCL READ IN PROCprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_range_mode \n                              | identifier DOWN IN discrete_range_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'TRUE':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[59,59,59,59,59,59,-116,59,-117,59,59,59,-133,59,59,-96,-99,-101,59,-95,-94,-92,-100,-93,-97,-102,-98,59,-108,59,-107,59,-106,59,-111,-112,-113,-135,-137,-138,-136,-139,-134,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'NULL':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[60,60,60,60,60,60,-116,60,-117,60,60,60,-133,60,60,-96,-99,-101,60,-95,-94,-92,-100,-93,-97,-102,-98,60,-108,60,-107,60,-106,60,-111,-112,-113,-135,-137,-138,-136,-139,-134,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'LEQ':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,154,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'LOWER':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[2,-6,-5,2,-4,-2,-8,-7,2,2,2,2,-3,-122,2,2,2,2,2,-116,2,-117,2,2,-143,2,2,-133,2,-9,-24,-18,2,-96,-99,-101,2,-95,-94,-92,-100,-93,-97,-102,-98,2,-108,2,-107,2,-106,2,-111,-112,-113,2,-144,2,-135,-137,-138,-136,-139,-134,2,2,2,2,2,-123,-188,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'DCL':([0,1,4,5,13,18,20,23,48,49,116,137,146,211,212,285,309,311,312,325,326,328,333,],[3,-6,-5,3,-4,-2,-8,-7,-3,-122,-9,-24,-18,-123,-188,3,3,3,3,3,3,3,3,]),'WHILE':([8,22,27,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,94,105,145,150,151,183,184,185,187,214,219,222,223,224,227,232,240,258,269,280,281,291,296,301,303,315,316,319,321,323,331,],[-54,-17,98,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,98,-56,-168,-115,-121,-155,-153,-154,-178,-169,-91,-80,-104,-105,-110,-179,-57,-77,-163,-39,-40,-83,-156,-164,-60,-78,-84,-162,-157,-158,-159,]),'LOC':([22,118,119,120,121,122,123,124,126,128,129,130,132,134,200,280,281,282,289,307,329,],[-17,-33,-34,-43,-38,-30,-37,-36,-31,-28,-44,-29,-35,-32,-42,-39,-40,-45,314,-46,336,]),'UPPER':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[9,-6,-5,9,-4,-2,-8,-7,9,9,9,9,-3,-122,9,9,9,9,9,-116,9,-117,9,9,-143,9,9,-133,9,-9,-24,-18,9,-96,-99,-101,9,-95,-94,-92,-100,-93,-97,-102,-98,9,-108,9,-107,9,-106,9,-111,-112,-113,9,-144,9,-135,-137,-138,-136,-139,-134,9,9,9,9,9,-123,-188,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'NUM':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[10,-6,-5,10,-4,-2,-8,-7,10,10,10,10,-3,-122,10,10,10,10,10,-116,10,-117,10,10,-143,10,10,-133,10,-9,-24,-18,10,-96,-99,-101,10,-95,-94,-92,-100,-93,-97,-102,-98,10,-108,10,-107,10,-106,10,-111,-112,-113,10,-144,10,-135,-137,-138,-136,-139,-134,10,10,10,10,10,-123,-188,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'TYPE':([0,1,4,5,13,18,20,23,48,49,116,137,146,211,212,285,309,311,312,325,326,328,333,],[11,-6,-5,11,-4,-2,-8,-7,-3,-122,-9,-24,-18,-123,-188,11,11,11,11,11,11,11,11,]),'ARROW':([8,14,22,24,28,32,33,35,36,40,42,43,54,63,80,81,83,85,87,90,92,95,98,103,104,105,112,115,145,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,187,189,190,191,192,193,194,201,202,203,204,213,214,218,226,229,232,235,238,239,240,243,257,261,262,276,277,278,293,297,298,303,],[-54,-51,-17,65,-53,-167,65,105,65,-166,-55,-52,65,65,105,65,-116,65,-51,-55,-117,-51,65,65,65,-56,-133,65,-168,65,105,-96,-99,-101,65,-95,-94,-92,-100,-93,-97,-102,-98,65,-108,65,-107,65,-106,65,-111,-112,-113,-178,-135,-137,-138,-136,-139,-134,65,65,65,65,65,-169,65,65,65,-179,65,65,65,-57,-51,65,65,65,65,65,65,65,65,65,-60,]),'LT':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,159,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'INT':([22,45,46,57,125,136,201,207,230,254,270,278,279,313,],[-17,-15,124,124,124,124,124,-16,124,124,124,124,124,124,]),'REF':([22,45,46,57,125,136,207,254,279,313,],[-17,-15,125,125,125,125,-16,125,125,125,]),'CCONST':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[67,67,67,67,67,67,-116,67,-117,67,67,67,-133,67,67,-96,-99,-101,67,-95,-94,-92,-100,-93,-97,-102,-98,67,-108,67,-107,67,-106,67,-111,-112,-113,-135,-137,-138,-136,-139,-134,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'$end':([1,4,5,13,18,20,23,38,48,49,116,137,146,211,212,],[-6,-5,-1,-4,-2,-8,-7,0,-3,-122,-9,-24,-18,-123,-188,]),'RETURNS':([252,284,],[287,287,]),'PLUS':([8,14,22,28,32,35,40,42,43,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,82,84,87,88,89,90,91,93,95,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,111,-166,-55,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,170,-70,-51,-68,-66,-55,-103,-65,-51,-56,-168,-115,-121,-178,-169,170,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'EQUALS':([8,14,22,28,32,35,40,42,43,45,50,57,87,95,105,106,107,108,109,110,111,118,119,120,121,122,123,124,126,128,129,130,131,132,134,145,149,182,187,200,207,214,232,240,280,281,282,303,307,],[-54,-51,-17,-53,-167,112,-166,-55,-52,-15,136,148,-51,-51,-56,189,190,191,192,193,194,-33,-34,-43,-38,-30,-37,-36,-31,-28,-44,-29,204,-35,-32,-168,218,229,-178,-42,-16,-169,-179,-57,-39,-40,-45,-60,-46,]),'FALSE':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[71,71,71,71,71,71,-116,71,-117,71,71,71,-133,71,71,-96,-99,-101,71,-95,-94,-92,-100,-93,-97,-102,-98,71,-108,71,-107,71,-106,71,-111,-112,-113,-135,-137,-138,-136,-139,-134,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'GEQ':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,153,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'PROC':([53,],[139,]),'OR':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,156,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'FI':([8,22,28,32,40,43,49,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,100,105,145,150,151,178,187,195,211,214,219,222,223,224,227,232,233,237,240,258,259,273,291,292,295,302,303,315,316,324,],[-54,-17,-53,-167,-166,-52,-122,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-143,-56,-168,-115,-121,-144,-178,234,-123,-169,-91,-80,-104,-105,-110,-179,271,-142,-57,-77,291,-145,-83,316,-87,-146,-60,-78,-84,-147,]),'TIMES':([8,14,22,28,32,35,40,42,43,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,84,87,88,89,90,91,93,95,105,145,150,151,187,214,222,223,224,227,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,109,-166,-55,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,-70,-51,-68,-66,-55,173,-65,-51,-56,-168,-115,-121,-178,-169,-80,173,173,-110,-179,-57,-51,-77,-60,-78,]),'DIVIDE':([8,14,22,28,32,35,40,42,43,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,84,87,88,89,90,91,93,95,105,145,150,151,187,214,222,223,224,227,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,107,-166,-55,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,-70,-51,-68,-66,-55,174,-65,-51,-56,-168,-115,-121,-178,-169,-80,174,174,-110,-179,-57,-51,-77,-60,-78,]),'ICONST':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,206,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[72,72,72,72,72,72,-116,72,-117,72,72,72,-133,72,72,-96,-99,-101,72,-95,-94,-92,-100,-93,-97,-102,-98,72,-108,72,-107,72,-106,72,-111,-112,-113,-135,-137,-138,-136,-139,-134,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'ABS':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[7,-6,-5,7,-4,-2,-8,-7,7,7,7,7,-3,-122,7,7,7,7,7,-116,7,-117,7,7,-143,7,7,-133,7,-9,-24,-18,7,-96,-99,-101,7,-95,-94,-92,-100,-93,-97,-102,-98,7,-108,7,-107,7,-106,7,-111,-112,-113,7,-144,7,-135,-137,-138,-136,-139,-134,7,7,7,7,7,-123,-188,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'AND':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,157,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'EXIT':([0,1,4,5,13,18,20,23,27,48,49,53,96,100,116,137,146,177,178,181,196,211,212,228,236,237,273,285,309,311,312,325,326,328,333,],[17,-6,-5,17,-4,-2,-8,-7,17,-3,-122,17,17,-143,-9,-24,-18,17,-144,17,17,-123,-188,17,17,17,17,17,17,17,17,17,17,17,17,]),'COLON':([8,14,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,95,105,145,150,151,187,197,214,219,220,222,223,224,227,232,240,241,243,258,291,303,305,315,316,],[-54,53,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,177,-56,-168,-115,-121,-178,238,-169,-91,257,-80,-104,-105,-110,-179,-57,276,-51,-77,-83,-60,276,-78,-84,]),'SYN':([0,1,4,5,13,18,20,23,48,49,116,137,146,211,212,285,309,311,312,325,326,328,333,],[19,-6,-5,19,-4,-2,-8,-7,-3,-122,-9,-24,-18,-123,-188,19,19,19,19,19,19,19,19,]),'NOT':([24,33,36,54,81,85,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[92,92,92,92,92,92,92,92,92,-133,92,92,-96,-99,-101,92,-95,-94,-92,-100,-93,-97,-102,-98,92,-108,92,-107,92,-106,92,-111,-112,-113,-135,-137,-138,-136,-139,-134,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'ARRAY':([22,45,46,57,125,136,207,254,279,313,],[-17,-15,127,127,127,127,-16,127,127,127,]),'LAND':([8,14,22,28,32,35,40,42,43,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,82,84,87,88,89,90,91,93,95,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,110,-166,-55,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,166,-70,-51,-68,-66,-55,-103,-65,-51,-56,-168,-115,-121,-178,-169,166,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'MODULO':([8,14,22,28,32,35,40,42,43,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,84,87,88,89,90,91,93,95,105,145,150,151,187,214,222,223,224,227,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,108,-166,-55,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,-70,-51,-68,-66,-55,175,-65,-51,-56,-168,-115,-121,-178,-169,-80,175,175,-110,-179,-57,-51,-77,-60,-78,]),'SEMI':([6,8,12,15,16,21,22,26,28,29,32,33,37,40,42,43,44,47,51,52,55,56,58,59,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,78,79,80,82,84,86,87,88,89,90,91,93,94,97,99,102,105,113,118,119,120,121,122,123,124,126,128,129,130,131,132,134,140,141,145,150,151,176,179,180,183,184,185,187,188,199,200,205,208,209,214,215,216,217,219,222,223,224,227,232,234,240,249,252,256,258,264,269,271,280,281,282,284,286,291,296,301,303,307,310,315,316,319,321,323,327,331,332,334,335,337,338,],[49,-54,-127,-130,-131,-124,-17,-129,-53,-125,-167,-174,-128,-166,-126,-52,116,-10,137,-25,-173,146,-19,-73,-75,-69,-76,-177,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-176,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-150,-152,181,-175,-56,-85,-33,-34,-43,-38,-30,-37,-36,-31,-28,-44,-29,-12,-35,-32,211,212,-168,-115,-121,-151,-148,-165,-155,-153,-154,-178,-132,-11,-42,-13,-27,-26,-169,-20,-23,-22,-91,-80,-104,-105,-110,-179,-140,-57,-14,285,-21,-77,-149,-163,-141,-39,-40,-45,309,312,-83,-156,-164,-60,-46,326,-78,-84,-162,-157,-158,-189,-159,-190,-191,-198,-192,-199,]),'RESULT':([0,1,4,5,13,18,20,23,27,48,49,53,96,100,116,137,146,177,178,181,196,211,212,228,236,237,273,285,309,311,312,325,326,328,333,],[24,-6,-5,24,-4,-2,-8,-7,24,-3,-122,24,24,-143,-9,-24,-18,24,-144,24,24,-123,-188,24,24,24,24,24,24,24,24,24,24,24,24,]),'END':([1,4,13,18,20,23,48,49,116,137,146,211,212,311,325,328,333,],[-6,-5,-4,-2,-8,-7,-3,-122,-9,-24,-18,-123,-188,327,332,334,337,]),'BOOL':([22,45,46,57,125,136,201,207,230,254,270,278,279,313,],[-17,-15,123,123,123,123,123,-16,123,123,123,123,123,123,]),'LBRACKET':([8,14,22,28,32,35,39,40,42,43,59,60,61,62,67,68,69,70,71,72,73,74,77,80,84,87,88,89,90,93,95,105,127,133,145,151,187,214,222,232,240,243,258,303,315,],[-54,-51,-17,-53,-167,-61,115,-166,-55,-52,-73,-75,-69,-76,-74,-64,-62,-63,-72,-71,-79,-67,164,-61,-70,-51,-68,-66,-55,-65,-51,-56,201,206,-168,-61,-178,-169,-80,-179,-57,-51,-77,-60,-78,]),'READ':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[25,-6,-5,25,-4,-2,-8,-7,25,25,25,25,-3,-122,25,25,25,25,25,-116,25,-117,25,25,-143,25,25,-133,25,-9,-24,-18,25,-96,-99,-101,25,-95,-94,-92,-100,-93,-97,-102,-98,25,-108,25,-107,25,-106,25,-111,-112,-113,25,-144,25,-135,-137,-138,-136,-139,-134,25,25,25,25,25,-123,-188,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([2,7,9,10,14,22,24,25,30,31,33,34,36,41,54,63,81,83,85,87,92,95,98,103,104,112,115,118,119,121,123,124,128,130,132,134,139,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,243,245,257,261,262,267,268,269,276,277,278,280,281,287,293,297,298,301,],[-184,-180,-183,-182,54,-17,81,-186,-187,-181,81,103,81,-185,81,81,81,-116,81,54,-117,54,81,81,81,-133,81,-33,-34,-38,-37,-36,202,203,-35,-32,210,81,-96,-99,-101,81,-95,-94,-92,-100,-93,-97,-102,-98,81,-108,81,-107,81,-106,81,-111,-112,-113,-135,-137,-138,-136,-139,-134,81,81,81,81,81,81,81,81,81,81,81,277,203,81,81,81,202,203,-35,81,81,81,-39,-40,313,81,81,81,-35,]),'CHAR':([22,45,46,57,125,136,201,207,230,254,270,278,279,313,],[-17,-15,121,121,121,121,121,-16,121,121,121,121,121,121,]),'RPAREN':([8,22,28,32,40,43,54,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,103,105,118,119,120,121,122,123,124,126,128,129,130,132,134,142,143,144,145,150,151,165,186,187,200,210,214,219,222,223,224,227,232,240,247,248,251,253,255,258,277,280,281,282,288,289,291,303,304,305,307,308,314,315,316,329,336,],[-54,-17,-53,-167,-166,-52,145,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,187,-56,-33,-34,-43,-38,-30,-37,-36,-31,-28,-44,-29,-35,-32,-172,214,-170,-168,-115,-121,222,232,-178,-42,252,-169,-91,-80,-104,-105,-110,-179,-57,280,281,284,-193,-171,-77,145,-39,-40,-45,-195,-196,-83,-60,-41,-172,-46,-194,-197,-78,-84,335,338,]),'GT':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,163,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'DO':([0,1,4,5,13,18,20,23,27,48,49,53,96,100,116,137,146,177,178,181,196,211,212,228,236,237,273,285,309,311,312,325,326,328,333,],[27,-6,-5,27,-4,-2,-8,-7,27,-3,-122,27,27,-143,-9,-24,-18,27,-144,27,27,-123,-188,27,27,27,27,27,27,27,27,27,27,27,27,]),'BY':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,258,265,266,291,303,315,316,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-77,-160,298,-83,-60,-78,-84,]),'MINUS':([8,14,22,24,28,32,33,35,36,40,42,43,54,59,60,61,62,66,67,68,69,70,71,72,73,74,76,79,80,81,82,84,85,87,88,89,90,91,93,95,98,103,104,105,112,115,145,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,187,189,190,191,192,193,194,201,202,203,204,213,214,218,219,222,223,224,226,227,229,232,235,238,239,240,243,257,258,261,262,276,277,278,293,297,298,303,315,],[-54,-51,-17,83,-53,-167,83,106,83,-166,-55,-52,83,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-109,-119,-118,83,168,-70,83,-51,-68,-66,-55,-103,-65,-51,83,83,83,-56,-133,83,-168,83,-115,-121,-96,-99,-101,83,-95,-94,-92,-100,-93,-97,-102,-98,83,-108,83,-107,83,-106,83,-111,-112,-113,-178,-135,-137,-138,-136,-139,-134,83,83,83,83,83,-169,83,168,-80,-104,-105,83,-110,83,-179,83,83,83,-57,-51,83,-77,83,83,83,83,83,83,83,83,-60,-78,]),'NE':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,161,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'PRINT':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[30,-6,-5,30,-4,-2,-8,-7,30,30,30,30,-3,-122,30,30,30,30,30,-116,30,-117,30,30,-143,30,30,-133,30,-9,-24,-18,30,-96,-99,-101,30,-95,-94,-92,-100,-93,-97,-102,-98,30,-108,30,-107,30,-106,30,-111,-112,-113,30,-144,30,-135,-137,-138,-136,-139,-134,30,30,30,30,30,-123,-188,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ELSIF':([8,22,28,32,40,43,49,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,100,105,145,150,151,178,187,195,211,214,219,222,223,224,225,227,232,237,240,258,260,263,291,302,303,315,316,318,330,],[-54,-17,-53,-167,-166,-52,-122,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-143,-56,-168,-115,-121,-144,-178,235,-123,-169,-91,-80,-104,-105,261,-110,-179,-142,-57,-77,293,-86,-83,235,-60,-78,-84,-88,-89,]),'ASC':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[31,-6,-5,31,-4,-2,-8,-7,31,31,31,31,-3,-122,31,31,31,31,31,-116,31,-117,31,31,-143,31,31,-133,31,-9,-24,-18,31,-96,-99,-101,31,-95,-94,-92,-100,-93,-97,-102,-98,31,-108,31,-107,31,-106,31,-111,-112,-113,31,-144,31,-135,-137,-138,-136,-139,-134,31,31,31,31,31,-123,-188,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DOWN':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,145,150,151,182,187,214,219,222,223,224,227,232,240,258,265,266,291,299,303,315,316,320,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,231,-178,-169,-91,-80,-104,-105,-110,-179,-57,-77,-160,300,-83,322,-60,-78,-84,-161,]),'RETURN':([0,1,4,5,13,18,20,23,27,48,49,53,96,100,116,137,146,177,178,181,196,211,212,228,236,237,273,285,309,311,312,325,326,328,333,],[33,-6,-5,33,-4,-2,-8,-7,33,-3,-122,33,33,-143,-9,-24,-18,33,-144,33,33,-123,-188,33,33,33,33,33,33,33,33,33,33,33,33,]),'EQ':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,152,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-51,-77,-60,-78,]),'COMMA':([8,22,28,32,40,43,44,45,46,47,50,51,52,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,118,119,120,121,122,123,124,126,128,129,130,131,132,134,142,143,144,145,150,151,186,187,197,198,199,200,205,207,208,209,214,215,216,217,219,220,221,222,223,224,227,232,240,242,244,245,246,249,251,253,254,255,256,258,275,280,281,282,288,289,291,303,304,305,306,307,308,314,315,316,],[-54,-17,-53,-167,-166,-52,117,-15,135,-10,135,138,-25,147,135,-19,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-33,-34,-43,-38,-30,-37,-36,-31,-28,-44,-29,-12,-35,-32,-172,213,-170,-168,-115,-121,213,-178,-58,239,-11,-42,-13,-16,-27,-26,-169,-20,-23,-22,-91,-58,239,-80,-104,-105,-110,-179,-57,-50,278,-49,-47,-14,283,-193,135,-171,-21,-77,-59,-39,-40,-45,-195,-196,-83,-60,-41,-172,-48,-46,-194,-197,-78,-84,]),'IF':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,81,85,96,98,100,103,104,112,115,116,137,146,148,164,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[36,-6,-5,36,-4,-2,-8,-7,85,36,85,85,-3,-122,36,85,85,85,36,85,-143,85,85,-133,85,-9,-24,-18,85,85,36,-144,36,-135,-137,-138,-136,-139,-134,36,85,85,85,85,-123,-188,85,85,85,36,85,85,36,36,85,85,85,85,85,36,85,85,85,36,85,85,85,36,36,36,36,36,36,36,]),'TO':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,145,150,151,187,214,219,222,223,224,227,232,240,258,265,266,291,299,300,303,315,316,320,322,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,-178,-169,-91,-80,-104,-105,-110,-179,-57,-77,-160,297,-83,297,297,-60,-78,-84,-161,297,]),'SCONST':([24,33,36,54,63,81,83,85,92,98,103,104,112,115,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,189,190,191,192,193,194,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[62,62,62,62,62,62,-116,62,-117,62,62,62,-133,62,62,-96,-99,-101,62,-95,-94,-92,-100,-93,-97,-102,-98,62,-108,62,-107,62,-106,62,-111,-112,-113,-135,-137,-138,-136,-139,-134,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'THEN':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,113,114,145,150,151,171,187,214,219,222,223,224,227,232,240,258,272,291,294,303,315,316,317,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-85,196,-168,-115,-121,226,-178,-169,-91,-80,-104,-105,-110,-179,-57,-77,196,-83,226,-60,-78,-84,226,]),'RBRACKET':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,105,118,119,121,123,124,132,134,145,150,151,187,197,198,214,219,220,221,222,223,224,227,232,240,242,244,245,246,250,258,274,275,280,281,290,291,303,304,306,315,316,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-56,-33,-34,-38,-37,-36,-35,-32,-168,-115,-121,-178,-58,240,-169,-91,-58,258,-80,-104,-105,-110,-179,-57,-50,279,-49,-47,282,-77,303,-59,-39,-40,315,-83,-60,-41,-48,-78,-84,]),'CHARS':([22,45,46,57,125,136,207,254,279,313,],[-17,-15,133,133,133,133,-16,133,133,133,]),'LENGTH':([0,1,4,5,13,18,20,23,24,27,33,36,48,49,53,54,63,65,81,83,85,92,96,98,100,103,104,112,115,116,137,146,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,211,212,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[41,-6,-5,41,-4,-2,-8,-7,41,41,41,41,-3,-122,41,41,41,41,41,-116,41,-117,41,41,-143,41,41,-133,41,-9,-24,-18,41,-96,-99,-101,41,-95,-94,-92,-100,-93,-97,-102,-98,41,-108,41,-107,41,-106,41,-111,-112,-113,41,-144,41,-135,-137,-138,-136,-139,-134,41,41,41,41,41,-123,-188,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'OD':([49,96,100,178,211,228,],[-122,179,-143,-144,-123,264,]),'FOR':([27,],[101,]),'ID':([0,1,3,4,5,11,13,17,18,19,20,22,23,24,27,33,36,45,46,48,49,53,54,57,63,65,81,83,85,92,96,98,100,101,103,104,112,115,116,117,125,135,136,137,138,146,147,148,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,172,173,174,175,177,178,181,189,190,191,192,193,194,196,201,202,203,204,207,210,211,212,213,218,226,228,229,230,235,236,237,238,239,254,257,261,262,270,273,276,277,278,279,283,285,293,297,298,309,311,312,313,325,326,328,333,],[22,-6,22,-5,22,22,-4,22,-2,22,-8,-17,-7,22,22,22,22,-15,22,-3,-122,22,22,22,22,22,22,-116,22,-117,22,22,-143,22,22,22,-133,22,-9,22,22,22,22,-24,22,-18,22,22,-96,-99,-101,22,-95,-94,-92,-100,-93,-97,-102,-98,22,-108,22,-107,22,-106,22,-111,-112,-113,22,-144,22,-135,-137,-138,-136,-139,-134,22,22,22,22,22,-16,22,-123,-188,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ELSE':([8,22,28,32,40,43,49,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,86,87,88,89,90,91,93,100,105,145,150,151,178,187,195,211,214,219,222,223,224,225,227,232,237,240,258,260,263,291,302,303,315,316,318,330,],[-54,-17,-53,-167,-166,-52,-122,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,-81,-109,-119,-118,-90,-70,-82,-51,-68,-66,-55,-103,-65,-143,-56,-168,-115,-121,-144,-178,236,-123,-169,-91,-80,-104,-105,262,-110,-179,-142,-57,-77,262,-86,-83,236,-60,-78,-84,-88,-89,]),'IN':([8,22,28,32,40,43,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,79,80,82,84,87,88,89,90,91,93,105,145,150,151,182,187,214,219,222,223,224,227,231,232,240,243,258,303,315,],[-54,-17,-53,-167,-166,-52,-73,-75,-69,-76,-114,-74,-64,-62,-63,-72,-71,-120,-67,162,-109,-119,-118,-90,-70,-51,-68,-66,-55,-103,-65,-56,-168,-115,-121,230,-178,-169,-91,-80,-104,-105,-110,270,-179,-57,-51,-77,-60,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration_list':([3,],[44,]),'character_mode':([46,57,125,136,201,230,254,270,278,279,313,],[119,119,119,119,119,119,119,119,119,119,119,]),'string_mode':([46,57,125,136,254,279,313,],[120,120,120,120,120,120,120,]),'for_control':([27,],[94,]),'monadic_operator':([24,33,36,54,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'synonym_list':([19,],[56,]),'step_value':([266,],[299,]),'operand0':([24,33,36,54,81,85,98,103,104,115,148,164,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'constant_expression':([148,218,],[217,256,]),'value_array_element':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'elsif_expression':([225,],[260,]),'range_enumeration':([101,],[183,]),'array_mode':([46,57,125,136,254,279,313,],[129,129,129,129,129,129,129,]),'if_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'statement':([0,5,285,309,311,312,325,326,328,333,],[18,48,18,18,48,18,48,18,48,48,]),'empty_literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'builtin_call':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'builtin_name':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'procedure_statement':([0,5,285,309,311,312,325,326,328,333,],[23,23,23,23,23,23,23,23,23,23,]),'operator1':([75,],[155,]),'initialization':([131,],[205,]),'newmode_list':([11,],[51,]),'result':([24,33,],[78,102,]),'action_statement_list':([27,181,196,236,],[96,228,237,273,]),'operand1':([24,33,36,54,81,85,98,103,104,115,148,155,164,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[82,82,82,82,82,82,82,82,82,82,82,219,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'array_element':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'discrete_mode':([46,57,125,136,201,230,254,270,278,279,313,],[130,130,130,130,245,268,130,268,245,130,130,]),'step_enumeration':([101,],[185,]),'character_string_literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'location':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[35,35,80,35,80,80,35,80,80,151,80,80,35,80,80,80,80,80,80,80,80,80,80,35,35,35,80,80,80,80,80,80,80,35,80,80,35,35,80,80,80,80,80,35,80,80,80,35,80,80,80,35,35,35,35,35,35,35,]),'control_part':([27,],[99,]),'program':([0,],[38,]),'else_expression':([225,260,],[259,292,]),'string_concatenation_operator':([82,219,],[169,169,]),'discrete_range_mode':([46,57,125,136,201,230,254,270,278,279,313,],[132,132,132,132,132,269,132,301,132,132,132,]),'then_expression':([171,294,317,],[225,318,330,]),'procedure_call':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'integer_literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,206,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,250,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'integer_mode':([46,57,125,136,201,230,254,270,278,279,313,],[134,134,134,134,134,134,134,134,134,134,134,]),'membership_operator':([75,],[160,]),'bracketed_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'parenthesized_expression':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'return_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'newmode_statement':([0,5,285,309,311,312,325,326,328,333,],[1,1,1,1,1,1,1,1,1,1,]),'parameter_spec':([254,],[288,]),'synonym_statement':([0,5,285,309,311,312,325,326,328,333,],[4,4,4,4,4,4,4,4,4,4,]),'action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[6,6,6,140,6,140,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([24,33,36,54,81,85,98,103,104,115,148,164,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[64,64,113,142,165,113,113,142,188,197,216,220,241,241,241,249,142,216,263,265,113,274,275,290,113,295,304,305,241,113,319,320,]),'array_slice':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'reference_mode':([46,57,125,136,254,279,313,],[122,122,122,122,122,122,122,]),'statement_list':([0,285,309,312,326,],[5,311,325,328,333,]),'array_location':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'identifier_list':([3,11,19,117,138,147,210,283,],[46,50,57,46,50,57,254,254,]),'synonym_definition':([19,147,],[58,215,]),'exit_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operand4':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[66,66,66,66,150,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'parameter_list':([54,103,277,],[143,186,143,]),'boolean_expression':([36,85,98,235,261,293,],[114,171,180,272,294,317,]),'literal_range':([201,202,203,277,278,],[242,247,248,247,242,]),'composite_mode':([46,57,125,136,254,279,313,],[126,126,126,126,126,126,126,]),'literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'declaration':([3,117,],[47,199,]),'then_clause':([114,272,],[195,302,]),'arithmetic_additive_operator':([82,219,],[167,167,]),'end_value':([266,299,300,322,],[296,321,323,331,]),'array_primitive_value':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'do_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'index_mode':([201,278,],[246,306,]),'iteration':([101,],[184,]),'boolean_literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'mode_definition':([11,138,],[52,209,]),'value_array_slice':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'primitive_value':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'declaration_statement':([0,5,285,309,311,312,325,326,328,333,],[13,13,13,13,13,13,13,13,13,13,]),'while_control':([27,94,],[97,176,]),'arithmetic_multiplicative_operator':([91,223,224,],[172,172,172,]),'operand3':([24,33,36,54,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,227,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'procedure_definition':([53,],[141,]),'formal_parameter':([210,283,],[253,308,]),'referenced_location':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'result_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'list_index_mode':([201,],[244,]),'start_value':([229,],[266,]),'assigning_operator':([35,],[104,]),'call_action':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[42,42,90,42,90,90,42,90,90,90,90,90,42,90,90,90,90,90,90,90,90,90,90,42,42,42,90,90,90,90,90,90,90,42,90,90,42,42,90,90,90,90,90,42,90,90,90,42,90,90,90,42,42,42,42,42,42,42,]),'assignment_action':([0,5,27,53,96,177,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'boolean_mode':([46,57,125,136,201,230,254,270,278,279,313,],[118,118,118,118,118,118,118,118,118,118,118,]),'result_spec':([252,284,],[286,310,]),'expression_list':([115,164,],[198,221,]),'conditional_expression':([24,33,36,54,81,85,98,103,104,115,148,164,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'identifier':([0,3,5,11,17,19,24,27,33,36,46,53,54,57,63,65,81,85,96,98,101,103,104,115,117,125,135,136,138,147,148,155,164,167,169,172,177,181,196,201,202,203,204,210,213,218,226,228,229,230,235,236,237,238,239,254,257,261,262,270,273,276,277,278,279,283,285,293,297,298,309,311,312,313,325,326,328,333,],[14,45,14,45,55,45,87,95,87,87,128,87,87,128,87,87,87,87,95,87,182,87,87,87,45,128,207,128,45,45,87,87,87,87,87,87,87,95,95,243,87,87,87,45,87,87,87,95,87,267,87,95,95,87,87,128,87,87,87,267,95,87,87,243,128,45,14,87,87,87,14,14,14,128,14,14,14,14,]),'mode':([46,57,125,136,254,279,313,],[131,149,200,208,289,307,329,]),'character_literal':([24,33,36,54,63,81,85,98,103,104,115,148,155,164,167,169,172,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'relational_operator':([75,],[158,]),'action_statement':([0,5,27,96,181,196,228,236,237,273,285,309,311,312,325,326,328,333,],[20,20,100,178,100,100,178,100,178,178,20,20,20,20,20,20,20,20,]),'dereferenced_reference':([0,5,24,27,33,36,53,54,63,65,81,85,96,98,103,104,115,148,155,164,167,169,172,177,181,196,201,202,203,204,213,218,226,228,229,235,236,237,238,239,257,261,262,273,276,277,278,285,293,297,298,309,311,312,325,326,328,333,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'formal_parameter_list':([210,],[251,]),'parameter':([54,103,213,277,],[144,144,255,144,]),'operand2':([24,33,36,54,81,85,98,103,104,115,148,155,164,167,169,201,202,203,204,213,218,226,229,235,238,239,257,261,262,276,277,278,293,297,298,],[91,91,91,91,91,91,91,91,91,91,91,91,91,223,224,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'else_clause':([195,302,],[233,324,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',297),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',304),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',305),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',314),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',321),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',328),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',329),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',330),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',339),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',340),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',341),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',348),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',370),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',377),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',384),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',391),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',404),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',430),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',437),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',444),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',463),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',464),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',475),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',476),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',488),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',489),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',496),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',503),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',504),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',505),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',516),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',517),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',524),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',531),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',532),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',544),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',545),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',551),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',552),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',563),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',564),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',571),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',572),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',573),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',580),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',588),
  ('action -> bracketed_action','action',1,'p_action','parser.py',599),
  ('action -> assignment_action','action',1,'p_action','parser.py',600),
  ('action -> call_action','action',1,'p_action','parser.py',601),
  ('action -> exit_action','action',1,'p_action','parser.py',602),
  ('action -> return_action','action',1,'p_action','parser.py',603),
  ('action -> result_action','action',1,'p_action','parser.py',604),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',611),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',612),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',619),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',631),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',632),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',641),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',652),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',658),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',659),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',667),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',668),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',669),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',681),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',682),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',692),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',693),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',694),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',704),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',711),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',712),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',720),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',721),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',722),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',723),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',738),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',744),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',750),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','parser.py',756),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','parser.py',757),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',775),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',776),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',783),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',784),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',793),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',794),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',803),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',809),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',816),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',817),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',826),
  ('result -> expression','result',1,'p_result','parser.py',833),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',839),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',840),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',854),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',855),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',856),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',857),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',858),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',864),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',871),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',872),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',873),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',874),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',889),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',890),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',899),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',906),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',907),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',917),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',918),
]
