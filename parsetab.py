
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT DO FI UPPER DOWN SYN BOOL PROC FALSE IN WHILE LOWER RETURN ELSIF IF LENGTH NUM END NULL EXIT LOC ABS CHAR RETURNS INT TYPE CHARS BY THEN RESULT ELSE REF DCL PRINT FOR READ TRUE ASC OD TO ARRAYprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n                     | string_slice\n                     | string_element\n         dereferenced_reference : location ARROW\n         string_element : identifier LBRACKET start_element RBRACKET\n         start_element : expression\n         string_slice : identifier LBRACKET left_element COLON right_element RBRACKET \n         left_element : expression\n         right_element : expression\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'RPAREN':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,99,108,125,126,129,130,131,132,133,134,136,137,138,139,141,145,146,159,177,178,179,180,191,192,211,213,222,223,224,225,226,229,235,237,240,258,260,263,269,280,281,286,290,291,292,293,296,306,310,311,315,317,318,319,322,331,334,339,345,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,179,191,-36,-44,-31,-33,-37,-34,-29,-32,-43,-38,-28,-35,-30,222,-128,-122,-179,-177,-185,229,-175,235,-64,-42,-87,-98,-112,-111,-117,-186,-176,-59,278,291,292,-84,-178,-200,312,-67,191,-40,-39,-45,-90,-61,-203,-202,-41,-46,-179,-85,-91,-204,-201,344,348,]),'TYPE':([0,6,12,25,26,33,41,44,89,116,122,142,200,238,239,309,328,330,333,338,341,342,346,],[2,-2,-7,-4,-8,-6,2,-5,-129,-3,-24,-9,-18,-195,-130,2,2,2,2,2,2,2,2,]),'FALSE':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[55,55,55,55,-123,-124,55,55,55,55,-140,55,55,55,55,55,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,55,-113,55,-114,-115,55,-119,55,-120,-118,-141,-145,-144,-146,-142,-143,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'INT':([45,49,51,112,120,128,206,212,233,271,279,288,289,329,],[-17,-15,125,125,125,125,-16,125,125,125,125,125,125,125,]),'OR':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,149,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'BY':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,263,274,275,286,296,306,319,322,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-84,-167,304,-67,-90,-61,-85,-91,]),'MINUS':([1,5,11,14,18,19,21,24,27,30,31,38,43,45,50,55,56,61,62,63,64,65,66,67,68,69,70,73,74,75,77,78,79,80,81,82,83,84,85,87,88,91,94,97,99,100,107,108,109,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,179,191,199,203,209,210,211,212,214,215,217,222,223,224,225,226,227,229,230,234,235,236,237,242,247,257,262,263,265,267,286,287,288,290,298,302,304,306,319,],[-56,-53,57,-173,96,-55,-57,-174,-54,-52,-51,57,57,-17,57,-79,-80,-78,-74,-83,-126,-77,-70,57,-71,-73,-81,-125,-55,-127,-82,162,-75,-110,-121,-116,-69,57,-51,-72,-76,-58,57,-140,57,57,-51,57,57,57,-128,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,57,-122,-113,57,-114,-115,57,-119,57,-120,-118,-141,-145,-144,-146,-142,-143,-185,-175,-51,57,57,57,-64,57,57,57,57,-87,162,-112,-111,-117,57,-186,57,57,-176,57,-59,57,57,-51,57,-84,57,57,-67,57,57,57,57,57,57,-61,-85,]),'CCONST':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[70,70,70,70,-123,-124,70,70,70,70,-140,70,70,70,70,70,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,70,-113,70,-114,-115,70,-119,70,-120,-118,-141,-145,-144,-146,-142,-143,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'LT':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,151,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'LPAREN':([8,9,11,13,17,20,31,34,35,37,38,39,43,45,50,57,60,67,76,84,85,94,97,99,100,107,108,109,125,130,131,132,133,134,137,138,139,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,198,199,203,209,210,212,214,215,217,227,230,234,236,242,247,256,257,262,265,267,272,273,287,288,290,291,292,298,300,302,304,308,],[-193,-187,67,-191,-190,99,108,-189,-194,-188,67,-192,67,-17,67,-123,-124,67,67,67,108,67,-140,67,67,108,67,67,-36,-33,-37,-34,214,-32,-38,217,-35,67,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,67,-113,67,-114,-115,67,-119,67,-120,-118,-141,-145,-144,-146,-142,-143,240,108,67,67,67,67,67,67,67,67,67,67,67,67,67,214,290,67,67,67,214,217,67,67,67,-40,-39,67,214,67,67,329,]),'AND':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,150,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'TIMES':([1,5,14,18,19,21,24,27,30,31,45,55,56,61,62,63,64,65,66,68,69,70,73,74,75,77,79,80,81,82,83,85,87,88,91,107,146,159,179,191,199,211,222,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,98,-55,-57,-174,-54,-52,-51,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,-125,-55,-127,-82,-75,168,-121,-116,-69,-51,-72,-76,-58,-51,-128,-122,-185,-175,-51,-64,-87,168,168,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'NOT':([11,38,43,50,67,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[60,60,60,60,60,60,60,-140,60,60,60,60,60,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,60,-113,60,-114,-115,60,-119,60,-120,-118,-141,-145,-144,-146,-142,-143,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'DCL':([0,6,12,25,26,33,41,44,89,116,122,142,200,238,239,309,328,330,333,338,341,342,346,],[7,-2,-7,-4,-8,-6,7,-5,-129,-3,-24,-9,-18,-195,-130,7,7,7,7,7,7,7,7,]),'LAND':([1,5,14,18,19,21,24,27,30,31,45,55,56,61,62,63,64,65,66,68,69,70,73,74,75,77,78,79,80,81,82,83,85,87,88,91,107,146,159,179,191,199,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,95,-55,-57,-174,-54,-52,-51,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,-125,-55,-127,-82,163,-75,-110,-121,-116,-69,-51,-72,-76,-58,-51,-128,-122,-185,-175,-51,-64,-87,163,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'ICONST':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[61,61,61,61,-123,-124,61,61,61,61,-140,61,61,61,61,61,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,61,-113,61,-114,-115,61,-119,61,-120,-118,-141,-145,-144,-146,-142,-143,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'THEN':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,114,115,146,159,169,179,191,211,222,223,224,225,226,229,235,237,263,283,286,295,296,306,319,321,322,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-92,204,-128,-122,227,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-84,204,-67,227,-90,-61,-85,227,-91,]),'REF':([45,49,51,112,120,128,206,279,289,329,],[-17,-15,128,128,128,128,-16,128,128,128,]),'ABS':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[9,-2,9,-7,9,-4,-8,-6,9,9,9,-5,9,-123,-124,9,9,9,9,-129,9,-140,9,9,-150,9,9,9,9,-3,-24,-9,9,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,9,-113,9,-114,-115,9,-119,9,-120,-118,-141,-145,-144,-146,-142,-143,9,-151,9,-18,9,9,9,9,9,9,9,9,9,9,9,9,9,-195,-130,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'COMMA':([1,5,14,21,24,27,30,45,46,47,48,49,51,52,53,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,111,112,113,123,124,125,126,129,130,131,132,133,134,135,136,137,138,139,141,146,159,177,178,179,180,191,192,206,207,208,211,213,216,219,220,221,222,223,224,225,226,229,235,237,241,243,244,251,253,254,255,256,259,263,269,279,280,281,282,286,291,292,293,296,306,310,311,315,316,317,318,319,322,331,334,],[-56,-53,-173,-57,-174,-54,-52,-17,119,-25,121,-15,119,-10,143,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,201,119,-19,-65,210,-36,-44,-31,-33,-37,-34,-29,-32,-12,-43,-38,-28,-35,-30,-128,-122,-179,-177,-185,230,-175,230,-16,-27,-26,-64,-42,-13,-11,-65,210,-87,-98,-112,-111,-117,-186,-176,-59,-20,-23,-22,-66,-47,288,-50,-49,-14,-84,-178,119,-200,313,-21,-67,-40,-39,-45,-90,-61,-203,-202,-41,-48,-46,-179,-85,-91,-204,-201,]),'SCONST':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[63,63,63,63,-123,-124,63,63,63,63,-140,63,63,63,63,63,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,63,-113,63,-114,-115,63,-119,63,-120,-118,-141,-145,-144,-146,-142,-143,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'OD':([89,102,105,189,231,239,],[-129,-150,188,-151,270,-130,]),'RESULT':([0,6,12,22,25,26,33,41,44,89,102,105,110,116,122,142,183,189,190,200,204,231,238,239,245,248,284,309,328,330,333,338,341,342,346,],[11,-2,-7,11,-4,-8,-6,11,-5,-129,-150,11,11,-3,-24,-9,11,-151,11,-18,11,11,-195,-130,11,11,11,11,11,11,11,11,11,11,11,]),'PLUS':([1,5,14,18,19,21,24,27,30,31,45,55,56,61,62,63,64,65,66,68,69,70,73,74,75,77,78,79,80,81,82,83,85,87,88,91,107,146,159,179,191,199,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,90,-55,-57,-174,-54,-52,-51,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,-125,-55,-127,-82,160,-75,-110,-121,-116,-69,-51,-72,-76,-58,-51,-128,-122,-185,-175,-51,-64,-87,160,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'NULL':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[77,77,77,77,-123,-124,77,77,77,77,-140,77,77,77,77,77,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,77,-113,77,-114,-115,77,-119,77,-120,-118,-141,-145,-144,-146,-142,-143,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'WHILE':([1,5,14,21,22,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,101,125,130,131,132,134,137,139,146,159,179,184,185,187,191,211,222,223,224,225,226,229,235,237,263,272,286,291,292,296,300,303,306,319,322,323,324,327,337,],[-56,-53,-173,-57,100,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,100,-36,-33,-37,-34,-32,-38,-35,-128,-122,-185,-160,-162,-161,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-84,-170,-67,-40,-39,-90,-171,-163,-61,-85,-91,-165,-169,-164,-166,]),'MODULO':([1,5,14,18,19,21,24,27,30,31,45,55,56,61,62,63,64,65,66,68,69,70,73,74,75,77,79,80,81,82,83,85,87,88,91,107,146,159,179,191,199,211,222,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,92,-55,-57,-174,-54,-52,-51,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,-125,-55,-127,-82,-75,167,-121,-116,-69,-51,-72,-76,-58,-51,-128,-122,-185,-175,-51,-64,-87,167,167,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'SEMI':([1,3,5,10,14,15,16,19,21,23,24,27,28,29,30,40,43,45,47,48,52,53,54,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,86,87,88,91,101,103,106,111,113,114,117,118,125,126,129,130,131,132,133,134,135,136,137,138,139,141,146,159,173,179,181,182,184,185,187,188,191,196,197,207,208,211,213,216,219,222,223,224,225,226,229,235,237,241,243,244,246,259,263,270,272,278,282,285,286,291,292,293,296,300,303,306,307,312,317,319,322,323,324,327,332,337,340,343,344,347,348,349,],[-56,-137,-53,-132,-173,-131,89,-133,-57,-134,-174,-54,-138,-135,-52,-136,-181,-17,-25,122,-10,142,-184,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-183,-72,-76,-58,-157,183,-159,200,-19,-92,-180,-182,-36,-44,-31,-33,-37,-34,-29,-32,-12,-43,-38,-28,-35,-30,-128,-122,-139,-185,-172,-158,-160,-162,-161,-155,-175,238,239,-27,-26,-64,-42,-13,-11,-87,-98,-112,-111,-117,-186,-176,-59,-20,-23,-22,-147,-14,-84,-156,-170,309,-21,-148,-67,-40,-39,-45,-90,-171,-163,-61,328,333,-46,-85,-91,-165,-169,-164,341,-166,-196,-198,-205,-197,-206,-199,]),'EQUALS':([1,5,14,18,19,21,24,27,30,31,45,46,49,90,91,92,93,95,96,98,107,112,125,126,129,130,131,132,133,134,135,136,137,138,139,141,179,186,191,199,202,206,211,213,229,235,237,286,291,292,293,306,317,],[-56,-53,-173,97,-55,-57,-174,-54,-52,-51,-17,120,-15,170,-58,171,172,174,175,176,-51,203,-36,-44,-31,-33,-37,-34,-29,-32,215,-43,-38,-28,-35,-30,-185,234,-175,-51,242,-16,-64,-42,-186,-176,-59,-67,-40,-39,-45,-61,-46,]),'CHARS':([45,49,51,112,120,128,206,279,289,329,],[-17,-15,140,140,140,140,-16,140,140,140,]),'GT':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,148,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'UPPER':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[17,-2,17,-7,17,-4,-8,-6,17,17,17,-5,17,-123,-124,17,17,17,17,-129,17,-140,17,17,-150,17,17,17,17,-3,-24,-9,17,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,17,-113,17,-114,-115,17,-119,17,-120,-118,-141,-145,-144,-146,-142,-143,17,-151,17,-18,17,17,17,17,17,17,17,17,17,17,17,17,17,-195,-130,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'TO':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,263,274,275,286,296,301,305,306,319,322,325,326,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-84,-167,302,-67,-90,302,302,-61,-85,-91,-168,302,]),'DIVIDE':([1,5,14,18,19,21,24,27,30,31,45,55,56,61,62,63,64,65,66,68,69,70,73,74,75,77,79,80,81,82,83,85,87,88,91,107,146,159,179,191,199,211,222,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,93,-55,-57,-174,-54,-52,-51,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,-125,-55,-127,-82,-75,165,-121,-116,-69,-51,-72,-76,-58,-51,-128,-122,-185,-175,-51,-64,-87,165,165,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'DO':([0,6,12,22,25,26,33,41,44,89,102,105,110,116,122,142,183,189,190,200,204,231,238,239,245,248,284,309,328,330,333,338,341,342,346,],[22,-2,-7,22,-4,-8,-6,22,-5,-129,-150,22,22,-3,-24,-9,22,-151,22,-18,22,22,-195,-130,22,22,22,22,22,22,22,22,22,22,22,]),'BOOL':([45,49,51,112,120,128,206,212,233,271,279,288,289,329,],[-17,-15,131,131,131,131,-16,131,131,131,131,131,131,131,]),'IF':([0,6,11,12,22,25,26,33,38,41,43,44,50,67,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[38,-2,84,-7,38,-4,-8,-6,84,38,84,-5,84,84,84,-129,84,-140,84,84,-150,38,84,84,38,-3,-24,-9,84,-141,-145,-144,-146,-142,-143,38,-151,38,-18,84,38,84,84,84,84,84,84,84,84,38,84,84,-195,-130,84,38,84,38,84,84,84,38,84,84,84,84,84,84,38,38,38,38,38,38,38,38,]),'DOWN':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,186,191,211,222,223,224,225,226,229,235,237,263,274,275,286,296,305,306,319,322,325,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,232,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-84,-167,301,-67,-90,326,-61,-85,-91,-168,]),'CHAR':([45,49,51,112,120,128,206,212,233,271,279,288,289,329,],[-17,-15,137,137,137,137,-16,137,137,137,137,137,137,137,]),'TRUE':([11,38,43,50,57,60,67,76,84,94,97,99,100,108,109,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[56,56,56,56,-123,-124,56,56,56,56,-140,56,56,56,56,56,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,56,-113,56,-114,-115,56,-119,56,-120,-118,-141,-145,-144,-146,-142,-143,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LOWER':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[13,-2,13,-7,13,-4,-8,-6,13,13,13,-5,13,-123,-124,13,13,13,13,-129,13,-140,13,13,-150,13,13,13,13,-3,-24,-9,13,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,13,-113,13,-114,-115,13,-119,13,-120,-118,-141,-145,-144,-146,-142,-143,13,-151,13,-18,13,13,13,13,13,13,13,13,13,13,13,13,13,-195,-130,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ELSIF':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,89,91,102,146,159,179,189,191,205,211,222,223,224,225,226,228,229,235,237,239,245,263,264,268,286,296,306,314,319,320,322,336,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-129,-58,-150,-128,-122,-185,-151,-175,247,-64,-87,-98,-112,-111,-117,265,-186,-176,-59,-130,-149,-84,-93,298,-67,-90,-61,247,-85,-95,-91,-96,]),'EQ':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,152,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'FOR':([22,],[104,]),'FI':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,89,91,102,146,159,179,189,191,205,211,222,223,224,225,226,229,235,237,239,245,249,263,266,284,286,296,297,299,306,314,319,322,335,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-129,-58,-150,-128,-122,-185,-151,-175,246,-64,-87,-98,-112,-111,-117,-186,-176,-59,-130,-149,285,-84,296,-152,-67,-90,-94,322,-61,-153,-85,-91,-154,]),'ARRAY':([45,49,51,112,120,128,206,279,289,329,],[-17,-15,127,127,127,127,-16,127,127,127,]),'LENGTH':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[39,-2,39,-7,39,-4,-8,-6,39,39,39,-5,39,-123,-124,39,39,39,39,-129,39,-140,39,39,-150,39,39,39,39,-3,-24,-9,39,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,39,-113,39,-114,-115,39,-119,39,-120,-118,-141,-145,-144,-146,-142,-143,39,-151,39,-18,39,39,39,39,39,39,39,39,39,39,39,39,39,-195,-130,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'RETURNS':([278,312,],[308,308,]),'END':([6,12,25,26,33,44,89,116,122,142,200,238,239,330,338,342,346,],[-2,-7,-4,-8,-6,-5,-129,-3,-24,-9,-18,-195,-130,340,343,347,349,]),'COLON':([1,5,14,21,24,27,30,31,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,107,123,146,159,179,191,193,194,211,220,222,223,224,225,226,229,235,237,252,257,263,286,296,306,318,319,322,],[-56,-53,-173,-57,-174,-54,-52,110,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,190,209,-128,-122,-185,-175,-62,236,-64,262,-87,-98,-112,-111,-117,-186,-176,-59,287,-51,-84,-67,-90,-61,287,-85,-91,]),'LEQ':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,156,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'RBRACKET':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,123,124,125,130,131,132,134,137,139,146,159,179,191,193,195,211,220,221,222,223,224,225,226,229,235,237,250,251,253,254,255,256,261,263,276,277,286,291,292,294,296,306,315,316,319,322,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-65,211,-36,-33,-37,-34,-32,-38,-35,-128,-122,-185,-175,-60,237,-64,-65,263,-87,-98,-112,-111,-117,-186,-176,-59,286,-66,-47,289,-50,-49,293,-84,-63,306,-67,-40,-39,319,-90,-61,-41,-48,-85,-91,]),'NUM':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[34,-2,34,-7,34,-4,-8,-6,34,34,34,-5,34,-123,-124,34,34,34,34,-129,34,-140,34,34,-150,34,34,34,34,-3,-24,-9,34,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,34,-113,34,-114,-115,34,-119,34,-120,-118,-141,-145,-144,-146,-142,-143,34,-151,34,-18,34,34,34,34,34,34,34,34,34,34,34,34,34,-195,-130,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'PRINT':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[35,-2,35,-7,35,-4,-8,-6,35,35,35,-5,35,-123,-124,35,35,35,35,-129,35,-140,35,35,-150,35,35,35,35,-3,-24,-9,35,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,35,-113,35,-114,-115,35,-119,35,-120,-118,-141,-145,-144,-146,-142,-143,35,-151,35,-18,35,35,35,35,35,35,35,35,35,35,35,35,35,-195,-130,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'$end':([6,12,25,26,32,33,41,44,89,116,122,142,200,238,239,],[-2,-7,-4,-8,0,-6,-1,-5,-129,-3,-24,-9,-18,-195,-130,]),'SYN':([0,6,12,25,26,33,41,44,89,116,122,142,200,238,239,309,328,330,333,338,341,342,346,],[36,-2,-7,-4,-8,-6,36,-5,-129,-3,-24,-9,-18,-195,-130,36,36,36,36,36,36,36,36,]),'ASC':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[37,-2,37,-7,37,-4,-8,-6,37,37,37,-5,37,-123,-124,37,37,37,37,-129,37,-140,37,37,-150,37,37,37,37,-3,-24,-9,37,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,37,-113,37,-114,-115,37,-119,37,-120,-118,-141,-145,-144,-146,-142,-143,37,-151,37,-18,37,37,37,37,37,37,37,37,37,37,37,37,37,-195,-130,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'PROC':([110,],[198,]),'LOC':([45,125,126,129,130,131,132,133,134,136,137,138,139,141,213,291,292,293,310,317,339,],[-17,-36,-44,-31,-33,-37,-34,-29,-32,-43,-38,-28,-35,-30,-42,-40,-39,-45,331,-46,345,]),'READ':([0,6,11,12,22,25,26,33,38,41,43,44,50,57,60,67,71,76,84,89,94,97,99,100,102,105,108,109,110,116,122,142,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,203,204,209,210,212,214,215,217,227,230,231,234,236,238,239,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[8,-2,8,-7,8,-4,-8,-6,8,8,8,-5,8,-123,-124,8,8,8,8,-129,8,-140,8,8,-150,8,8,8,8,-3,-24,-9,8,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,8,-113,8,-114,-115,8,-119,8,-120,-118,-141,-145,-144,-146,-142,-143,8,-151,8,-18,8,8,8,8,8,8,8,8,8,8,8,8,8,-195,-130,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ELSE':([1,5,14,21,24,27,30,45,55,56,59,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,89,91,102,146,159,179,189,191,205,211,222,223,224,225,226,228,229,235,237,239,245,263,264,268,286,296,306,314,319,320,322,336,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-89,-78,-74,-83,-126,-77,-70,-71,-73,-81,-88,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-129,-58,-150,-128,-122,-185,-151,-175,248,-64,-87,-98,-112,-111,-117,267,-186,-176,-59,-130,-149,-84,-93,267,-67,-90,-61,248,-85,-95,-91,-96,]),'IN':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,186,191,211,222,223,224,225,226,229,232,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,153,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,233,-175,-64,-87,-98,-112,-111,-117,-186,271,-176,-59,-51,-84,-67,-61,-85,]),'EXIT':([0,6,12,22,25,26,33,41,44,89,102,105,110,116,122,142,183,189,190,200,204,231,238,239,245,248,284,309,328,330,333,338,341,342,346,],[42,-2,-7,42,-4,-8,-6,42,-5,-129,-150,42,42,-3,-24,-9,42,-151,42,-18,42,42,-195,-130,42,42,42,42,42,42,42,42,42,42,42,]),'ARROW':([1,5,11,14,18,19,21,24,27,30,31,38,43,45,50,57,60,67,73,74,76,84,85,91,94,97,99,100,107,108,109,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,179,191,199,203,209,210,211,212,214,215,217,227,229,230,234,235,236,237,242,247,257,262,265,267,286,287,288,290,298,302,304,306,],[-56,-53,71,-173,91,-55,-57,-174,-54,-52,-51,71,71,-17,71,-123,-124,71,91,-55,71,71,-51,-58,71,-140,71,71,-51,71,71,71,91,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,71,-113,71,-114,-115,71,-119,71,-120,-118,-141,-145,-144,-146,-142,-143,-185,-175,-51,71,71,71,-64,71,71,71,71,71,-186,71,71,-176,71,-59,71,71,-51,71,71,71,-67,71,71,71,71,71,71,-61,]),'LBRACKET':([1,4,5,14,18,19,21,24,27,30,31,45,55,56,58,61,62,63,65,66,68,69,70,73,74,75,77,79,83,85,87,88,91,107,127,140,146,179,191,199,211,222,229,235,237,257,263,286,306,319,],[-56,50,-53,-173,-68,-55,-57,-174,-54,-52,109,-17,-79,-80,144,-78,-74,-83,-77,-70,-71,-73,-81,-68,-55,-86,-82,-75,-69,109,-72,-76,-58,109,212,218,-68,-185,-175,109,-64,-87,-186,-176,-59,109,-84,-67,-61,-85,]),'GEQ':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,147,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'RETURN':([0,6,12,22,25,26,33,41,44,89,102,105,110,116,122,142,183,189,190,200,204,231,238,239,245,248,284,309,328,330,333,338,341,342,346,],[43,-2,-7,43,-4,-8,-6,43,-5,-129,-150,43,43,-3,-24,-9,43,-151,43,-18,43,43,-195,-130,43,43,43,43,43,43,43,43,43,43,43,]),'NE':([1,5,14,21,24,27,30,45,55,56,61,62,63,64,65,66,68,69,70,72,73,74,75,77,78,79,80,81,82,83,85,87,88,91,146,159,179,191,211,222,223,224,225,226,229,235,237,257,263,286,306,319,],[-56,-53,-173,-57,-174,-54,-52,-17,-79,-80,-78,-74,-83,-126,-77,-70,-71,-73,-81,155,-125,-55,-127,-82,-97,-75,-110,-121,-116,-69,-51,-72,-76,-58,-128,-122,-185,-175,-64,-87,-98,-112,-111,-117,-186,-176,-59,-51,-84,-67,-61,-85,]),'ID':([0,2,6,7,11,12,22,25,26,33,36,38,41,42,43,44,45,49,50,51,57,60,67,71,76,84,89,94,97,99,100,102,104,105,108,109,110,112,116,119,120,121,122,128,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,170,171,172,174,175,176,183,189,190,200,201,203,204,206,209,210,212,214,215,217,227,230,231,233,234,236,238,239,240,242,245,247,248,262,265,267,271,279,284,287,288,289,290,298,302,304,309,313,328,329,330,333,338,341,342,346,],[45,45,-2,45,45,-7,45,-4,-8,-6,45,45,45,45,45,-5,-17,-15,45,45,-123,-124,45,45,45,45,-129,45,-140,45,45,-150,45,45,45,45,45,45,-3,45,45,45,-24,45,-9,45,45,-106,-105,-102,-101,-107,-103,-109,-99,-104,-108,-100,45,-113,45,-114,-115,45,-119,45,-120,-118,-141,-145,-144,-146,-142,-143,45,-151,45,-18,45,45,45,-16,45,45,45,45,45,45,45,45,45,45,45,45,-195,-130,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_spec':([279,],[311,]),'value_array_slice':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expression_list':([50,144,],[124,221,]),'statement':([0,41,309,328,330,333,338,341,342,346,],[6,116,6,6,116,6,116,6,116,116,]),'synonym_list':([36,],[111,]),'parenthesized_expression':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'boolean_literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'for_control':([22,],[101,]),'operator1':([72,],[158,]),'iteration':([104,],[184,]),'value_array_element':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'procedure_call':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'index_mode':([212,288,],[253,316,]),'action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[16,16,16,16,197,16,197,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'initialization':([135,],[216,]),'list_index_mode':([212,],[254,]),'start_value':([234,],[275,]),'location':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[18,73,18,73,18,73,73,73,146,73,73,73,73,73,18,73,73,18,73,73,73,73,73,18,18,73,18,73,73,73,73,73,73,73,73,18,73,73,73,18,73,18,73,73,73,18,73,73,73,73,73,73,18,18,18,18,18,18,18,18,]),'newmode_list':([2,],[48,]),'primitive_value':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'string_element':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'else_clause':([205,314,],[249,335,]),'declaration_list':([7,],[53,]),'synonym_statement':([0,41,309,328,330,333,338,341,342,346,],[44,44,44,44,44,44,44,44,44,44,]),'constant_expression':([203,242,],[244,282,]),'exit_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'identifier_list':([2,7,36,121,143,201,240,313,],[46,51,112,46,51,112,279,279,]),'declaration_statement':([0,41,309,328,330,333,338,341,342,346,],[25,25,25,25,25,25,25,25,25,25,]),'action_statement':([0,22,41,105,183,204,231,245,248,284,309,328,330,333,338,341,342,346,],[26,102,26,189,102,102,189,189,102,189,26,26,26,26,26,26,26,26,]),'operand3':([11,38,43,50,67,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,226,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'elsif_expression':([228,],[268,]),'start_element':([109,],[195,]),'character_literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'do_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'left_element':([109,],[194,]),'operand2':([11,38,43,50,67,84,94,99,100,108,109,144,158,161,164,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[80,80,80,80,80,80,80,80,80,80,80,80,80,224,225,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'composite_mode':([51,112,120,128,279,289,329,],[129,129,129,129,129,129,129,]),'referenced_location':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'newmode_statement':([0,41,309,328,330,333,338,341,342,346,],[33,33,33,33,33,33,33,33,33,33,]),'operand4':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[81,81,81,81,81,159,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'parameter_list':([99,108,290,],[180,192,192,]),'control_part':([22,],[103,]),'discrete_mode':([51,112,120,128,212,233,271,279,288,289,329,],[133,133,133,133,256,272,300,133,256,133,133,]),'literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,261,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'range_enumeration':([104,],[185,]),'identifier':([0,2,7,11,22,36,38,41,42,43,50,51,67,71,76,84,94,99,100,104,105,108,109,110,112,119,120,121,128,143,144,158,161,164,166,183,190,201,203,204,209,210,212,214,215,217,227,230,231,233,234,236,240,242,245,247,248,262,265,267,271,279,284,287,288,289,290,298,302,304,309,313,328,329,330,333,338,341,342,346,],[31,49,49,85,107,49,85,31,117,85,85,138,85,85,85,85,85,85,85,186,107,85,85,199,138,206,138,49,138,49,85,85,85,85,85,107,199,49,85,107,85,85,257,85,85,85,85,85,107,273,85,85,49,85,107,85,107,85,85,85,273,138,107,85,257,138,85,85,85,85,31,49,31,138,31,31,31,31,31,31,]),'formal_parameter':([240,313,],[280,334,]),'result_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'relational_operator':([72,],[154,]),'result_spec':([278,312,],[307,332,]),'membership_operator':([72,],[157,]),'expression':([11,38,43,50,67,84,94,99,100,108,109,144,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[54,114,54,123,145,114,173,177,114,177,193,220,243,250,251,252,252,259,252,264,177,274,276,243,114,294,114,297,315,252,318,114,324,325,]),'if_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'array_location':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'array_element':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'array_primitive_value':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'arithmetic_additive_operator':([78,223,],[164,164,]),'step_enumeration':([104,],[187,]),'conditional_expression':([11,38,43,50,67,84,94,99,100,108,109,144,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'literal_range':([212,214,217,288,290,],[255,258,260,255,260,]),'declaration':([7,143,],[52,219,]),'procedure_definition':([110,],[196,]),'boolean_mode':([51,112,120,128,212,233,271,279,288,289,329,],[130,130,130,130,130,130,130,130,130,130,130,]),'character_string_literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'while_control':([22,101,],[106,182,]),'integer_mode':([51,112,120,128,212,233,271,279,288,289,329,],[134,134,134,134,134,134,134,134,134,134,134,]),'mode_definition':([2,121,],[47,208,]),'integer_literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'right_element':([236,],[277,]),'discrete_range_mode':([51,112,120,128,212,233,271,279,288,289,329,],[139,139,139,139,139,139,139,139,139,139,139,]),'bracketed_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'operand0':([11,38,43,50,67,84,94,99,100,108,109,144,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'call_action':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[19,74,19,74,19,74,74,74,74,74,74,74,74,74,19,74,74,19,74,74,74,74,74,19,19,74,19,74,74,74,74,74,74,74,74,19,74,74,74,19,74,19,74,74,74,19,74,74,74,74,74,74,19,19,19,19,19,19,19,19,]),'builtin_name':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'reference_mode':([51,112,120,128,279,289,329,],[141,141,141,141,141,141,141,]),'then_clause':([115,283,],[205,314,]),'procedure_statement':([0,41,309,328,330,333,338,341,342,346,],[12,12,12,12,12,12,12,12,12,12,]),'builtin_call':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'monadic_operator':([11,38,43,50,67,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'step_value':([275,],[305,]),'action_statement_list':([22,183,204,248,],[105,231,245,284,]),'operand1':([11,38,43,50,67,84,94,99,100,108,109,144,158,203,209,210,212,214,215,217,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[78,78,78,78,78,78,78,78,78,78,78,78,223,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'array_slice':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'assigning_operator':([18,],[94,]),'return_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'string_concatenation_operator':([78,223,],[161,161,]),'dereferenced_reference':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'end_value':([275,301,305,326,],[303,323,327,337,]),'array_mode':([51,112,120,128,279,289,329,],[126,126,126,126,126,126,126,]),'program':([0,],[32,]),'parameter':([99,108,230,290,],[178,178,269,178,]),'character_mode':([51,112,120,128,212,233,271,279,288,289,329,],[132,132,132,132,132,132,132,132,132,132,132,]),'else_expression':([228,268,],[266,299,]),'mode':([51,112,120,128,279,289,329,],[135,202,207,213,310,317,339,]),'synonym_definition':([36,201,],[113,241,]),'assignment_action':([0,22,41,105,110,183,190,204,231,245,248,284,309,328,330,333,338,341,342,346,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'result':([11,43,],[86,118,]),'arithmetic_multiplicative_operator':([80,224,225,],[166,166,166,]),'statement_list':([0,309,328,333,341,],[41,330,338,342,346,]),'then_expression':([169,295,321,],[228,320,336,]),'formal_parameter_list':([240,],[281,]),'empty_literal':([11,38,43,50,67,76,84,94,99,100,108,109,144,158,161,164,166,203,209,210,212,214,215,217,218,227,230,234,236,242,247,262,265,267,287,288,290,298,302,304,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'string_slice':([0,11,22,38,41,43,50,67,71,76,84,94,99,100,105,108,109,110,144,158,161,164,166,183,190,203,204,209,210,212,214,215,217,227,230,231,234,236,242,245,247,248,262,265,267,284,287,288,290,298,302,304,309,328,330,333,338,341,342,346,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'string_mode':([51,112,120,128,279,289,329,],[136,136,136,136,136,136,136,]),'boolean_expression':([38,84,100,247,265,298,],[115,169,181,283,295,321,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',45),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',46),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',55),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',56),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',65),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',85),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',91),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',92),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',101),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',102),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',111),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> identifier','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',151),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',157),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',163),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',169),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',176),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',181),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',204),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',209),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',210),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',218),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',219),
  ('location -> identifier','location',1,'p_location','parser.py',225),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',226),
  ('location -> array_element','location',1,'p_location','parser.py',227),
  ('location -> array_slice','location',1,'p_location','parser.py',228),
  ('location -> call_action','location',1,'p_location','parser.py',229),
  ('location -> string_slice','location',1,'p_location','parser.py',230),
  ('location -> string_element','location',1,'p_location','parser.py',231),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',237),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',243),
  ('start_element -> expression','start_element',1,'p_start_element','parser.py',250),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',256),
  ('left_element -> expression','left_element',1,'p_left_element','parser.py',262),
  ('right_element -> expression','right_element',1,'p_right_element','parser.py',268),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',274),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',280),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',281),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',290),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',296),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',302),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',303),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',304),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',305),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',311),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',312),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',313),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',314),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',315),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',321),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',327),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',328),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',334),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',340),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',346),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',352),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',358),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',364),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',370),
  ('expression -> operand0','expression',1,'p_expression','parser.py',376),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',377),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',383),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',384),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',393),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',399),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',405),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',411),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',412),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',422),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',432),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',433),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',439),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',440),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',441),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',446),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',452),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',458),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',459),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',460),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',471),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',483),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',496),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',501),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',502),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',512),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',513),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',519),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',520),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',521),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',528),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',534),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',535),
  ('action -> bracketed_action','action',1,'p_action','parser.py',544),
  ('action -> assignment_action','action',1,'p_action','parser.py',545),
  ('action -> call_action','action',1,'p_action','parser.py',546),
  ('action -> exit_action','action',1,'p_action','parser.py',547),
  ('action -> return_action','action',1,'p_action','parser.py',548),
  ('action -> result_action','action',1,'p_action','parser.py',549),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',555),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',556),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',562),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',568),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',569),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',570),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',571),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',572),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',573),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',574),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',582),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',583),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',592),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',597),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',598),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',606),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',607),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',608),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',619),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',620),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',629),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',630),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',631),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',640),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',646),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',647),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',653),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',654),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',655),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',656),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',670),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',676),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',682),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',688),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',689),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',698),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',704),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',705),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',711),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',712),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',720),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',721),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',736),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',742),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',743),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',751),
  ('result -> expression','result',1,'p_result','parser.py',757),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',763),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',764),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',774),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',775),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',776),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',777),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',778),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',779),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',780),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',781),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',787),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',793),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',794),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',795),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',796),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',810),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',811),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',820),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',826),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',827),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',836),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',837),
]
