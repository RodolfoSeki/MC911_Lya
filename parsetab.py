
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT PROC TO LOC END EXIT LENGTH SYN FOR FI NULL LOWER ELSE DOWN ARRAY PRINT RETURN TRUE OD FALSE DCL NUM RESULT ASC READ IF BOOL IN BY INT TYPE RETURNS DO REF CHAR WHILE ELSIF THEN UPPER CHARS ABSprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'CHAR':([6,45,47,96,126,196,205,207,229,263,266,279,280,318,],[-17,-15,118,118,118,118,118,-16,118,118,118,118,118,118,]),'DOWN':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,105,138,159,167,172,175,209,210,213,216,222,223,227,238,258,269,270,283,301,302,309,310,320,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-56,-178,-115,-121,-168,228,-179,-110,-91,-80,-104,-105,-169,-57,-77,-160,297,-83,322,-60,-84,-78,-161,]),'LT':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,146,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'OR':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,152,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'DCL':([0,7,11,17,27,28,41,43,97,107,116,184,198,224,225,294,315,316,317,325,326,327,331,],[1,-4,-5,1,-2,-8,-7,-6,-3,-122,-9,-18,-24,-188,-123,1,1,1,1,1,1,1,1,]),'READ':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[8,8,-4,8,-5,8,-2,-8,8,-7,8,-6,8,8,-117,8,8,-116,8,8,8,8,8,-143,-3,8,-133,-122,8,-9,8,-113,-111,-112,-92,-100,-98,-93,-102,8,-94,-95,-96,-97,-99,-101,8,8,8,-107,-108,-106,8,8,8,-144,-18,8,-134,-138,-139,-135,-136,-137,-24,8,8,8,8,8,8,8,8,8,-188,-123,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ABS':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[13,13,-4,13,-5,13,-2,-8,13,-7,13,-6,13,13,-117,13,13,-116,13,13,13,13,13,-143,-3,13,-133,-122,13,-9,13,-113,-111,-112,-92,-100,-98,-93,-102,13,-94,-95,-96,-97,-99,-101,13,13,13,-107,-108,-106,13,13,13,-144,-18,13,-134,-138,-139,-135,-136,-137,-24,13,13,13,13,13,13,13,13,13,-188,-123,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LOC':([6,118,119,120,122,123,124,125,127,128,129,133,134,135,203,276,277,281,289,306,329,],[-17,-38,-44,-33,-36,-37,-28,-34,-29,-32,-31,-30,-35,-43,-42,-39,-40,-45,312,-46,334,]),'IF':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,67,84,85,90,91,92,97,99,104,107,108,116,157,160,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[3,52,-4,3,-5,3,-2,-8,52,-7,52,-6,52,52,52,3,52,52,3,-143,-3,52,-133,-122,52,-9,52,3,3,3,-144,-18,52,-134,-138,-139,-135,-136,-137,-24,52,52,52,52,52,52,3,3,52,-188,-123,52,3,52,52,52,52,52,52,3,52,52,52,52,3,52,52,3,3,3,3,3,3,3,]),'RETURNS':([265,292,],[295,295,]),'NOT':([3,37,42,48,52,67,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[54,54,54,54,54,54,54,54,54,-133,54,54,-113,-111,-112,-92,-100,-98,-93,-102,54,-94,-95,-96,-97,-99,-101,54,54,-107,-108,-106,54,54,-134,-138,-139,-135,-136,-137,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'ID':([0,1,3,6,7,9,10,11,17,27,28,37,38,40,41,42,43,45,47,48,52,54,67,72,75,83,84,85,86,90,91,92,96,97,99,104,107,108,116,117,126,132,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,183,184,186,187,189,190,191,192,193,196,197,198,200,202,204,205,207,208,211,217,220,221,224,225,226,229,230,231,233,236,237,253,256,257,260,263,266,275,278,279,280,284,291,294,298,299,315,316,317,318,325,326,327,331,],[6,6,6,-17,-4,6,6,-5,6,-2,-8,6,6,6,-7,6,-6,-15,6,6,6,-117,6,6,-116,6,6,6,6,6,6,-143,6,-3,6,-133,-122,6,-9,6,6,6,6,-113,-111,-112,-92,-100,-98,-93,-102,6,-94,-95,-96,-97,-99,-101,6,6,6,-107,-108,-106,6,6,6,-144,6,-18,6,-134,-138,-139,-135,-136,-137,6,6,-24,6,6,6,6,-16,6,6,6,6,6,-188,-123,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'REF':([6,45,47,96,126,196,207,263,280,318,],[-17,-15,126,126,126,126,-16,126,126,126,]),'ELSE':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,92,105,107,138,159,161,167,172,180,209,210,212,213,216,217,222,223,225,227,238,252,255,258,283,288,302,307,309,310,324,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-143,-56,-122,-178,-115,220,-121,-168,-144,-179,-110,256,-91,-80,-142,-104,-105,-123,-169,-57,-86,256,-77,-83,220,-60,-88,-84,-78,-89,]),'TRUE':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[58,58,58,58,58,-117,58,58,-116,58,58,58,-133,58,58,-113,-111,-112,-92,-100,-98,-93,-102,58,-94,-95,-96,-97,-99,-101,58,58,-107,-108,-106,58,58,-134,-138,-139,-135,-136,-137,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ICONST':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,206,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[68,68,68,68,68,-117,68,68,-116,68,68,68,-133,68,68,-113,-111,-112,-92,-100,-98,-93,-102,68,-94,-95,-96,-97,-99,-101,68,68,-107,-108,-106,68,68,-134,-138,-139,-135,-136,-137,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'THEN':([5,6,21,26,30,33,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,73,74,76,77,78,79,80,81,82,105,138,144,159,167,172,209,210,213,216,222,223,227,238,258,261,282,283,302,308,309,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-85,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,160,-75,-76,-62,-114,-90,-68,-65,-82,-56,-178,211,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-77,160,211,-83,-60,211,-84,-78,]),'SYN':([0,7,11,17,27,28,41,43,97,107,116,184,198,224,225,294,315,316,317,325,326,327,331,],[10,-4,-5,10,-2,-8,-7,-6,-3,-122,-9,-18,-24,-188,-123,10,10,10,10,10,10,10,10,]),'COMMA':([5,6,21,26,30,33,44,45,46,47,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,94,95,96,105,112,113,114,118,119,120,121,122,123,124,125,127,128,129,133,134,135,136,137,138,139,159,167,171,172,194,195,199,201,203,207,209,210,213,214,215,216,222,223,227,232,234,235,238,239,240,241,246,247,248,249,251,258,262,263,264,272,274,276,277,281,283,289,290,302,303,304,305,306,309,310,312,313,],[-52,-17,-166,-167,-53,-54,117,-15,-10,132,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-19,183,132,-56,-25,132,197,-38,-44,-33,-12,-36,-37,-28,-34,-29,-32,-31,-30,-35,-43,-172,208,-178,-170,-115,-121,208,-168,-58,237,-11,-13,-42,-16,-179,-110,-91,-58,237,-80,-104,-105,-169,-20,-23,-22,-57,-27,-26,-14,279,-47,-49,-50,-171,-77,-193,132,291,-21,-59,-39,-40,-45,-83,-196,-195,-60,-41,-172,-48,-46,-84,-78,-197,-194,]),'ELSIF':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,92,105,107,138,159,161,167,172,180,209,210,212,213,216,217,222,223,225,227,238,252,255,258,283,288,302,307,309,310,324,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-143,-56,-122,-178,-115,221,-121,-168,-144,-179,-110,253,-91,-80,-142,-104,-105,-123,-169,-57,-86,284,-77,-83,221,-60,-88,-84,-78,-89,]),'SEMI':([5,6,12,18,19,21,22,24,25,26,29,30,33,35,36,42,44,46,49,50,51,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,88,89,93,94,95,105,109,110,111,112,114,115,118,119,120,121,122,123,124,125,127,128,129,133,134,135,138,159,167,168,169,172,173,174,176,179,181,182,188,199,201,203,209,210,213,216,218,222,223,227,232,234,235,238,239,240,241,258,259,265,268,271,272,276,277,281,283,292,293,296,300,302,306,309,310,314,319,321,323,328,330,332,333,335,336,337,],[-52,-17,-126,-124,-127,-166,-131,-125,-130,-167,107,-53,-54,-129,-128,-174,116,-10,-66,-103,-85,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-152,178,-150,-19,184,-56,-177,-176,-173,-25,198,-175,-38,-44,-33,-12,-36,-37,-28,-34,-29,-32,-31,-30,-35,-43,-178,-115,-121,224,225,-168,-155,-153,-154,-165,-148,-151,-132,-11,-13,-42,-179,-110,-91,-80,-140,-104,-105,-169,-20,-23,-22,-57,-27,-26,-14,-77,-141,294,-163,-149,-21,-39,-40,-45,-83,315,316,-164,-156,-60,-46,-84,-78,325,-158,-162,-157,-189,-159,-190,-191,-198,-192,-199,]),'INT':([6,45,47,96,126,196,205,207,229,263,266,279,280,318,],[-17,-15,122,122,122,122,122,-16,122,122,122,122,122,122,]),'END':([7,11,27,28,41,43,97,107,116,184,198,224,225,317,326,327,331,],[-4,-5,-2,-8,-7,-6,-3,-122,-9,-18,-24,-188,-123,328,332,333,336,]),'FOR':([9,],[86,]),'$end':([7,11,17,20,27,28,41,43,97,107,116,184,198,224,225,],[-4,-5,-1,0,-2,-8,-7,-6,-3,-122,-9,-18,-24,-188,-123,]),'BY':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,105,138,159,167,172,209,210,213,216,222,223,227,238,258,269,270,283,302,309,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-77,-160,298,-83,-60,-84,-78,]),'UPPER':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[14,14,-4,14,-5,14,-2,-8,14,-7,14,-6,14,14,-117,14,14,-116,14,14,14,14,14,-143,-3,14,-133,-122,14,-9,14,-113,-111,-112,-92,-100,-98,-93,-102,14,-94,-95,-96,-97,-99,-101,14,14,14,-107,-108,-106,14,14,14,-144,-18,14,-134,-138,-139,-135,-136,-137,-24,14,14,14,14,14,14,14,14,14,-188,-123,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'ASC':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[15,15,-4,15,-5,15,-2,-8,15,-7,15,-6,15,15,-117,15,15,-116,15,15,15,15,15,-143,-3,15,-133,-122,15,-9,15,-113,-111,-112,-92,-100,-98,-93,-102,15,-94,-95,-96,-97,-99,-101,15,15,15,-107,-108,-106,15,15,15,-144,-18,15,-134,-138,-139,-135,-136,-137,-24,15,15,15,15,15,15,15,15,15,-188,-123,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LBRACKET':([4,5,6,12,21,23,26,30,31,33,49,53,55,56,57,58,60,61,62,63,66,68,69,70,71,74,76,77,80,81,87,105,130,131,138,167,172,209,216,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,-61,-167,-53,108,-54,-66,-51,-69,-55,-67,-73,-64,-79,-74,-63,157,-71,-72,-61,-70,-75,-76,-62,-68,-65,-51,-56,205,206,-178,-61,-168,-179,-80,-169,-57,-51,-77,-60,-78,]),'LPAREN':([2,3,4,6,8,13,14,15,16,32,34,37,39,42,48,52,53,54,67,72,75,85,87,90,99,104,108,118,120,122,123,124,125,127,128,134,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,170,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,245,248,253,256,257,267,268,275,276,277,278,279,284,295,296,298,299,],[48,67,85,-17,-186,-180,-183,-181,-184,-182,-187,67,-185,67,67,67,85,-117,67,67,-116,67,85,67,67,-133,67,-38,-33,-36,-37,202,-34,204,-32,-35,67,-113,-111,-112,-92,-100,-98,-93,-102,67,-94,-95,-96,-97,-99,-101,67,67,-107,-108,-106,67,226,67,-134,-138,-139,-135,-136,-137,67,67,67,67,67,67,67,67,67,67,67,278,204,67,67,67,202,204,67,-39,-40,67,67,67,318,204,67,67,]),'EQ':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,153,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'NE':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,154,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'EQUALS':([4,5,6,12,21,23,26,30,33,45,53,87,96,98,100,101,102,103,105,106,113,118,119,120,121,122,123,124,125,127,128,129,133,134,135,138,172,175,185,203,207,209,227,238,276,277,281,302,306,],[-51,-52,-17,-55,-166,104,-167,-53,-54,-15,-51,-51,186,187,189,190,191,192,-56,193,196,-38,-44,-33,200,-36,-37,-28,-34,-29,-32,-31,-30,-35,-43,-178,-168,230,233,-42,-16,-179,-169,-57,-39,-40,-45,-60,-46,]),'RPAREN':([5,6,21,26,30,33,48,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,85,105,118,119,120,122,123,124,125,127,128,129,133,134,135,136,137,138,139,158,159,167,171,172,203,209,210,213,216,222,223,226,227,238,243,244,251,258,262,264,276,277,278,281,283,289,290,302,303,304,306,309,310,312,313,329,334,],[-52,-17,-166,-167,-53,-54,138,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,172,-56,-38,-44,-33,-36,-37,-28,-34,-29,-32,-31,-30,-35,-43,-172,209,-178,-170,216,-115,-121,227,-168,-42,-179,-110,-91,-80,-104,-105,265,-169,-57,276,277,-171,-77,-193,292,-39,-40,172,-45,-83,-196,-195,-60,-41,-172,-46,-84,-78,-197,-194,335,337,]),'PROC':([84,],[170,]),'MODULO':([4,5,6,12,21,23,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,65,68,69,70,71,74,76,77,78,80,81,87,105,138,159,167,172,209,210,216,222,223,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,100,-167,-53,-54,-66,141,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,-71,-72,-118,-70,-75,-76,-62,-114,-68,-65,-51,-56,-178,-115,-121,-168,-179,-110,-80,141,141,-169,-57,-51,-77,-60,-78,]),'DO':([0,7,9,11,17,27,28,41,43,84,91,92,97,107,116,160,177,178,180,184,198,217,220,224,225,231,260,294,315,316,317,325,326,327,331,],[9,-4,9,-5,9,-2,-8,-7,-6,9,9,-143,-3,-122,-9,9,9,9,-144,-18,-24,9,9,-188,-123,9,9,9,9,9,9,9,9,9,9,]),'IN':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,175,209,210,213,216,222,223,227,228,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,149,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,229,-179,-110,-91,-80,-104,-105,-169,266,-57,-51,-77,-60,-78,]),'PRINT':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[34,34,-4,34,-5,34,-2,-8,34,-7,34,-6,34,34,-117,34,34,-116,34,34,34,34,34,-143,-3,34,-133,-122,34,-9,34,-113,-111,-112,-92,-100,-98,-93,-102,34,-94,-95,-96,-97,-99,-101,34,34,34,-107,-108,-106,34,34,34,-144,-18,34,-134,-138,-139,-135,-136,-137,-24,34,34,34,34,34,34,34,34,34,-188,-123,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LOWER':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[16,16,-4,16,-5,16,-2,-8,16,-7,16,-6,16,16,-117,16,16,-116,16,16,16,16,16,-143,-3,16,-133,-122,16,-9,16,-113,-111,-112,-92,-100,-98,-93,-102,16,-94,-95,-96,-97,-99,-101,16,16,16,-107,-108,-106,16,16,16,-144,-18,16,-134,-138,-139,-135,-136,-137,-24,16,16,16,16,16,16,16,16,16,-188,-123,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'PLUS':([4,5,6,12,21,23,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,65,68,69,70,71,74,76,77,78,79,80,81,87,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,98,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,-71,-72,-118,-70,-75,-76,-62,-114,165,-68,-65,-51,-56,-178,-115,-121,-168,-179,-110,165,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'CCONST':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[62,62,62,62,62,-117,62,62,-116,62,62,62,-133,62,62,-113,-111,-112,-92,-100,-98,-93,-102,62,-94,-95,-96,-97,-99,-101,62,62,-107,-108,-106,62,62,-134,-138,-139,-135,-136,-137,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'CHARS':([6,45,47,96,126,196,207,263,280,318,],[-17,-15,131,131,131,131,-16,131,131,131,]),'GT':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,147,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'BOOL':([6,45,47,96,126,196,205,207,229,263,266,279,280,318,],[-17,-15,123,123,123,123,123,-16,123,123,123,123,123,123,]),'LENGTH':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[39,39,-4,39,-5,39,-2,-8,39,-7,39,-6,39,39,-117,39,39,-116,39,39,39,39,39,-143,-3,39,-133,-122,39,-9,39,-113,-111,-112,-92,-100,-98,-93,-102,39,-94,-95,-96,-97,-99,-101,39,39,39,-107,-108,-106,39,39,39,-144,-18,39,-134,-138,-139,-135,-136,-137,-24,39,39,39,39,39,39,39,39,39,-188,-123,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'WHILE':([5,6,9,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,93,105,118,120,122,123,125,128,134,138,159,167,172,173,174,176,209,210,213,216,222,223,227,238,258,268,276,277,283,296,300,302,309,310,319,321,323,330,],[-52,-17,90,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,90,-56,-38,-33,-36,-37,-34,-32,-35,-178,-115,-121,-168,-155,-153,-154,-179,-110,-91,-80,-104,-105,-169,-57,-77,-163,-39,-40,-83,-164,-156,-60,-84,-78,-158,-162,-157,-159,]),'TIMES':([4,5,6,12,21,23,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,65,68,69,70,71,74,76,77,78,80,81,87,105,138,159,167,172,209,210,216,222,223,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,103,-167,-53,-54,-66,142,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,-71,-72,-118,-70,-75,-76,-62,-114,-68,-65,-51,-56,-178,-115,-121,-168,-179,-110,-80,142,142,-169,-57,-51,-77,-60,-78,]),'COLON':([4,5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,87,105,138,159,167,172,194,209,210,213,214,216,222,223,227,238,242,245,258,283,302,304,309,310,],[84,-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,177,-56,-178,-115,-121,-168,236,-179,-110,-91,257,-80,-104,-105,-169,-57,275,-51,-77,-83,-60,275,-84,-78,]),'TO':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,105,138,159,167,172,209,210,213,216,222,223,227,238,258,269,270,283,297,301,302,309,310,320,322,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-77,-160,299,-83,299,299,-60,-84,-78,-161,299,]),'FALSE':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[69,69,69,69,69,-117,69,69,-116,69,69,69,-133,69,69,-113,-111,-112,-92,-100,-98,-93,-102,69,-94,-95,-96,-97,-99,-101,69,69,-107,-108,-106,69,69,-134,-138,-139,-135,-136,-137,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'NUM':([0,3,7,9,11,17,27,28,37,41,42,43,48,52,54,67,72,75,83,84,85,90,91,92,97,99,104,107,108,116,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,160,162,163,164,165,166,177,178,180,184,186,187,189,190,191,192,193,198,200,202,204,205,208,211,217,220,221,224,225,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[32,32,-4,32,-5,32,-2,-8,32,-7,32,-6,32,32,-117,32,32,-116,32,32,32,32,32,-143,-3,32,-133,-122,32,-9,32,-113,-111,-112,-92,-100,-98,-93,-102,32,-94,-95,-96,-97,-99,-101,32,32,32,-107,-108,-106,32,32,32,-144,-18,32,-134,-138,-139,-135,-136,-137,-24,32,32,32,32,32,32,32,32,32,-188,-123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'RBRACKET':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,105,118,120,122,123,125,128,134,138,159,167,172,194,195,209,210,213,214,215,216,222,223,227,238,246,247,248,249,250,258,273,274,276,277,283,287,302,303,305,309,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-56,-38,-33,-36,-37,-34,-32,-35,-178,-115,-121,-168,-58,238,-179,-110,-91,-58,258,-80,-104,-105,-169,-57,280,-47,-49,-50,281,-77,302,-59,-39,-40,-83,310,-60,-41,-48,-84,-78,]),'MINUS':([3,4,5,6,12,21,23,26,30,33,37,42,48,49,50,52,53,55,56,57,58,59,60,61,62,63,65,67,68,69,70,71,74,76,77,78,79,80,81,85,87,90,99,104,105,108,138,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,162,163,164,165,166,167,172,186,187,189,190,191,192,193,200,202,204,205,208,209,210,211,213,216,221,222,223,227,230,233,236,237,238,245,253,256,257,258,275,278,279,284,298,299,302,310,],[75,-51,-52,-17,-55,-166,102,-167,-53,-54,75,75,75,-66,-103,75,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,75,-71,-72,-118,-70,-75,-76,-62,-114,163,-68,-65,75,-51,75,75,-133,-56,75,-178,75,-113,-111,-112,-92,-100,-98,-93,-102,75,-94,-95,-96,-97,-99,-101,75,-115,75,-107,-108,-106,75,-121,-168,75,-134,-138,-139,-135,-136,-137,75,75,75,75,75,-179,-110,75,163,-80,75,-104,-105,-169,75,75,75,75,-57,-51,75,75,75,-77,75,75,75,75,75,75,-60,-78,]),'LAND':([4,5,6,12,21,23,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,65,68,69,70,71,74,76,77,78,79,80,81,87,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,101,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,-71,-72,-118,-70,-75,-76,-62,-114,164,-68,-65,-51,-56,-178,-115,-121,-168,-179,-110,164,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'RETURN':([0,7,9,11,17,27,28,41,43,84,91,92,97,107,116,160,177,178,180,184,198,217,220,224,225,231,260,294,315,316,317,325,326,327,331,],[42,-4,42,-5,42,-2,-8,-7,-6,42,42,-143,-3,-122,-9,42,42,42,-144,-18,-24,42,42,-188,-123,42,42,42,42,42,42,42,42,42,42,]),'LEQ':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,156,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'DIVIDE':([4,5,6,12,21,23,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,65,68,69,70,71,74,76,77,78,80,81,87,105,138,159,167,172,209,210,216,222,223,227,238,245,258,302,310,],[-51,-52,-17,-55,-166,106,-167,-53,-54,-66,143,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-119,-71,-72,-118,-70,-75,-76,-62,-114,-68,-65,-51,-56,-178,-115,-121,-168,-179,-110,-80,143,143,-169,-57,-51,-77,-60,-78,]),'FI':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,82,92,105,107,138,159,161,167,172,180,209,210,213,216,217,219,222,223,225,227,238,254,258,260,283,285,286,288,302,309,310,311,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,-81,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-82,-143,-56,-122,-178,-115,218,-121,-168,-144,-179,-110,-91,-80,-142,259,-104,-105,-123,-169,-57,283,-77,-145,-83,309,-87,-146,-60,-84,-78,-147,]),'RESULT':([0,7,9,11,17,27,28,41,43,84,91,92,97,107,116,160,177,178,180,184,198,217,220,224,225,231,260,294,315,316,317,325,326,327,331,],[37,-4,37,-5,37,-2,-8,-7,-6,37,37,-143,-3,-122,-9,37,37,37,-144,-18,-24,37,37,-188,-123,37,37,37,37,37,37,37,37,37,37,]),'EXIT':([0,7,9,11,17,27,28,41,43,84,91,92,97,107,116,160,177,178,180,184,198,217,220,224,225,231,260,294,315,316,317,325,326,327,331,],[38,-4,38,-5,38,-2,-8,-7,-6,38,38,-143,-3,-122,-9,38,38,38,-144,-18,-24,38,38,-188,-123,38,38,38,38,38,38,38,38,38,38,]),'ARROW':([3,4,5,6,12,21,23,26,30,33,37,42,48,52,53,54,56,67,70,72,75,85,87,90,99,104,105,108,138,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,167,172,186,187,189,190,191,192,193,200,202,204,205,208,209,211,221,227,230,233,236,237,238,245,253,256,257,275,278,279,284,298,299,302,],[83,-51,-52,-17,-55,-166,105,-167,-53,-54,83,83,83,83,-51,-117,-55,83,105,83,-116,83,-51,83,83,-133,-56,83,-178,83,-113,-111,-112,-92,-100,-98,-93,-102,83,-94,-95,-96,-97,-99,-101,83,83,-107,-108,-106,83,105,-168,83,-134,-138,-139,-135,-136,-137,83,83,83,83,83,-179,83,83,-169,83,83,83,83,-57,-51,83,83,83,83,83,83,83,83,83,-60,]),'ARRAY':([6,45,47,96,126,196,207,263,280,318,],[-17,-15,130,130,130,130,-16,130,130,130,]),'SCONST':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[76,76,76,76,76,-117,76,76,-116,76,76,76,-133,76,76,-113,-111,-112,-92,-100,-98,-93,-102,76,-94,-95,-96,-97,-99,-101,76,76,-107,-108,-106,76,76,-134,-138,-139,-135,-136,-137,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'TYPE':([0,7,11,17,27,28,41,43,97,107,116,184,198,224,225,294,315,316,317,325,326,327,331,],[40,-4,-5,40,-2,-8,-7,-6,-3,-122,-9,-18,-24,-188,-123,40,40,40,40,40,40,40,40,]),'GEQ':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,155,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),'OD':([91,92,107,180,225,231,],[181,-143,-122,-144,-123,271,]),'NULL':([3,37,42,48,52,54,67,72,75,85,90,99,104,108,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,162,163,164,165,166,186,187,189,190,191,192,193,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[74,74,74,74,74,-117,74,74,-116,74,74,74,-133,74,74,-113,-111,-112,-92,-100,-98,-93,-102,74,-94,-95,-96,-97,-99,-101,74,74,-107,-108,-106,74,74,-134,-138,-139,-135,-136,-137,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'AND':([5,6,21,26,30,33,49,50,53,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,74,76,77,78,79,80,81,105,138,159,167,172,209,210,213,216,222,223,227,238,245,258,302,310,],[-52,-17,-166,-167,-53,-54,-66,-103,-51,-69,-55,-67,-73,-109,-64,-120,-74,-63,151,-119,-71,-72,-118,-70,-75,-76,-62,-114,-90,-68,-65,-56,-178,-115,-121,-168,-179,-110,-91,-80,-104,-105,-169,-57,-51,-77,-60,-78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'else_clause':([161,288,],[219,311,]),'index_mode':([205,279,],[247,305,]),'boolean_expression':([3,52,90,221,253,284,],[73,144,179,261,282,308,]),'boolean_mode':([47,96,126,196,205,229,263,266,279,280,318,],[120,120,120,120,120,120,120,120,120,120,120,]),'newmode_list':([40,],[114,]),'declaration_list':([1,],[44,]),'character_literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'empty_literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'character_mode':([47,96,126,196,205,229,263,266,279,280,318,],[125,125,125,125,125,125,125,125,125,125,125,]),'boolean_literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'primitive_value':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'control_part':([9,],[89,]),'membership_operator':([64,],[148,]),'operand3':([3,37,42,48,52,67,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[59,59,59,59,59,59,59,59,59,59,210,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'identifier_list':([1,10,40,117,183,197,226,291,],[47,96,113,47,96,113,263,263,]),'parameter_list':([48,85,278,],[137,171,171,]),'discrete_range_mode':([47,96,126,196,205,229,263,266,279,280,318,],[134,134,134,134,134,134,134,134,134,134,134,]),'referenced_location':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'arithmetic_additive_operator':([79,213,],[162,162,]),'else_expression':([212,255,],[254,285,]),'value_array_element':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'assigning_operator':([23,],[99,]),'step_value':([270,],[301,]),'arithmetic_multiplicative_operator':([50,222,223,],[140,140,140,]),'operand0':([3,37,42,48,52,67,85,90,99,108,157,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'range_enumeration':([86,],[173,]),'declaration':([1,117,],[46,199,]),'array_primitive_value':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'string_mode':([47,96,126,196,263,280,318,],[135,135,135,135,135,135,135,]),'then_expression':([144,282,308,],[212,307,324,]),'result_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'statement':([0,17,294,315,316,317,325,326,327,331,],[27,97,27,27,27,97,27,97,97,97,]),'array_slice':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'discrete_mode':([47,96,126,196,205,229,263,266,279,280,318,],[127,127,127,127,248,268,127,296,248,127,127,]),'action_statement':([0,9,17,91,160,178,217,220,231,260,294,315,316,317,325,326,327,331,],[28,92,28,180,92,92,180,92,180,180,28,28,28,28,28,28,28,28,]),'integer_mode':([47,96,126,196,205,229,263,266,279,280,318,],[128,128,128,128,128,128,128,128,128,128,128,]),'array_element':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'operand4':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[78,78,78,78,78,78,159,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'result':([37,42,],[110,115,]),'constant_expression':([186,233,],[235,272,]),'parameter_spec':([263,],[290,]),'procedure_definition':([84,],[168,]),'literal_range':([202,204,205,278,279,],[243,244,249,243,249,]),'list_index_mode':([205,],[246,]),'parameter':([48,85,208,278,],[139,139,251,139,]),'expression_list':([108,157,],[195,215,]),'end_value':([270,297,301,322,],[300,319,323,330,]),'while_control':([9,93,],[88,182,]),'parenthesized_expression':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'procedure_statement':([0,17,294,315,316,317,325,326,327,331,],[41,41,41,41,41,41,41,41,41,41,]),'conditional_expression':([3,37,42,48,52,67,85,90,99,108,157,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'string_concatenation_operator':([79,213,],[166,166,]),'relational_operator':([64,],[145,]),'array_mode':([47,96,126,196,263,280,318,],[119,119,119,119,119,119,119,]),'formal_parameter':([226,291,],[262,313,]),'operand2':([3,37,42,48,52,67,85,90,99,108,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[50,50,50,50,50,50,50,50,50,50,50,50,222,223,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expression':([3,37,42,48,52,67,85,90,99,108,157,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[51,109,109,136,51,158,136,51,188,194,214,234,241,242,242,242,136,252,51,269,234,273,274,51,286,287,303,304,242,51,320,321,]),'builtin_name':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'identifier':([0,1,3,9,10,17,37,38,40,42,47,48,52,67,72,83,84,85,86,90,91,96,99,108,117,126,132,140,150,157,160,162,166,177,178,183,186,196,197,200,202,204,205,208,211,217,220,221,226,229,230,231,233,236,237,253,256,257,260,263,266,275,278,279,280,284,291,294,298,299,315,316,317,318,325,326,327,331,],[4,45,53,87,45,4,53,111,45,53,124,53,53,53,53,53,53,53,175,53,87,124,53,53,45,124,207,53,53,53,87,53,53,53,87,45,53,124,45,53,53,53,245,53,53,87,87,53,45,267,53,87,53,53,53,53,53,53,87,124,267,53,53,245,124,53,45,4,53,53,4,4,4,124,4,4,4,4,]),'bracketed_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'elsif_expression':([212,],[255,]),'call_action':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[12,56,12,12,56,56,56,56,56,56,56,12,56,56,12,56,56,56,56,56,12,56,56,12,12,56,56,56,56,56,56,56,12,12,56,56,12,56,56,56,56,56,56,12,56,56,56,56,12,56,56,12,12,12,12,12,12,12,]),'composite_mode':([47,96,126,196,263,280,318,],[129,129,129,129,129,129,129,]),'synonym_definition':([10,183,],[94,232,]),'declaration_statement':([0,17,294,315,316,317,325,326,327,331,],[7,7,7,7,7,7,7,7,7,7,]),'synonym_statement':([0,17,294,315,316,317,325,326,327,331,],[11,11,11,11,11,11,11,11,11,11,]),'iteration':([86,],[174,]),'operator1':([64,],[150,]),'value_array_slice':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'then_clause':([73,261,],[161,288,]),'mode':([47,96,126,196,263,280,318,],[121,185,203,239,289,306,329,]),'character_string_literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'step_enumeration':([86,],[176,]),'statement_list':([0,294,315,316,325,],[17,317,326,327,331,]),'builtin_call':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'exit_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'program':([0,],[20,]),'procedure_call':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'formal_parameter_list':([226,],[264,]),'do_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'result_spec':([265,292,],[293,314,]),'location':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[23,70,23,23,70,70,70,70,70,70,167,23,70,70,23,70,70,70,70,70,23,70,70,23,23,70,70,70,70,70,70,70,23,23,70,70,23,70,70,70,70,70,70,23,70,70,70,70,23,70,70,23,23,23,23,23,23,23,]),'assignment_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'if_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'action_statement_list':([9,160,178,220,],[91,217,231,260,]),'action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[29,29,29,169,29,29,169,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'monadic_operator':([3,37,42,48,52,67,85,90,99,108,140,150,157,162,166,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'array_location':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'synonym_list':([10,],[95,]),'start_value':([230,],[270,]),'for_control':([9,],[93,]),'dereferenced_reference':([0,3,9,17,37,42,48,52,67,72,83,84,85,90,91,99,108,140,150,157,160,162,166,177,178,186,200,202,204,205,208,211,217,220,221,230,231,233,236,237,253,256,257,260,275,278,279,284,294,298,299,315,316,317,325,326,327,331,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'integer_literal':([3,37,42,48,52,67,72,85,90,99,108,140,150,157,162,166,186,200,202,204,205,206,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,250,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'reference_mode':([47,96,126,196,263,280,318,],[133,133,133,133,133,133,133,]),'return_action':([0,9,17,84,91,160,177,178,217,220,231,260,294,315,316,317,325,326,327,331,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'initialization':([121,],[201,]),'mode_definition':([40,197,],[112,240,]),'operand1':([3,37,42,48,52,67,85,90,99,108,150,157,186,200,202,204,205,208,211,221,230,233,236,237,253,256,257,275,278,279,284,298,299,],[79,79,79,79,79,79,79,79,79,79,213,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'newmode_statement':([0,17,294,315,316,317,325,326,327,331,],[43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',295),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',302),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',303),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',312),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',326),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',328),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',336),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',339),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',353),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',354),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',361),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',368),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',375),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',382),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',389),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',396),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',402),
  ('expression -> operand0','expression',1,'p_expression','parser.py',409),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',410),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',417),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',418),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',428),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',442),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',449),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',450),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',473),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',474),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',494),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',501),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',502),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',514),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',515),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',522),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',529),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',530),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',541),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',542),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',549),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',550),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',561),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',562),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',569),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',570),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',571),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',578),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',585),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',586),
  ('action -> bracketed_action','action',1,'p_action','parser.py',597),
  ('action -> assignment_action','action',1,'p_action','parser.py',598),
  ('action -> call_action','action',1,'p_action','parser.py',599),
  ('action -> exit_action','action',1,'p_action','parser.py',600),
  ('action -> return_action','action',1,'p_action','parser.py',601),
  ('action -> result_action','action',1,'p_action','parser.py',602),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',609),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',610),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',617),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',624),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',625),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',639),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',640),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',650),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',656),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',657),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',665),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',666),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',667),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',679),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',680),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',692),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',702),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',709),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',710),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',717),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',718),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',719),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',720),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',735),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',741),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',747),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',753),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',754),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',764),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',771),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',772),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',779),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',780),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',789),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',790),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',799),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',805),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',812),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',813),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',822),
  ('result -> expression','result',1,'p_result','parser.py',829),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',835),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',836),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',847),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',848),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',849),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',850),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',854),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',860),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',867),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',868),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',869),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',870),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',885),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',886),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',895),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',902),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',903),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',913),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',914),
]
