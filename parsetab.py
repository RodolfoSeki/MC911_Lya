
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT PRINT OD ARRAY LOC THEN TRUE FOR IF FI FALSE REF ELSIF BOOL LOWER IN EXIT CHAR CHARS ABS BY DO PROC INT RETURNS NULL TO READ RETURN END RESULT TYPE SYN ELSE UPPER ASC LENGTH WHILE DCL NUM DOWNprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_range_mode \n                              | identifier DOWN IN discrete_range_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'READ':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[1,-2,1,-5,1,-7,-8,-6,1,1,1,-4,1,1,1,-117,1,-116,-122,-133,1,1,1,1,-143,1,1,1,-3,-108,-106,1,1,-107,1,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,1,-111,1,-112,-113,-139,-134,-137,-135,-136,-138,-24,1,-144,1,-18,1,-9,1,1,1,1,1,1,1,1,1,1,-123,-188,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'ARROW':([5,8,11,12,20,25,29,32,33,38,41,42,44,53,57,65,66,74,75,78,81,84,88,90,95,102,109,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,151,178,191,207,208,209,213,220,221,222,225,228,229,233,234,235,239,242,245,246,263,278,285,286,290,293,294,302,],[-52,48,-167,81,-53,-166,-54,-51,-55,-17,48,48,48,81,48,-51,-55,-117,48,-116,-56,-133,48,48,48,-51,48,48,81,-108,-106,48,48,-107,48,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,48,-111,48,-112,-113,-139,-134,-137,-135,-136,-138,-178,48,-168,48,-179,48,48,48,48,48,48,48,-169,-57,48,48,48,48,48,48,-51,48,48,48,48,48,48,-60,]),'ASC':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[2,-2,2,-5,2,-7,-8,-6,2,2,2,-4,2,2,2,-117,2,-116,-122,-133,2,2,2,2,-143,2,2,2,-3,-108,-106,2,2,-107,2,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,2,-111,2,-112,-113,-139,-134,-137,-135,-136,-138,-24,2,-144,2,-18,2,-9,2,2,2,2,2,2,2,2,2,2,-123,-188,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'WHILE':([5,11,20,23,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,100,116,117,151,158,159,161,191,199,200,203,204,205,208,229,233,241,252,279,283,287,289,291,302,304,305,308,310,311,326,],[-52,-167,-53,95,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,95,-115,-121,-178,-153,-154,-155,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-163,-83,-156,-164,-40,-39,-60,-78,-84,-157,-158,-162,-159,]),'CCONST':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[47,47,47,47,47,-117,47,-116,-133,47,47,47,47,47,-108,-106,47,47,-107,47,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,47,-111,47,-112,-113,-139,-134,-137,-135,-136,-138,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'END':([7,21,24,28,30,43,79,112,155,167,188,230,231,318,329,330,336,],[-2,-5,-7,-8,-6,-4,-122,-3,-24,-18,-9,-123,-188,327,334,335,338,]),'ELSE':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,79,81,101,116,117,151,164,191,198,199,200,203,204,205,206,208,229,230,233,236,241,243,247,279,302,303,304,305,307,325,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-122,-56,-143,-115,-121,-178,-144,-168,238,-105,-104,-91,-80,-110,245,-179,-169,-123,-57,-142,-77,245,-86,-83,-60,238,-78,-84,-88,-89,]),'LENGTH':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[4,-2,4,-5,4,-7,-8,-6,4,4,4,-4,4,4,4,-117,4,-116,-122,-133,4,4,4,4,-143,4,4,4,-3,-108,-106,4,4,-107,4,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,4,-111,4,-112,-113,-139,-134,-137,-135,-136,-138,-24,4,-144,4,-18,4,-9,4,4,4,4,4,4,4,4,4,4,-123,-188,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'GT':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,132,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'REF':([38,94,105,107,154,172,210,267,292,319,],[-17,-15,172,172,172,172,-16,172,172,172,]),'TO':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,249,250,279,282,284,302,304,305,309,312,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,285,-160,-83,285,285,-60,-78,-84,285,-161,]),'ELSIF':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,79,81,101,116,117,151,164,191,198,199,200,203,204,205,206,208,229,230,233,236,241,243,247,279,302,303,304,305,307,325,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-122,-56,-143,-115,-121,-178,-144,-168,239,-105,-104,-91,-80,-110,246,-179,-169,-123,-57,-142,-77,278,-86,-83,-60,239,-78,-84,-88,-89,]),'RETURN':([0,7,21,23,24,28,30,35,43,79,99,101,110,112,155,162,164,166,167,188,197,216,230,231,236,238,274,297,318,320,321,329,330,331,336,],[8,-2,-5,8,-7,-8,-6,8,-4,-122,8,-143,8,-3,-24,8,-144,8,-18,-9,8,8,-123,-188,8,8,8,8,8,8,8,8,8,8,8,]),'FOR':([23,],[96,]),'CHARS':([38,94,105,107,154,172,210,267,292,319,],[-17,-15,174,174,174,174,-16,174,174,174,]),'COLON':([5,11,20,25,29,32,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,102,116,117,151,191,196,199,200,202,203,204,205,208,229,233,241,258,263,279,302,304,305,316,],[-52,-167,-53,-166,-54,110,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,166,-115,-121,-178,-168,235,-105,-104,242,-91,-80,-110,-179,-169,-57,-77,290,-51,-83,-60,-78,-84,290,]),'ABS':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[26,-2,26,-5,26,-7,-8,-6,26,26,26,-4,26,26,26,-117,26,-116,-122,-133,26,26,26,26,-143,26,26,26,-3,-108,-106,26,26,-107,26,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,26,-111,26,-112,-113,-139,-134,-137,-135,-136,-138,-24,26,-144,26,-18,26,-9,26,26,26,26,26,26,26,26,26,26,-123,-188,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'EXIT':([0,7,21,23,24,28,30,35,43,79,99,101,110,112,155,162,164,166,167,188,197,216,230,231,236,238,274,297,318,320,321,329,330,331,336,],[15,-2,-5,15,-7,-8,-6,15,-4,-122,15,-143,15,-3,-24,15,-144,15,-18,-9,15,15,-123,-188,15,15,15,15,15,15,15,15,15,15,15,]),'LT':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,129,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'OD':([79,99,101,164,216,230,],[-122,163,-143,-144,255,-123,]),'LPAREN':([1,2,4,6,8,9,17,22,26,32,36,38,41,42,44,57,65,74,75,78,84,88,90,95,102,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,169,171,175,176,178,180,181,184,185,186,194,207,209,213,220,221,222,225,228,234,235,239,242,245,246,252,253,254,262,263,278,285,286,287,289,290,291,293,294,298,],[-186,-181,-185,-182,57,-184,90,-187,-180,109,-183,-17,57,57,57,57,109,-117,57,-116,-133,57,57,57,109,57,57,-108,-106,57,57,-107,57,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,57,-111,57,-112,-113,-139,-134,-137,-135,-136,-138,-35,-38,220,221,57,-32,-37,-34,-33,-36,232,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-35,220,221,220,294,57,57,57,-35,-40,57,-39,57,57,319,]),'ICONST':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,219,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[55,55,55,55,55,-117,55,-116,-133,55,55,55,55,55,-108,-106,55,55,-107,55,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,55,-111,55,-112,-113,-139,-134,-137,-135,-136,-138,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'RBRACKET':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,116,117,151,169,171,180,181,184,185,186,191,195,196,199,200,201,202,203,204,205,208,229,233,241,256,261,262,264,265,271,272,276,279,289,291,302,304,305,313,315,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,-115,-121,-178,-35,-38,-32,-37,-34,-33,-36,-168,233,-58,-105,-104,241,-58,-91,-80,-110,-179,-169,-57,-77,288,292,-49,-47,-50,-59,302,304,-83,-40,-39,-60,-78,-84,-41,-48,]),'EQUALS':([5,11,12,20,25,29,32,33,38,65,80,81,82,83,85,86,87,92,94,102,105,151,160,169,170,171,173,175,176,177,179,180,181,182,184,185,186,189,191,208,210,218,229,233,288,289,291,302,314,],[-52,-167,84,-53,-166,-54,-51,-55,-17,-51,142,-56,143,144,145,146,147,154,-15,-51,178,-178,213,-35,-44,-38,-31,-29,-28,222,-30,-32,-37,-43,-34,-33,-36,228,-168,-179,-16,-42,-169,-57,-45,-40,-39,-60,-46,]),'NULL':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[61,61,61,61,61,-117,61,-116,-133,61,61,61,61,61,-108,-106,61,61,-107,61,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,61,-111,61,-112,-113,-139,-134,-137,-135,-136,-138,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TRUE':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[77,77,77,77,77,-117,77,-116,-133,77,77,77,77,77,-108,-106,77,77,-107,77,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,77,-111,77,-112,-113,-139,-134,-137,-135,-136,-138,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'BOOL':([38,94,105,107,154,172,210,215,225,251,267,292,293,319,],[-17,-15,181,181,181,181,-16,181,181,181,181,181,181,181,]),'DIVIDE':([5,11,12,20,25,29,32,33,38,45,46,47,49,50,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,102,116,117,151,191,199,200,204,205,208,229,233,241,263,302,304,],[-52,-167,83,-53,-166,-54,-51,-55,-17,-72,-67,-74,-114,-70,-118,-69,-71,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,139,-119,-63,-76,-73,-56,-51,-115,-121,-178,-168,139,139,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'IN':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,160,191,199,200,203,204,205,208,214,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,127,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,215,-168,-105,-104,-91,-80,-110,-179,251,-169,-57,-77,-51,-60,-78,]),'TYPE':([0,7,21,24,28,30,35,43,79,112,155,167,188,230,231,297,318,320,321,329,330,331,336,],[19,-2,-5,-7,-8,-6,19,-4,-122,-3,-24,-18,-9,-123,-188,19,19,19,19,19,19,19,19,]),'SYN':([0,7,21,24,28,30,35,43,79,112,155,167,188,230,231,297,318,320,321,329,330,331,336,],[27,-2,-5,-7,-8,-6,27,-4,-122,-3,-24,-18,-9,-123,-188,27,27,27,27,27,27,27,27,]),'FALSE':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[45,45,45,45,45,-117,45,-116,-133,45,45,45,45,45,-108,-106,45,45,-107,45,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,45,-111,45,-112,-113,-139,-134,-137,-135,-136,-138,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'LEQ':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,130,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'ARRAY':([38,94,105,107,154,172,210,267,292,319,],[-17,-15,183,183,183,183,-16,183,183,183,]),'MODULO':([5,11,12,20,25,29,32,33,38,45,46,47,49,50,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,102,116,117,151,191,199,200,204,205,208,229,233,241,263,302,304,],[-52,-167,87,-53,-166,-54,-51,-55,-17,-72,-67,-74,-114,-70,-118,-69,-71,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,140,-119,-63,-76,-73,-56,-51,-115,-121,-178,-168,140,140,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'DO':([0,7,21,23,24,28,30,35,43,79,99,101,110,112,155,162,164,166,167,188,197,216,230,231,236,238,274,297,318,320,321,329,330,331,336,],[23,-2,-5,23,-7,-8,-6,23,-4,-122,23,-143,23,-3,-24,23,-144,23,-18,-9,23,23,-123,-188,23,23,23,23,23,23,23,23,23,23,23,]),'SEMI':([3,5,8,10,11,13,14,16,18,20,25,29,33,37,38,39,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,77,81,89,91,93,97,98,100,103,104,106,108,114,115,116,117,148,151,157,158,159,161,163,165,169,170,171,173,175,176,179,180,181,182,184,185,186,189,191,192,193,199,200,203,204,205,208,211,212,217,218,223,224,226,227,229,233,240,241,252,255,260,266,268,273,279,283,287,288,289,291,299,300,302,304,305,308,310,311,314,322,326,327,332,334,335,337,338,],[-130,-52,-174,79,-167,-131,-129,-127,-125,-53,-166,-54,-126,-128,-17,-124,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-175,-177,-73,-56,-173,-25,155,-152,162,-150,167,-19,188,-10,-85,-176,-115,-121,-132,-178,-165,-153,-154,-155,-148,-151,-35,-44,-38,-31,-29,-28,-30,-32,-37,-43,-34,-33,-36,-12,-168,230,231,-105,-104,-91,-80,-110,-179,-27,-26,-20,-42,-22,-23,-11,-13,-169,-57,-140,-77,-163,-149,-21,-14,297,-141,-83,-156,-164,-45,-40,-39,320,321,-60,-78,-84,-157,-158,-162,-46,331,-159,-189,-198,-191,-190,-199,-192,]),'NUM':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[6,-2,6,-5,6,-7,-8,-6,6,6,6,-4,6,6,6,-117,6,-116,-122,-133,6,6,6,6,-143,6,6,6,-3,-108,-106,6,6,-107,6,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,6,-111,6,-112,-113,-139,-134,-137,-135,-136,-138,-24,6,-144,6,-18,6,-9,6,6,6,6,6,6,6,6,6,6,-123,-188,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LOWER':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[9,-2,9,-5,9,-7,-8,-6,9,9,9,-4,9,9,9,-117,9,-116,-122,-133,9,9,9,9,-143,9,9,9,-3,-108,-106,9,9,-107,9,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,9,-111,9,-112,-113,-139,-134,-137,-135,-136,-138,-24,9,-144,9,-18,9,-9,9,9,9,9,9,9,9,9,9,9,-123,-188,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'CHAR':([38,94,105,107,154,172,210,215,225,251,267,292,293,319,],[-17,-15,171,171,171,171,-16,171,171,171,171,171,171,171,]),'THEN':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,113,114,116,117,141,151,191,199,200,203,204,205,208,229,233,241,275,279,281,302,304,305,306,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,197,-85,-115,-121,207,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,197,-83,207,-60,-78,-84,207,]),'DOWN':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,116,117,151,160,191,199,200,203,204,205,208,229,233,241,249,250,279,282,302,304,305,312,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,-115,-121,-178,214,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,284,-160,-83,309,-60,-78,-84,-161,]),'AND':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,126,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'TIMES':([5,11,12,20,25,29,32,33,38,45,46,47,49,50,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,102,116,117,151,191,199,200,204,205,208,229,233,241,263,302,304,],[-52,-167,86,-53,-166,-54,-51,-55,-17,-72,-67,-74,-114,-70,-118,-69,-71,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,137,-119,-63,-76,-73,-56,-51,-115,-121,-178,-168,137,137,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'FI':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,79,81,101,116,117,151,164,191,198,199,200,203,204,205,208,229,230,233,236,237,241,244,274,277,279,280,302,303,304,305,324,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-122,-56,-143,-115,-121,-178,-144,-168,240,-105,-104,-91,-80,-110,-179,-169,-123,-57,-142,273,-77,279,-145,305,-83,-87,-60,-146,-78,-84,-147,]),'OR':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,128,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'DCL':([0,7,21,24,28,30,35,43,79,112,155,167,188,230,231,297,318,320,321,329,330,331,336,],[31,-2,-5,-7,-8,-6,31,-4,-122,-3,-24,-18,-9,-123,-188,31,31,31,31,31,31,31,31,]),'SCONST':([8,41,42,44,57,74,75,78,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[72,72,72,72,72,-117,72,-116,-133,72,72,72,72,72,-108,-106,72,72,-107,72,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,72,-111,72,-112,-113,-139,-134,-137,-135,-136,-138,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'LOC':([38,169,170,171,173,175,176,179,180,181,182,184,185,186,218,288,289,291,295,314,328,],[-17,-35,-44,-38,-31,-29,-28,-30,-32,-37,-43,-34,-33,-36,-42,-45,-40,-39,317,-46,333,]),'COMMA':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,91,92,93,94,103,104,105,106,107,108,116,117,149,150,151,152,169,170,171,173,175,176,179,180,181,182,184,185,186,189,190,191,195,196,199,200,201,202,203,204,205,208,210,211,212,217,218,223,224,226,227,229,233,241,248,260,261,262,264,265,266,267,269,270,271,279,288,289,291,295,296,302,304,305,313,314,315,316,317,323,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,-25,153,156,-15,168,-19,153,187,153,-10,-115,-121,-170,209,-178,-172,-35,-44,-38,-31,-29,-28,-30,-32,-37,-43,-34,-33,-36,-12,209,-168,234,-58,-105,-104,234,-58,-91,-80,-110,-179,-16,-27,-26,-20,-42,-22,-23,-11,-13,-169,-57,-77,-171,-21,293,-49,-47,-50,-14,153,301,-193,-59,-83,-45,-40,-39,-196,-195,-60,-78,-84,-41,-46,-48,-172,-197,-194,]),'RETURNS':([268,300,],[298,298,]),'GEQ':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,133,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'PRINT':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[22,-2,22,-5,22,-7,-8,-6,22,22,22,-4,22,22,22,-117,22,-116,-122,-133,22,22,22,22,-143,22,22,22,-3,-108,-106,22,22,-107,22,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,22,-111,22,-112,-113,-139,-134,-137,-135,-136,-138,-24,22,-144,22,-18,22,-9,22,22,22,22,22,22,22,22,22,22,-123,-188,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NE':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,124,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'UPPER':([0,7,8,21,23,24,28,30,35,41,42,43,44,48,57,74,75,78,79,84,88,90,95,99,101,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[36,-2,36,-5,36,-7,-8,-6,36,36,36,-4,36,36,36,-117,36,-116,-122,-133,36,36,36,36,-143,36,36,36,-3,-108,-106,36,36,-107,36,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,36,-111,36,-112,-113,-139,-134,-137,-135,-136,-138,-24,36,-144,36,-18,36,-9,36,36,36,36,36,36,36,36,36,36,-123,-188,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EQ':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,134,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'PROC':([110,],[194,]),'MINUS':([5,8,11,12,20,25,29,32,33,38,41,42,45,46,47,49,50,51,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,75,77,81,84,88,90,95,102,109,111,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,151,178,191,199,200,203,204,205,207,208,209,213,220,221,222,225,228,229,233,234,235,239,241,242,245,246,263,278,285,286,290,293,294,302,304,],[-52,78,-167,85,-53,-166,-54,-51,-55,-17,78,78,-72,-67,-74,-114,-70,122,-118,-69,-71,78,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,78,-73,-56,-133,78,78,78,-51,78,78,-115,-121,-108,-106,78,78,-107,78,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,78,-111,78,-112,-113,-139,-134,-137,-135,-136,-138,-178,78,-168,-105,-104,122,-80,-110,78,-179,78,78,78,78,78,78,78,-169,-57,78,78,78,-77,78,78,78,-51,78,78,78,78,78,78,-60,-78,]),'ID':([0,7,8,15,19,21,23,24,27,28,30,31,35,38,41,42,43,44,48,57,74,75,78,79,84,88,90,94,95,96,99,101,105,107,109,110,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,153,154,155,156,162,164,166,167,168,172,178,187,188,197,207,209,210,213,215,216,220,221,222,225,228,230,231,232,234,235,236,238,239,242,245,246,251,267,274,278,285,286,290,292,293,294,297,301,318,319,320,321,329,330,331,336,],[38,-2,38,38,38,-5,38,-7,38,-8,-6,38,38,-17,38,38,-4,38,38,38,-117,38,-116,-122,-133,38,38,-15,38,38,38,-143,38,38,38,38,38,-3,-108,-106,38,38,-107,38,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,38,-111,38,-112,-113,-139,-134,-137,-135,-136,-138,38,38,-24,38,38,-144,38,-18,38,38,38,38,-9,38,38,38,-16,38,38,38,38,38,38,38,38,-123,-188,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'LAND':([5,11,12,20,25,29,32,33,38,45,46,47,49,50,51,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,102,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,80,-53,-166,-54,-51,-55,-17,-72,-67,-74,-114,-70,118,-118,-69,-71,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-51,-115,-121,-178,-168,-105,-104,118,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'RPAREN':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,90,109,116,117,136,149,150,151,152,169,170,171,173,175,176,179,180,181,182,184,185,186,190,191,199,200,203,204,205,208,218,229,232,233,241,248,257,259,269,270,279,288,289,291,294,295,296,302,304,305,313,314,316,317,323,328,333,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,151,191,-115,-121,204,-170,208,-178,-172,-35,-44,-38,-31,-29,-28,-30,-32,-37,-43,-34,-33,-36,229,-168,-105,-104,-91,-80,-110,-179,-42,-169,268,-57,-77,-171,289,291,300,-193,-83,-45,-40,-39,191,-196,-195,-60,-78,-84,-41,-46,-172,-197,-194,332,337,]),'PLUS':([5,11,12,20,25,29,32,33,38,45,46,47,49,50,51,53,54,55,58,59,60,61,62,63,64,65,66,67,68,69,70,72,77,81,102,116,117,151,191,199,200,203,204,205,208,229,233,241,263,302,304,],[-52,-167,82,-53,-166,-54,-51,-55,-17,-72,-67,-74,-114,-70,119,-118,-69,-71,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-76,-73,-56,-51,-115,-121,-178,-168,-105,-104,119,-80,-110,-179,-169,-57,-77,-51,-60,-78,]),'NOT':([8,41,42,57,75,84,88,90,95,109,111,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,144,145,146,147,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[74,74,74,74,74,-133,74,74,74,74,74,-108,-106,74,74,-107,74,-97,-93,-94,-102,-95,-100,-101,-92,-98,-99,-96,74,-111,74,-112,-113,-139,-134,-137,-135,-136,-138,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'IF':([0,7,8,21,23,24,28,30,35,41,42,43,57,75,79,84,88,90,95,99,101,109,110,111,112,123,142,143,144,145,146,147,155,162,164,166,167,178,188,197,207,209,213,216,220,221,222,225,228,230,231,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[41,-2,75,-5,41,-7,-8,-6,41,75,75,-4,75,75,-122,-133,75,75,75,41,-143,75,41,75,-3,75,-139,-134,-137,-135,-136,-138,-24,41,-144,41,-18,75,-9,41,75,75,75,41,75,75,75,75,75,-123,-188,75,75,41,41,75,75,75,75,41,75,75,75,75,75,75,41,41,41,41,41,41,41,41,]),'LBRACKET':([5,11,12,20,25,29,32,33,34,38,45,46,47,50,52,53,54,55,58,59,61,62,63,64,65,66,67,70,72,77,81,102,117,151,174,183,191,204,208,229,233,241,263,302,304,],[-52,-167,-61,-53,-166,-54,-51,-55,111,-17,-72,-67,-74,-70,123,-61,-69,-71,-65,-68,-75,-79,-64,-66,-51,-55,-62,-63,-76,-73,-56,-51,-61,-178,219,225,-168,-80,-179,-169,-57,-77,-51,-60,-78,]),'RESULT':([0,7,21,23,24,28,30,35,43,79,99,101,110,112,155,162,164,166,167,188,197,216,230,231,236,238,274,297,318,320,321,329,330,331,336,],[42,-2,-5,42,-7,-8,-6,42,-4,-122,42,-143,42,-3,-24,42,-144,42,-18,-9,42,42,-123,-188,42,42,42,42,42,42,42,42,42,42,42,]),'$end':([7,21,24,28,30,35,40,43,79,112,155,167,188,230,231,],[-2,-5,-7,-8,-6,-1,0,-4,-122,-3,-24,-18,-9,-123,-188,]),'INT':([38,94,105,107,154,172,210,215,225,251,267,292,293,319,],[-17,-15,186,186,186,186,-16,186,186,186,186,186,186,186,]),'BY':([5,11,20,25,29,38,45,46,47,49,50,51,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,77,81,116,117,151,191,199,200,203,204,205,208,229,233,241,249,250,279,302,304,305,],[-52,-167,-53,-166,-54,-17,-72,-67,-74,-114,-70,-90,-118,-69,-71,-81,-65,-68,-109,-75,-120,-64,-66,-51,-55,-62,-103,-119,-63,-82,-76,-73,-56,-115,-121,-178,-168,-105,-104,-91,-80,-110,-179,-169,-57,-77,286,-160,-83,-60,-78,-84,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'monadic_operator':([8,41,42,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'operand4':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[49,49,49,116,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'character_string_literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operand1':([8,41,42,57,75,88,90,95,109,111,123,135,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[51,51,51,51,51,51,51,51,51,51,51,203,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'operand0':([8,41,42,57,75,88,90,95,109,111,123,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[10,10,10,10,192,10,192,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'formal_parameter':([232,301,],[270,323,]),'empty_literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'result_spec':([268,300,],[299,322,]),'mode':([105,107,154,172,267,292,319,],[177,189,211,218,295,314,328,]),'integer_mode':([105,107,154,172,215,225,251,267,292,293,319,],[180,180,180,180,180,180,180,180,180,180,180,]),'membership_operator':([56,],[125,]),'elsif_expression':([206,],[243,]),'statement_list':([0,297,320,321,331,],[35,318,329,330,336,]),'relational_operator':([56,],[131,]),'array_slice':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'action_statement_list':([23,162,197,238,],[99,216,236,274,]),'for_control':([23,],[100,]),'character_literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'step_value':([249,],[282,]),'procedure_statement':([0,35,297,318,320,321,329,330,331,336,],[24,24,24,24,24,24,24,24,24,24,]),'parenthesized_expression':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'array_element':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'action_statement':([0,23,35,99,162,197,216,236,238,274,297,318,320,321,329,330,331,336,],[28,101,28,164,101,101,164,164,101,164,28,28,28,28,28,28,28,28,]),'else_clause':([198,303,],[237,324,]),'operand3':([8,41,42,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,205,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'primitive_value':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'discrete_mode':([105,107,154,172,215,225,251,267,292,293,319,],[175,175,175,175,253,262,253,175,175,262,175,]),'integer_literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,219,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,256,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'identifier':([0,8,15,19,23,27,31,35,41,42,44,48,57,75,88,90,95,96,99,105,107,109,110,111,120,121,123,135,138,153,154,156,162,166,168,172,178,187,197,207,209,213,215,216,220,221,222,225,228,232,234,235,236,238,239,242,245,246,251,267,274,278,285,286,290,292,293,294,297,301,318,319,320,321,329,330,331,336,],[32,65,89,94,102,94,94,32,65,65,65,65,65,65,65,65,65,160,102,176,176,65,65,65,65,65,65,65,65,210,176,94,102,65,94,176,65,94,102,65,65,65,254,102,65,65,65,263,65,94,65,65,102,102,65,65,65,65,254,176,102,65,65,65,65,176,263,65,32,94,32,176,32,32,32,32,32,32,]),'character_mode':([105,107,154,172,215,225,251,267,292,293,319,],[184,184,184,184,184,184,184,184,184,184,184,]),'string_concatenation_operator':([51,203,],[120,120,]),'parameter_spec':([267,],[296,]),'value_array_element':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'list_index_mode':([225,],[261,]),'array_location':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'assigning_operator':([12,],[88,]),'step_enumeration':([96,],[159,]),'boolean_mode':([105,107,154,172,215,225,251,267,292,293,319,],[185,185,185,185,185,185,185,185,185,185,185,]),'then_clause':([113,275,],[198,303,]),'identifier_list':([19,27,31,156,168,187,232,301,],[92,105,107,92,105,107,267,267,]),'reference_mode':([105,107,154,172,267,292,319,],[179,179,179,179,179,179,179,]),'result':([8,42,],[73,115,]),'control_part':([23,],[98,]),'constant_expression':([178,222,],[223,260,]),'declaration_list':([31,],[106,]),'expression':([8,41,42,57,75,88,90,95,109,111,123,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[76,114,76,136,114,148,152,114,152,196,202,224,247,152,250,258,258,224,258,266,271,272,114,276,280,114,114,311,312,313,258,316,]),'declaration_statement':([0,35,297,318,320,321,329,330,331,336,],[43,43,43,43,43,43,43,43,43,43,]),'return_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'program':([0,],[40,]),'boolean_literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'discrete_range_mode':([105,107,154,172,215,225,251,267,292,293,319,],[169,169,169,169,252,169,287,169,169,169,169,]),'then_expression':([141,281,306,],[206,307,325,]),'array_mode':([105,107,154,172,267,292,319,],[170,170,170,170,170,170,170,]),'if_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'dereferenced_reference':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'literal_range':([220,221,225,293,294,],[257,259,265,265,259,]),'range_enumeration':([96,],[161,]),'statement':([0,35,297,318,320,321,329,330,331,336,],[7,112,7,112,7,7,112,112,7,112,]),'array_primitive_value':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'conditional_expression':([8,41,42,57,75,88,90,95,109,111,123,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'while_control':([23,100,],[97,165,]),'builtin_call':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'parameter':([90,109,209,294,],[149,149,248,149,]),'location':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[12,53,12,12,53,53,53,117,53,53,53,53,53,12,53,12,53,53,53,53,53,53,12,12,53,12,53,53,53,12,53,53,53,53,53,53,53,12,12,53,53,53,53,12,53,53,53,53,53,53,12,12,12,12,12,12,12,12,]),'parameter_list':([90,109,294,],[150,190,190,]),'result_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'bracketed_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'initialization':([189,],[227,]),'exit_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'newmode_list':([19,],[93,]),'builtin_name':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'assignment_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'synonym_statement':([0,35,297,318,320,321,329,330,331,336,],[21,21,21,21,21,21,21,21,21,21,]),'start_value':([213,],[249,]),'procedure_definition':([110,],[193,]),'procedure_call':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'synonym_definition':([27,168,],[104,217,]),'else_expression':([206,243,],[244,277,]),'newmode_statement':([0,35,297,318,320,321,329,330,331,336,],[30,30,30,30,30,30,30,30,30,30,]),'mode_definition':([19,156,],[91,212,]),'call_action':([0,8,23,35,41,42,44,48,57,75,88,90,95,99,109,110,111,120,121,123,135,138,162,166,178,197,207,209,213,216,220,221,222,225,228,234,235,236,238,239,242,245,246,274,278,285,286,290,293,294,297,318,320,321,329,330,331,336,],[33,66,33,33,66,66,66,66,66,66,66,66,66,33,66,33,66,66,66,66,66,66,33,33,66,33,66,66,66,33,66,66,66,66,66,66,66,33,33,66,66,66,66,33,66,66,66,66,66,66,33,33,33,33,33,33,33,33,]),'composite_mode':([105,107,154,172,267,292,319,],[173,173,173,173,173,173,173,]),'index_mode':([225,293,],[264,315,]),'literal':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'arithmetic_additive_operator':([51,203,],[121,121,]),'operand2':([8,41,42,57,75,88,90,95,109,111,120,121,123,135,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[68,68,68,68,68,68,68,68,68,68,199,200,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'operator1':([56,],[135,]),'iteration':([96,],[158,]),'referenced_location':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'value_array_slice':([8,41,42,44,57,75,88,90,95,109,111,120,121,123,135,138,178,207,209,213,220,221,222,225,228,234,235,239,242,245,246,278,285,286,290,293,294,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'end_value':([249,282,284,309,],[283,308,310,326,]),'declaration':([31,187,],[108,226,]),'synonym_list':([27,],[103,]),'string_mode':([105,107,154,172,267,292,319,],[182,182,182,182,182,182,182,]),'boolean_expression':([41,75,95,239,246,278,],[113,141,157,275,281,306,]),'arithmetic_multiplicative_operator':([68,199,200,],[138,138,138,]),'formal_parameter_list':([232,],[269,]),'do_action':([0,23,35,99,110,162,166,197,216,236,238,274,297,318,320,321,329,330,331,336,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expression_list':([111,123,],[195,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',297),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',304),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',305),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',314),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',321),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',328),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',329),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',330),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',339),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',340),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',341),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',348),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',370),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',377),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',384),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',391),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',404),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',430),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',437),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',444),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',463),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',464),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',475),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',476),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',488),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',489),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',496),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',503),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',504),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',505),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',516),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',517),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',524),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',531),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',532),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',544),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',545),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',551),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',552),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',563),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',564),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',571),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',572),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',573),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',580),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',588),
  ('action -> bracketed_action','action',1,'p_action','parser.py',599),
  ('action -> assignment_action','action',1,'p_action','parser.py',600),
  ('action -> call_action','action',1,'p_action','parser.py',601),
  ('action -> exit_action','action',1,'p_action','parser.py',602),
  ('action -> return_action','action',1,'p_action','parser.py',603),
  ('action -> result_action','action',1,'p_action','parser.py',604),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',611),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',612),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',619),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',631),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',632),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',641),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',652),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',658),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',659),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',667),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',668),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',669),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',681),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',682),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',692),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',693),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',694),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',704),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',711),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',712),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',720),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',721),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',722),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',723),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',738),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',744),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',750),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','parser.py',756),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','parser.py',757),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',775),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',776),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',783),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',784),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',793),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',794),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',803),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',809),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',816),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',817),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',826),
  ('result -> expression','result',1,'p_result','parser.py',833),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',839),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',840),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',854),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',855),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',856),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',857),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',858),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',864),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',871),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',872),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',873),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',874),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',889),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',890),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',899),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',906),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',907),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',917),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',918),
]
