
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '15E5CB8D2228C02E0C134919637E1D30'
    
_lr_action_items = {end':([6,10,20,25,30,36,45,46,116,117,132,188,196,203,204,],[-5,-4,0,-7,-8,-1,-6,-2,-3,-130,-18,-9,-24,-195,-131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'then_expression':([175,296,322,],[223,321,335,]),'formal_parameter_list':([202,],[245,]),'array_slice':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'initialization':([189,],[231,]),'step_enumeration':([103,],[180,]),'character_literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string_mode':([64,113,151,197,246,290,313,],[142,142,142,142,142,142,142,]),'parameter_list':([67,114,292,],[153,191,191,]),'iteration':([103,],[178,]),'bracketed_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'operand1':([31,39,41,59,67,68,99,106,114,115,122,147,164,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[82,82,82,82,82,82,82,82,82,82,82,82,218,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'operand0':([31,39,41,59,67,68,99,106,114,115,122,147,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'array_mode':([64,113,151,197,246,290,313,],[146,146,146,146,146,146,146,]),'newmode_list':([38,],[118,]),'array_location':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'declaration_list':([33,],[111,]),'procedure_statement':([0,36,286,310,314,315,330,331,334,338,],[25,25,25,25,25,25,25,25,25,25,]),'if_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'character_mode':([64,113,151,197,207,226,246,271,290,291,313,],[150,150,150,150,150,150,150,150,150,150,150,]),'else_clause':([200,309,],[242,329,]),'program':([0,],[20,]),'result':([31,39,],[85,121,]),'control_part':([32,],[105,]),'closed_dyadic_operator':([9,],[48,]),'operand3':([31,39,41,59,67,68,99,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,220,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'else_expression':([223,263,],[265,298,]),'assignment_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'empty_literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'discrete_range_mode':([64,113,151,197,207,226,246,271,290,291,313,],[137,137,137,137,137,137,137,137,137,137,137,]),'step_value':([268,],[301,]),'action_statement':([0,32,36,110,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[30,107,30,186,107,107,186,107,186,186,30,30,30,30,30,30,30,30,]),'while_control':([32,109,],[108,184,]),'string_slice':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'result_spec':([248,282,],[287,311,]),'relational_operator':([80,],[165,]),'mode':([64,113,151,197,246,290,313,],[141,189,214,236,283,317,332,]),'parenthesized_expression':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'procedure_call':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'expression_list':([122,174,],[198,221,]),'discrete_mode':([64,113,151,197,207,226,246,271,290,291,313,],[136,136,136,136,252,270,136,306,136,252,136,]),'reference_mode':([64,113,151,197,246,290,313,],[145,145,145,145,145,145,145,]),'operand4':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[70,70,70,70,70,70,70,176,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'conditional_expression':([31,39,41,59,67,68,99,106,114,115,122,147,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'expression':([31,39,41,59,67,68,99,106,114,115,122,147,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[100,100,124,130,155,156,124,124,155,194,199,211,222,250,250,211,250,155,266,267,273,275,276,277,124,295,124,299,316,250,319,124,326,328,]),'dereferenced_reference':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'result_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,258,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'array_primitive_value':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'statement':([0,36,286,310,314,315,330,331,334,338,],[46,116,46,46,116,46,116,46,116,116,]),'mode_definition':([38,195,],[119,235,]),'action_statement_list':([32,182,201,243,],[110,228,244,280,]),'boolean_expression':([41,99,106,240,262,297,],[123,175,183,278,296,322,]),'value_array_element':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'boolean_mode':([64,113,151,197,207,226,246,271,290,291,313,],[143,143,143,143,143,143,143,143,143,143,143,]),'character_string_literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'range_enumeration':([103,],[179,]),'integer_mode':([64,113,151,197,207,226,246,271,290,291,313,],[135,135,135,135,135,135,135,135,135,135,135,]),'membership_operator':([80,],[167,]),'operator1':([80,],[164,]),'builtin_call':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'label_id':([0,17,32,36,110,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[4,66,104,4,104,104,104,104,104,104,104,4,4,4,4,4,4,4,4,]),'identifier_list':([14,33,38,131,187,195,202,245,],[64,113,120,64,113,120,246,246,]),'synonym_statement':([0,36,286,310,314,315,330,331,334,338,],[6,6,6,6,6,6,6,6,6,6,]),'elsif_expression':([223,],[263,]),'start_value':([225,],[268,]),'primitive_value':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'referenced_location':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'builtin_name':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'left_element':([115,],[193,]),'newmode_statement':([0,36,286,310,314,315,330,331,334,338,],[45,45,45,45,45,45,45,45,45,45,]),'location':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[9,77,9,9,77,77,9,77,77,77,157,77,77,77,9,77,77,77,77,77,77,77,77,9,9,9,77,77,77,77,77,77,77,9,77,77,77,77,77,9,9,77,77,77,9,9,77,77,77,77,77,77,9,9,9,9,9,9,9,]),'list_index_mode':([207,],[251,]),'declaration_statement':([0,36,286,310,314,315,330,331,334,338,],[10,10,10,10,10,10,10,10,10,10,]),'value_array_slice':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'string_element':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'formal_parameter':([202,245,],[247,281,]),'synonym_definition':([14,131,],[62,205,]),'synonym_list':([14,],[63,]),'call_action':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[15,83,15,15,83,83,15,83,83,83,83,83,83,83,15,83,83,83,83,83,83,83,83,15,15,15,83,83,83,83,83,83,83,15,83,83,83,83,83,15,15,83,83,83,15,15,83,83,83,83,83,83,15,15,15,15,15,15,15,]),'operator2':([82,218,],[171,171,]),'operand2':([31,39,41,59,67,68,99,106,114,115,122,147,164,171,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[84,84,84,84,84,84,84,84,84,84,84,84,84,219,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'do_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'arithmetic_additive_operator':([9,82,218,],[58,170,170,]),'integer_literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'return_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boolean_literal':([31,39,41,59,67,68,99,102,106,114,115,122,147,164,171,173,174,206,207,209,210,213,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'array_element':([0,31,32,36,39,41,47,59,67,68,71,99,102,106,110,114,115,122,147,164,171,173,174,181,182,201,206,207,209,210,216,224,225,228,230,234,238,239,240,243,244,261,262,264,280,286,289,291,292,297,302,304,310,314,315,330,331,334,338,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'exit_action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'string_concatenation_operator':([9,82,218,],[53,172,172,]),'literal_range':([206,207,210,291,292,],[249,253,257,253,257,]),'then_clause':([123,278,],[200,309,]),'parameter':([67,114,216,292,],[154,154,259,154,]),'end_value':([268,301,303,324,],[305,325,327,336,]),'assigning_operator':([9,],[59,]),'procedure_definition':([47,],[126,]),'start_element':([115,],[192,]),'identifier':([0,14,17,31,32,33,36,38,39,41,47,59,64,67,68,71,99,102,103,106,110,113,114,115,122,131,139,147,151,164,171,173,174,181,182,187,195,197,201,202,206,207,209,210,216,224,225,226,228,230,234,238,239,240,243,244,245,246,261,262,264,271,280,286,289,290,291,292,297,302,304,310,313,314,315,330,331,334,338,],[35,61,65,78,35,61,35,61,78,78,128,78,144,78,78,78,78,78,177,78,35,144,78,78,78,61,208,78,144,78,78,78,78,128,35,61,61,144,35,61,78,254,78,78,78,78,78,269,35,78,78,78,78,78,35,35,61,144,78,78,78,269,35,35,78,144,254,78,78,78,78,35,144,35,35,35,35,35,35,]),'statement_list':([0,286,310,315,331,],[36,314,330,334,338,]),'index_mode':([207,291,],[255,318,]),'action':([0,32,36,47,110,181,182,201,228,243,244,280,286,310,314,315,330,331,334,338,],[37,37,37,127,37,127,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'for_control':([32,],[109,]),'constant_expression':([147,209,],[212,256,]),'composite_mode':([64,113,151,197,246,290,313,],[148,148,148,148,148,148,148,]),'arithmetic_multiplicative_operator':([9,84,219,],[57,173,173,]),'right_element':([234,],[274,]),'monadic_operator':([31,39,41,59,67,68,99,106,114,115,122,147,164,171,173,174,206,207,209,210,216,224,225,230,234,238,239,240,261,262,264,289,291,292,297,302,304,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'declaration':([33,187,],[112,229,]),'parameter_spec':([246,],[284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',23),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',27),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',28),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',37),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',41),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',46),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',50),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',51),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',60),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',61),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',70),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',76),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',77),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',85),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',90),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',116),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',122),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',128),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',129),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',138),
  ('mode -> identifier','mode',1,'p_mode','parser.py',144),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',145),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',146),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',147),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',153),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',154),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',155),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',156),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',162),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',168),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',174),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',180),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',181),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',186),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',192),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',197),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',198),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',203),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',209),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',214),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',215),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',223),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',224),
  ('location -> identifier','location',1,'p_location','parser.py',230),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',231),
  ('location -> string_element','location',1,'p_location','parser.py',232),
  ('location -> string_slice','location',1,'p_location','parser.py',233),
  ('location -> array_element','location',1,'p_location','parser.py',234),
  ('location -> array_slice','location',1,'p_location','parser.py',235),
  ('location -> call_action','location',1,'p_location','parser.py',236),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',242),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',248),
  ('start_element -> expression','start_element',1,'p_start_element','parser.py',254),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',260),
  ('left_element -> expression','left_element',1,'p_left_element','parser.py',266),
  ('right_element -> expression','right_element',1,'p_right_element','parser.py',272),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',278),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',284),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',285),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',294),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',300),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',306),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',307),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',308),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',309),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',315),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',316),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',317),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',318),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',319),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',325),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',331),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',332),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',338),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',344),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',350),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',356),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',362),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',368),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',374),
  ('expression -> operand0','expression',1,'p_expression','parser.py',380),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',381),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',387),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',388),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',397),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',403),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',409),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',415),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',416),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',425),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',426),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',435),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',436),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',446),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',447),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',448),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',449),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',455),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',461),
  ('operand1 -> operand1 operator2 operand2','operand1',3,'p_operand1','parser.py',462),
  ('operator2 -> arithmetic_additive_operator','operator2',1,'p_operator2','parser.py',471),
  ('operator2 -> string_concatenation_operator','operator2',1,'p_operator2','parser.py',472),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',478),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',479),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',485),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',491),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',492),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',501),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',502),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',503),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',508),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',509),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',518),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',519),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',525),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',526),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',527),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',533),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',539),
  ('action_statement -> label_id COLON action SEMI','action_statement',4,'p_action_statement','parser.py',540),
  ('label_id -> identifier','label_id',1,'p_label_id','parser.py',549),
  ('action -> bracketed_action','action',1,'p_action','parser.py',555),
  ('action -> assignment_action','action',1,'p_action','parser.py',556),
  ('action -> call_action','action',1,'p_action','parser.py',557),
  ('action -> exit_action','action',1,'p_action','parser.py',558),
  ('action -> return_action','action',1,'p_action','parser.py',559),
  ('action -> result_action','action',1,'p_action','parser.py',560),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',566),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',567),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',573),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',579),
  ('assigning_operator -> closed_dyadic_operator EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',580),
  ('closed_dyadic_operator -> arithmetic_additive_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',589),
  ('closed_dyadic_operator -> arithmetic_multiplicative_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',590),
  ('closed_dyadic_operator -> string_concatenation_operator','closed_dyadic_operator',1,'p_closed_dyadic_operator','parser.py',591),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',597),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',598),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',607),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',612),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',613),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',621),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',622),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',623),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',634),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',635),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',644),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',645),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',646),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',655),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',661),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',662),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',668),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',669),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',670),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',671),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',685),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',691),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',697),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',703),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',704),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',713),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',719),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',720),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',726),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',727),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',735),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',736),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',745),
  ('exit_action -> EXIT label_id','exit_action',2,'p_exit_action','parser.py',751),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',757),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',758),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',766),
  ('result -> expression','result',1,'p_result','parser.py',772),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',778),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',779),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',789),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',790),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',791),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',792),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',793),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',794),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',795),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',796),
  ('procedure_statement -> label_id COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',802),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',808),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',809),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',810),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',811),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',825),
  ('formal_parameter_list -> formal_parameter_list formal_parameter','formal_parameter_list',2,'p_formal_parameter_list','parser.py',826),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',835),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',841),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',842),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',851),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',852),
]
