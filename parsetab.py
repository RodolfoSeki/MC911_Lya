
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT UPPER TRUE TYPE CHAR LOWER IF WHILE FOR LENGTH ELSE CHARS ABS FALSE SYN TO EXIT THEN ASC OD ELSIF READ PROC NULL ARRAY PRINT RETURNS DO INT RESULT DCL BY REF BOOL LOC NUM FI DOWN IN RETURN ENDprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'INT':([20,80,82,110,158,163,213,214,222,263,264,285,286,320,],[-17,152,-15,152,152,152,152,-16,152,152,152,152,152,152,]),'REF':([20,80,82,110,158,163,214,264,286,320,],[-17,158,-15,158,158,158,-16,158,158,158,]),'EQUALS':([1,12,13,19,20,32,35,37,43,60,80,82,85,91,99,100,101,102,104,105,106,143,144,145,147,148,149,150,151,152,153,156,157,159,160,173,181,184,194,214,216,228,229,239,281,282,284,302,309,],[-52,-51,-166,98,-17,-55,-54,-53,-167,-51,142,-15,163,-51,185,186,187,188,190,-56,191,-34,-44,-31,-38,-35,-29,-37,-43,-36,-28,215,-33,-32,-30,221,-168,-178,231,-16,-42,-169,-179,-57,-45,-40,-39,-60,-46,]),'LBRACKET':([1,12,13,19,20,32,35,37,41,43,46,47,48,49,51,53,54,55,56,57,59,60,63,65,69,72,73,74,78,79,91,105,128,146,154,181,184,206,228,229,239,241,253,302,303,],[-52,-51,-166,-61,-17,-55,-54,-53,115,-167,-67,-68,-65,-62,-74,129,-70,-76,-64,-63,-69,-51,-66,-61,-55,-72,-79,-73,-75,-71,-51,-56,-61,210,213,-168,-178,-80,-169,-179,-57,-77,-51,-60,-78,]),'EQ':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,119,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'CHARS':([20,80,82,110,158,163,214,264,286,320,],[-17,146,-15,146,146,146,-16,146,146,146,]),'EXIT':([0,2,5,11,18,21,25,27,42,44,89,92,95,108,162,165,166,168,170,193,196,220,225,226,235,237,271,300,319,321,322,326,327,329,331,],[30,30,-2,30,-8,-6,-7,-4,-5,-3,30,-143,30,-122,-18,-24,30,-144,30,-9,30,30,-123,-188,30,30,30,30,30,30,30,30,30,30,30,]),'SYN':([0,2,5,18,21,25,27,42,44,108,162,165,193,225,226,300,319,321,322,326,327,329,331,],[4,4,-2,-8,-6,-7,-4,-5,-3,-122,-18,-24,-9,-123,-188,4,4,4,4,4,4,4,4,]),'ARROW':([1,3,12,13,19,20,23,32,35,37,39,43,58,60,65,66,67,68,69,70,90,91,96,97,98,103,105,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,138,139,140,141,142,181,184,185,186,187,188,190,191,205,211,212,213,215,221,227,228,229,231,236,238,239,240,242,245,246,253,278,283,285,287,288,290,302,],[-52,50,-51,-166,105,-17,50,-55,-54,-53,50,-167,-117,-51,105,-116,50,50,-55,50,50,-51,50,50,-133,50,-56,50,-102,-101,-97,-96,-98,-94,-100,-95,-99,50,-93,-92,105,50,50,-106,50,-107,-108,50,-113,-112,-111,50,-168,-178,-134,-138,-139,-137,-136,-135,50,50,50,50,50,50,50,-169,-179,50,50,50,-57,50,50,50,50,-51,50,50,50,50,50,50,-60,]),'CCONST':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[51,51,51,-117,-116,51,51,51,51,51,51,-133,51,51,-102,-101,-97,-96,-98,-94,-100,-95,-99,51,-93,-92,51,51,-106,51,-107,-108,51,-113,-112,-111,51,-134,-138,-139,-137,-136,-135,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'LOC':([20,143,144,145,147,148,149,150,151,152,153,157,159,160,216,281,282,284,295,309,328,],[-17,-34,-44,-31,-38,-35,-29,-37,-43,-36,-28,-33,-32,-30,-42,-45,-40,-39,316,-46,333,]),'OR':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,123,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'OD':([89,92,108,168,220,225,],[167,-143,-122,-144,258,-123,]),'ASC':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[6,6,6,-2,6,-8,-6,6,-7,-4,6,-5,-3,6,-117,-116,6,6,6,6,6,-143,6,6,6,-133,6,-122,6,-102,-101,-97,-96,-98,-94,-100,-95,-99,6,-93,-92,6,6,-106,6,-107,-108,6,-113,-112,-111,6,-18,-24,6,-144,6,-134,-138,-139,-137,-136,-135,-9,6,6,6,6,6,6,6,6,-123,-188,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'THEN':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,105,113,114,128,135,137,181,184,199,202,203,206,207,228,229,239,241,272,276,280,302,303,304,305,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,196,-85,-121,205,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,196,-83,205,-60,-78,-84,205,]),'NUM':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[8,8,8,-2,8,-8,-6,8,-7,-4,8,-5,-3,8,-117,-116,8,8,8,8,8,-143,8,8,8,-133,8,-122,8,-102,-101,-97,-96,-98,-94,-100,-95,-99,8,-93,-92,8,8,-106,8,-107,-108,8,-113,-112,-111,8,-18,-24,8,-144,8,-134,-138,-139,-137,-136,-135,-9,8,8,8,8,8,8,8,8,-123,-188,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'DOWN':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,173,181,184,199,202,203,206,207,228,229,239,241,259,260,276,289,302,303,304,314,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,223,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-160,292,-83,313,-60,-78,-84,-161,]),'PLUS':([1,12,13,19,20,32,35,37,43,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-51,-166,99,-17,-55,-54,-53,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,131,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-51,-56,-121,-115,-168,-178,131,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'COLON':([1,12,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,198,199,201,202,203,206,207,228,229,239,241,250,253,276,302,303,304,310,],[-52,95,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,170,-56,-121,-115,-168,-178,240,-91,242,-104,-105,-80,-110,-169,-179,-57,-77,283,-51,-83,-60,-78,-84,283,]),'IN':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,173,181,184,199,202,203,206,207,223,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,116,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,222,-168,-178,-91,-104,-105,-80,-110,263,-169,-179,-57,-77,-51,-60,-78,]),'SEMI':([1,7,10,13,15,16,17,20,22,23,24,28,32,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,75,76,77,78,79,81,83,84,86,87,88,93,105,107,109,111,112,114,128,137,143,144,145,147,148,149,150,151,152,153,157,159,160,167,169,171,172,174,175,177,178,181,184,189,194,199,202,203,206,207,208,209,216,217,218,219,228,229,230,232,234,239,241,257,258,262,267,269,270,276,281,282,284,291,293,297,299,302,303,304,309,311,312,315,318,325,330,332,334,335,336,337,],[-52,-129,-125,-166,-128,-131,-130,-17,-124,-174,108,-127,-126,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-177,-176,-109,-75,-71,-19,162,-25,165,-152,166,-150,-56,-175,193,-10,-173,-85,-121,-115,-34,-44,-31,-38,-35,-29,-37,-43,-36,-28,-33,-32,-30,-148,-165,-151,-153,-155,-154,225,226,-168,-178,-132,-12,-91,-104,-105,-80,-110,-22,-23,-42,-20,-27,-26,-169,-179,-11,-13,-140,-57,-77,-21,-149,-163,300,-14,-141,-83,-45,-40,-39,-156,-164,319,321,-60,-78,-84,-46,-162,-157,-158,326,-159,-189,-190,-198,-191,-192,-199,]),'PROC':([95,],[176,]),'ARRAY':([20,80,82,110,158,163,214,264,286,320,],[-17,154,-15,154,154,154,-16,154,154,154,]),'NOT':([3,23,39,67,68,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[58,58,58,58,58,58,58,58,-133,58,58,-102,-101,-97,-96,-98,-94,-100,-95,-99,58,-93,-92,58,58,-106,58,-107,-108,58,-113,-112,-111,58,-134,-138,-139,-137,-136,-135,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TO':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,259,260,276,289,292,302,303,304,313,314,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-160,288,-83,288,288,-60,-78,-84,288,-161,]),'DO':([0,2,5,11,18,21,25,27,42,44,89,92,95,108,162,165,166,168,170,193,196,220,225,226,235,237,271,300,319,321,322,326,327,329,331,],[11,11,-2,11,-8,-6,-7,-4,-5,-3,11,-143,11,-122,-18,-24,11,-144,11,-9,11,11,-123,-188,11,11,11,11,11,11,11,11,11,11,11,]),'LAND':([1,12,13,19,20,32,35,37,43,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-51,-166,101,-17,-55,-54,-53,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,134,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-51,-56,-121,-115,-168,-178,134,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'RETURNS':([267,297,],[298,298,]),'END':([5,18,21,25,27,42,44,108,162,165,193,225,226,322,327,329,331,],[-2,-8,-6,-7,-4,-5,-3,-122,-18,-24,-9,-123,-188,330,332,335,336,]),'LT':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,122,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'LOWER':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[38,38,38,-2,38,-8,-6,38,-7,-4,38,-5,-3,38,-117,-116,38,38,38,38,38,-143,38,38,38,-133,38,-122,38,-102,-101,-97,-96,-98,-94,-100,-95,-99,38,-93,-92,38,38,-106,38,-107,-108,38,-113,-112,-111,38,-18,-24,38,-144,38,-134,-138,-139,-137,-136,-135,-9,38,38,38,38,38,38,38,38,-123,-188,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'COMMA':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,80,81,82,83,84,85,86,105,109,110,111,128,137,143,144,145,147,148,149,150,151,152,153,157,159,160,179,180,181,182,183,184,194,197,198,199,200,201,202,203,206,207,208,209,214,216,217,218,219,228,229,230,232,239,241,252,254,255,256,257,264,265,266,268,269,273,276,281,282,284,294,295,302,303,304,307,308,309,310,316,317,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,155,-19,-15,161,-25,155,164,-56,192,155,-10,-121,-115,-34,-44,-31,-38,-35,-29,-37,-43,-36,-28,-33,-32,-30,227,-170,-168,-172,227,-178,-12,238,-58,-91,238,-58,-104,-105,-80,-110,-22,-23,-16,-42,-20,-27,-26,-169,-179,-11,-13,-57,-77,285,-49,-47,-50,-21,155,296,-193,-171,-14,-59,-83,-45,-40,-39,-195,-196,-60,-78,-84,-41,-48,-46,-172,-197,-194,]),'TIMES':([1,12,13,19,20,32,35,37,43,46,47,48,49,51,52,54,55,56,57,59,60,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,202,203,206,207,228,229,239,241,253,302,303,],[-52,-51,-166,104,-17,-55,-54,-53,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-66,-119,-118,-55,141,-72,-120,-73,-109,-75,-71,-51,-56,-121,-115,-168,-178,141,141,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'DCL':([0,2,5,18,21,25,27,42,44,108,162,165,193,225,226,300,319,321,322,326,327,329,331,],[29,29,-2,-8,-6,-7,-4,-5,-3,-122,-18,-24,-9,-123,-188,29,29,29,29,29,29,29,29,]),'DIVIDE':([1,12,13,19,20,32,35,37,43,46,47,48,49,51,52,54,55,56,57,59,60,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,202,203,206,207,228,229,239,241,253,302,303,],[-52,-51,-166,102,-17,-55,-54,-53,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-66,-119,-118,-55,140,-72,-120,-73,-109,-75,-71,-51,-56,-121,-115,-168,-178,140,140,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'RPAREN':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,96,97,105,128,136,137,143,144,145,147,148,149,150,151,152,153,157,159,160,179,180,181,182,183,184,199,202,203,206,207,216,224,228,229,239,241,249,251,265,266,268,276,281,282,284,287,294,295,302,303,304,307,309,310,316,317,328,333,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,181,184,-56,-121,206,-115,-34,-44,-31,-38,-35,-29,-37,-43,-36,-28,-33,-32,-30,228,-170,-168,-172,229,-178,-91,-104,-105,-80,-110,-42,267,-169,-179,-57,-77,282,284,297,-193,-171,-83,-45,-40,-39,181,-195,-196,-60,-78,-84,-41,-46,-172,-197,-194,334,337,]),'MINUS':([1,3,12,13,19,20,23,32,35,37,39,43,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,67,68,69,71,72,73,74,77,78,79,90,91,96,97,98,103,105,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,137,138,139,140,141,142,181,184,185,186,187,188,190,191,199,202,203,205,206,207,211,212,213,215,221,227,228,229,231,236,238,239,240,241,242,245,246,253,278,283,285,287,288,290,302,303,],[-52,66,-51,-166,106,-17,66,-55,-54,-53,66,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,133,-66,-119,-118,66,66,-55,-103,-72,-120,-73,-109,-75,-71,66,-51,66,66,-133,66,-56,66,-102,-101,-97,-96,-98,-94,-100,-95,-99,66,-93,-92,-121,66,66,-106,66,-107,-108,-115,66,-113,-112,-111,66,-168,-178,-134,-138,-139,-137,-136,-135,133,-104,-105,66,-80,-110,66,66,66,66,66,66,-169,-179,66,66,66,-57,66,-77,66,66,66,-51,66,66,66,66,66,66,-60,-78,]),'ID':([0,2,3,4,5,9,11,18,20,21,23,25,27,29,30,39,42,44,50,58,66,67,68,70,80,82,89,90,92,94,95,96,97,98,103,108,110,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,155,158,161,162,163,164,165,166,168,170,185,186,187,188,190,191,192,193,196,205,211,212,213,214,215,220,221,222,224,225,226,227,231,235,236,237,238,240,242,245,246,263,264,271,278,283,285,286,287,288,290,296,300,319,320,321,322,326,327,329,331,],[20,20,20,20,-2,20,20,-8,-17,-6,20,-7,-4,20,20,20,-5,-3,20,-117,-116,20,20,20,20,-15,20,20,-143,20,20,20,20,-133,20,-122,20,20,-102,-101,-97,-96,-98,-94,-100,-95,-99,20,-93,-92,20,20,-106,20,-107,-108,20,-113,-112,-111,20,20,20,20,-18,20,20,-24,20,-144,20,-134,-138,-139,-137,-136,-135,20,-9,20,20,20,20,20,-16,20,20,20,20,20,-123,-188,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ELSE':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,92,105,108,128,137,168,181,184,195,199,202,203,204,206,207,225,228,229,237,239,241,244,247,276,301,302,303,304,306,324,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-143,-56,-122,-121,-115,-144,-168,-178,235,-91,-104,-105,245,-80,-110,-123,-169,-179,-142,-57,-77,245,-86,-83,235,-60,-78,-84,-88,-89,]),'LEQ':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,117,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'RBRACKET':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,143,147,148,150,152,157,159,181,184,197,198,199,200,201,202,203,206,207,228,229,239,241,248,252,254,255,256,273,274,275,276,282,284,302,303,304,307,308,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-34,-38,-35,-37,-36,-33,-32,-168,-178,239,-58,-91,241,-58,-104,-105,-80,-110,-169,-179,-57,-77,281,286,-49,-47,-50,-59,302,303,-83,-40,-39,-60,-78,-84,-41,-48,]),'BY':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,259,260,276,302,303,304,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-160,290,-83,-60,-78,-84,]),'LPAREN':([3,6,8,12,14,20,23,31,33,34,36,38,39,40,58,60,66,67,68,70,90,91,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,143,147,148,149,150,152,153,157,159,176,185,186,187,188,190,191,205,211,212,213,215,221,227,231,236,238,240,242,245,246,253,254,261,262,278,282,283,284,285,287,288,290,293,298,],[68,-181,-182,96,97,-17,68,-187,-183,-186,-180,-184,68,-185,-117,96,-116,68,68,68,68,96,68,68,-133,68,68,-102,-101,-97,-96,-98,-94,-100,-95,-99,68,-93,-92,68,68,-106,68,-107,-108,68,-113,-112,-111,68,-34,-38,-35,211,-37,-36,212,-33,-32,224,-134,-138,-139,-137,-136,-135,68,68,68,68,68,68,68,68,68,68,68,68,68,68,287,211,212,211,68,-40,68,-39,68,68,68,68,211,320,]),'FOR':([11,],[94,]),'RETURN':([0,2,5,11,18,21,25,27,42,44,89,92,95,108,162,165,166,168,170,193,196,220,225,226,235,237,271,300,319,321,322,326,327,329,331,],[23,23,-2,23,-8,-6,-7,-4,-5,-3,23,-143,23,-122,-18,-24,23,-144,23,-9,23,23,-123,-188,23,23,23,23,23,23,23,23,23,23,23,]),'GT':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,120,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'CHAR':([20,80,82,110,158,163,213,214,222,263,264,285,286,320,],[-17,147,-15,147,147,147,147,-16,147,147,147,147,147,147,]),'AND':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,121,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'RESULT':([0,2,5,11,18,21,25,27,42,44,89,92,95,108,162,165,166,168,170,193,196,220,225,226,235,237,271,300,319,321,322,326,327,329,331,],[3,3,-2,3,-8,-6,-7,-4,-5,-3,3,-143,3,-122,-18,-24,3,-144,3,-9,3,3,-123,-188,3,3,3,3,3,3,3,3,3,3,3,]),'ELSIF':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,92,105,108,128,137,168,181,184,195,199,202,203,204,206,207,225,228,229,237,239,241,244,247,276,301,302,303,304,306,324,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-143,-56,-122,-121,-115,-144,-168,-178,236,-91,-104,-105,246,-80,-110,-123,-169,-179,-142,-57,-77,278,-86,-83,236,-60,-78,-84,-88,-89,]),'GEQ':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,124,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'PRINT':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[31,31,31,-2,31,-8,-6,31,-7,-4,31,-5,-3,31,-117,-116,31,31,31,31,31,-143,31,31,31,-133,31,-122,31,-102,-101,-97,-96,-98,-94,-100,-95,-99,31,-93,-92,31,31,-106,31,-107,-108,31,-113,-112,-111,31,-18,-24,31,-144,31,-134,-138,-139,-137,-136,-135,-9,31,31,31,31,31,31,31,31,-123,-188,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'SCONST':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[55,55,55,-117,-116,55,55,55,55,55,55,-133,55,55,-102,-101,-97,-96,-98,-94,-100,-95,-99,55,-93,-92,55,55,-106,55,-107,-108,55,-113,-112,-111,55,-134,-138,-139,-137,-136,-135,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'$end':([2,5,18,21,25,26,27,42,44,108,162,165,193,225,226,],[-1,-2,-8,-6,-7,0,-4,-5,-3,-122,-18,-24,-9,-123,-188,]),'READ':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[34,34,34,-2,34,-8,-6,34,-7,-4,34,-5,-3,34,-117,-116,34,34,34,34,34,-143,34,34,34,-133,34,-122,34,-102,-101,-97,-96,-98,-94,-100,-95,-99,34,-93,-92,34,34,-106,34,-107,-108,34,-113,-112,-111,34,-18,-24,34,-144,34,-134,-138,-139,-137,-136,-135,-9,34,34,34,34,34,34,34,34,-123,-188,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'BOOL':([20,80,82,110,158,163,213,214,222,263,264,285,286,320,],[-17,150,-15,150,150,150,150,-16,150,150,150,150,150,150,]),'NE':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,62,63,64,65,69,71,72,73,74,77,78,79,105,128,137,181,184,199,202,203,206,207,228,229,239,241,253,302,303,],[-52,-166,-17,-54,-53,-167,118,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-56,-121,-115,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'NULL':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[78,78,78,-117,-116,78,78,78,78,78,78,-133,78,78,-102,-101,-97,-96,-98,-94,-100,-95,-99,78,-93,-92,78,78,-106,78,-107,-108,78,-113,-112,-111,78,-134,-138,-139,-137,-136,-135,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'ABS':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[36,36,36,-2,36,-8,-6,36,-7,-4,36,-5,-3,36,-117,-116,36,36,36,36,36,-143,36,36,36,-133,36,-122,36,-102,-101,-97,-96,-98,-94,-100,-95,-99,36,-93,-92,36,36,-106,36,-107,-108,36,-113,-112,-111,36,-18,-24,36,-144,36,-134,-138,-139,-137,-136,-135,-9,36,36,36,36,36,36,36,36,-123,-188,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TYPE':([0,2,5,18,21,25,27,42,44,108,162,165,193,225,226,300,319,321,322,326,327,329,331,],[9,9,-2,-8,-6,-7,-4,-5,-3,-122,-18,-24,-9,-123,-188,9,9,9,9,9,9,9,9,]),'FALSE':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[72,72,72,-117,-116,72,72,72,72,72,72,-133,72,72,-102,-101,-97,-96,-98,-94,-100,-95,-99,72,-93,-92,72,72,-106,72,-107,-108,72,-113,-112,-111,72,-134,-138,-139,-137,-136,-135,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'TRUE':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[74,74,74,-117,-116,74,74,74,74,74,74,-133,74,74,-102,-101,-97,-96,-98,-94,-100,-95,-99,74,-93,-92,74,74,-106,74,-107,-108,74,-113,-112,-111,74,-134,-138,-139,-137,-136,-135,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'WHILE':([1,11,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,93,105,128,137,143,147,148,150,152,157,159,172,174,175,181,184,199,202,203,206,207,228,229,239,241,262,276,282,284,291,293,302,303,304,311,312,315,325,],[-52,90,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,90,-56,-121,-115,-34,-38,-35,-37,-36,-33,-32,-153,-155,-154,-168,-178,-91,-104,-105,-80,-110,-169,-179,-57,-77,-163,-83,-40,-39,-156,-164,-60,-78,-84,-162,-157,-158,-159,]),'MODULO':([1,12,13,19,20,32,35,37,43,46,47,48,49,51,52,54,55,56,57,59,60,63,64,65,69,71,72,73,74,77,78,79,91,105,128,137,181,184,202,203,206,207,228,229,239,241,253,302,303,],[-52,-51,-166,100,-17,-55,-54,-53,-167,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-66,-119,-118,-55,139,-72,-120,-73,-109,-75,-71,-51,-56,-121,-115,-168,-178,139,139,-80,-110,-169,-179,-57,-77,-51,-60,-78,]),'IF':([0,2,3,5,11,18,21,23,25,27,39,42,44,67,68,89,90,92,95,96,97,98,103,108,115,129,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[39,39,67,-2,39,-8,-6,67,-7,-4,67,-5,-3,67,67,39,67,-143,39,67,67,-133,67,-122,67,67,67,-18,-24,39,-144,39,-134,-138,-139,-137,-136,-135,-9,39,67,67,67,67,67,39,67,-123,-188,67,67,39,67,39,67,67,67,67,67,39,67,67,67,67,67,67,39,39,39,39,39,39,39,39,]),'LENGTH':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[40,40,40,-2,40,-8,-6,40,-7,-4,40,-5,-3,40,-117,-116,40,40,40,40,40,-143,40,40,40,-133,40,-122,40,-102,-101,-97,-96,-98,-94,-100,-95,-99,40,-93,-92,40,40,-106,40,-107,-108,40,-113,-112,-111,40,-18,-24,40,-144,40,-134,-138,-139,-137,-136,-135,-9,40,40,40,40,40,40,40,40,-123,-188,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FI':([1,13,20,35,37,43,45,46,47,48,49,51,52,54,55,56,57,59,60,61,62,63,64,65,69,71,72,73,74,77,78,79,92,105,108,128,137,168,181,184,195,199,202,203,206,207,225,228,229,233,237,239,241,243,271,276,277,279,301,302,303,304,323,],[-52,-166,-17,-54,-53,-167,-81,-67,-68,-65,-62,-74,-114,-70,-76,-64,-63,-69,-51,-82,-90,-66,-119,-118,-55,-103,-72,-120,-73,-109,-75,-71,-143,-56,-122,-121,-115,-144,-168,-178,234,-91,-104,-105,-80,-110,-123,-169,-179,270,-142,-57,-77,276,-145,-83,304,-87,-146,-60,-78,-84,-147,]),'ICONST':([3,23,39,58,66,67,68,70,90,96,97,98,103,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,185,186,187,188,190,191,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[79,79,79,-117,-116,79,79,79,79,79,79,-133,79,79,-102,-101,-97,-96,-98,-94,-100,-95,-99,79,-93,-92,79,79,-106,79,-107,-108,79,-113,-112,-111,79,-134,-138,-139,-137,-136,-135,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'UPPER':([0,2,3,5,11,18,21,23,25,27,39,42,44,50,58,66,67,68,70,89,90,92,95,96,97,98,103,108,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,138,139,140,141,142,162,165,166,168,170,185,186,187,188,190,191,193,196,205,211,212,213,215,220,221,225,226,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[33,33,33,-2,33,-8,-6,33,-7,-4,33,-5,-3,33,-117,-116,33,33,33,33,33,-143,33,33,33,-133,33,-122,33,-102,-101,-97,-96,-98,-94,-100,-95,-99,33,-93,-92,33,33,-106,33,-107,-108,33,-113,-112,-111,33,-18,-24,33,-144,33,-134,-138,-139,-137,-136,-135,-9,33,33,33,33,33,33,33,33,-123,-188,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dereferenced_reference':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'then_expression':([135,280,305,],[204,306,324,]),'character_string_literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'parenthesized_expression':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,248,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'formal_parameter_list':([224,],[265,]),'control_part':([11,],[88,]),'identifier_list':([4,9,29,161,164,192,224,296,],[80,85,110,80,85,110,264,264,]),'character_literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'parameter_spec':([264,],[294,]),'character_mode':([80,110,158,163,213,222,263,264,285,286,320,],[143,143,143,143,143,143,143,143,143,143,143,]),'conditional_expression':([3,23,39,67,68,90,96,97,103,115,129,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'start_value':([221,],[260,]),'initialization':([194,],[232,]),'identifier':([0,2,3,4,9,11,23,29,30,39,50,67,68,70,80,89,90,94,95,96,97,103,110,115,125,129,130,132,138,142,155,158,161,163,164,166,170,192,196,205,211,212,213,215,220,221,222,224,227,231,235,236,237,238,240,242,245,246,263,264,271,278,283,285,286,287,288,290,296,300,319,320,321,322,326,327,329,331,],[12,12,60,82,82,91,60,82,112,60,60,60,60,60,153,91,60,173,60,60,60,60,153,60,60,60,60,60,60,60,214,153,82,153,82,91,60,82,91,60,60,60,253,60,91,60,261,82,60,60,91,60,91,60,60,60,60,60,261,153,91,60,60,253,153,60,60,60,82,12,12,153,12,12,12,12,12,12,]),'arithmetic_additive_operator':([62,199,],[130,130,]),'operand1':([3,23,39,67,68,90,96,97,103,115,125,129,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[62,62,62,62,62,62,62,62,62,62,199,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'statement':([0,2,300,319,321,322,326,327,329,331,],[5,44,5,5,5,44,5,44,44,44,]),'end_value':([260,289,292,313,],[291,312,315,325,]),'integer_literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'mode':([80,110,158,163,264,286,320,],[156,194,216,218,295,309,328,]),'return_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'step_enumeration':([94,],[175,]),'while_control':([11,93,],[87,171,]),'action_statement':([0,2,11,89,166,196,220,235,237,271,300,319,321,322,326,327,329,331,],[18,18,92,168,92,92,168,92,168,168,18,18,18,18,18,18,18,18,]),'reference_mode':([80,110,158,163,264,286,320,],[160,160,160,160,160,160,160,]),'statement_list':([0,300,319,321,326,],[2,322,327,329,331,]),'newmode_statement':([0,2,300,319,321,322,326,327,329,331,],[21,21,21,21,21,21,21,21,21,21,]),'monadic_operator':([3,23,39,67,68,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'composite_mode':([80,110,158,163,264,286,320,],[145,145,145,145,145,145,145,]),'action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[24,24,24,24,177,24,177,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'operand2':([3,23,39,67,68,90,96,97,103,115,125,129,130,132,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[71,71,71,71,71,71,71,71,71,71,71,71,202,203,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'do_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'declaration_list':([29,],[109,]),'arithmetic_multiplicative_operator':([71,202,203,],[138,138,138,]),'declaration_statement':([0,2,300,319,321,322,326,327,329,331,],[27,27,27,27,27,27,27,27,27,27,]),'iteration':([94,],[172,]),'call_action':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[32,32,69,32,69,69,69,69,69,69,32,69,32,69,69,69,69,69,69,69,69,69,69,32,32,32,69,69,69,69,69,32,69,69,69,32,69,32,69,69,69,69,69,32,69,69,69,69,69,69,32,32,32,32,32,32,32,32,]),'result_spec':([267,297,],[299,318,]),'primitive_value':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'index_mode':([213,285,],[255,308,]),'array_element':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'expression':([3,23,39,67,68,90,96,97,103,115,129,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[75,75,114,114,136,114,182,182,189,198,201,209,247,250,250,250,209,259,182,269,114,273,274,275,279,114,114,307,250,310,311,314,]),'result':([3,23,],[76,107,]),'operand3':([3,23,39,67,68,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,207,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'bracketed_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'for_control':([11,],[93,]),'builtin_call':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'else_clause':([195,301,],[233,323,]),'operand0':([3,23,39,67,68,90,96,97,103,115,129,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'array_mode':([80,110,158,163,264,286,320,],[144,144,144,144,144,144,144,]),'parameter':([96,97,227,287,],[180,180,268,180,]),'then_clause':([113,272,],[195,301,]),'range_enumeration':([94,],[174,]),'list_index_mode':([213,],[252,]),'literal_range':([211,212,213,285,287,],[249,251,256,256,251,]),'declaration':([29,192,],[111,230,]),'operand4':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[52,52,52,52,52,137,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'array_primitive_value':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'formal_parameter':([224,296,],[266,317,]),'action_statement_list':([11,166,196,235,],[89,220,237,271,]),'synonym_definition':([4,161,],[81,217,]),'parameter_list':([96,97,287,],[179,183,179,]),'discrete_range_mode':([80,110,158,163,213,222,263,264,285,286,320,],[148,148,148,148,148,148,148,148,148,148,148,]),'assignment_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'value_array_slice':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'value_array_element':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'string_mode':([80,110,158,163,264,286,320,],[151,151,151,151,151,151,151,]),'string_concatenation_operator':([62,199,],[132,132,]),'boolean_expression':([39,67,90,236,246,278,],[113,135,169,272,280,305,]),'empty_literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'procedure_call':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'builtin_name':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'membership_operator':([45,],[126,]),'if_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'synonym_list':([4,],[83,]),'location':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[19,19,65,19,65,65,128,65,65,65,19,65,19,65,65,65,65,65,65,65,65,65,65,19,19,19,65,65,65,65,65,19,65,65,65,19,65,19,65,65,65,65,65,19,65,65,65,65,65,65,19,19,19,19,19,19,19,19,]),'mode_definition':([9,164,],[84,219,]),'else_expression':([204,244,],[243,277,]),'referenced_location':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'operator1':([45,],[125,]),'exit_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'relational_operator':([45,],[127,]),'procedure_statement':([0,2,300,319,321,322,326,327,329,331,],[25,25,25,25,25,25,25,25,25,25,]),'constant_expression':([142,215,],[208,257,]),'boolean_literal':([3,23,39,67,68,70,90,96,97,103,115,125,129,130,132,138,142,205,210,211,212,213,215,221,227,231,236,238,240,242,245,246,278,283,285,287,288,290,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'array_slice':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'synonym_statement':([0,2,300,319,321,322,326,327,329,331,],[42,42,42,42,42,42,42,42,42,42,]),'program':([0,],[26,]),'discrete_mode':([80,110,158,163,213,222,263,264,285,286,320,],[149,149,149,149,254,262,293,149,254,149,149,]),'elsif_expression':([204,],[244,]),'newmode_list':([9,],[86,]),'expression_list':([115,129,],[197,200,]),'step_value':([260,],[289,]),'result_action':([0,2,11,89,95,166,170,196,220,235,237,271,300,319,321,322,326,327,329,331,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'boolean_mode':([80,110,158,163,213,222,263,264,285,286,320,],[157,157,157,157,157,157,157,157,157,157,157,]),'array_location':([0,2,3,11,23,39,50,67,68,70,89,90,95,96,97,103,115,125,129,130,132,138,142,166,170,196,205,211,212,213,215,220,221,227,231,235,236,237,238,240,242,245,246,271,278,283,285,287,288,290,300,319,321,322,326,327,329,331,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'procedure_definition':([95,],[178,]),'integer_mode':([80,110,158,163,213,222,263,264,285,286,320,],[159,159,159,159,159,159,159,159,159,159,159,]),'assigning_operator':([19,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',45),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',46),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',55),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',56),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',65),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',85),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',91),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',92),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',101),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',102),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',111),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> identifier','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',151),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',157),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',163),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',169),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',176),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',181),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',204),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',209),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',210),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',218),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',219),
  ('location -> identifier','location',1,'p_location','parser.py',225),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',226),
  ('location -> array_element','location',1,'p_location','parser.py',227),
  ('location -> array_slice','location',1,'p_location','parser.py',228),
  ('location -> call_action','location',1,'p_location','parser.py',229),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',238),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',274),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',280),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',281),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',290),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',296),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',302),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',303),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',304),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',305),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',311),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',312),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',313),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',314),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',315),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',321),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',327),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',328),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',334),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',340),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',346),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',352),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',358),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',364),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',370),
  ('expression -> operand0','expression',1,'p_expression','parser.py',376),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',377),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',383),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',384),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',393),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',399),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',405),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',411),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',412),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',422),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',432),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',433),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',439),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',440),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',441),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',446),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',452),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',458),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',459),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',460),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',471),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',483),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',496),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',501),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',502),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',512),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',513),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',519),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',520),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',521),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',528),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',534),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',535),
  ('action -> bracketed_action','action',1,'p_action','parser.py',544),
  ('action -> assignment_action','action',1,'p_action','parser.py',545),
  ('action -> call_action','action',1,'p_action','parser.py',546),
  ('action -> exit_action','action',1,'p_action','parser.py',547),
  ('action -> return_action','action',1,'p_action','parser.py',548),
  ('action -> result_action','action',1,'p_action','parser.py',549),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',555),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',556),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',562),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',568),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',569),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',570),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',571),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',572),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',573),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',574),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',582),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',583),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',592),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',597),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',598),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',606),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',607),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',608),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',619),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',620),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',629),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',630),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',631),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',640),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',646),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',647),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',653),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',654),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',655),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',656),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',670),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',676),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',682),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',688),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',689),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',698),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',704),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',705),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',711),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',712),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',720),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',721),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',736),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',742),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',743),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',751),
  ('result -> expression','result',1,'p_result','parser.py',757),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',763),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',764),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',774),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',775),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',776),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',777),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',778),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',779),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',780),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',781),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',787),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',793),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',794),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',795),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',796),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',810),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',811),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',820),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',826),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',827),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',836),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',837),
]
