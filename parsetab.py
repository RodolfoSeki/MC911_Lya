
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT TYPE ABS READ RETURN ELSE NUM OD TRUE END FI EXIT IF DOWN TO INT RETURNS UPPER LOC DO ELSIF FOR BOOL IN REF ASC NULL LOWER CHAR PRINT SYN FALSE ARRAY DCL LENGTH CHARS BY WHILE THEN RESULT PROCprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_range_mode \n                              | identifier DOWN IN discrete_range_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'DO':([0,1,17,20,23,28,32,35,43,44,45,95,98,99,117,119,120,131,178,186,196,199,228,229,230,234,270,297,317,319,320,327,330,331,336,],[1,1,-8,-5,1,-6,-4,-2,-7,1,-143,-3,1,-122,-144,1,1,-18,-24,1,-9,1,-123,-188,1,1,1,1,1,1,1,1,1,1,1,]),'RPAREN':([7,11,12,25,29,38,52,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,97,104,126,127,128,129,132,133,134,135,137,138,142,143,144,145,147,149,150,151,156,170,180,181,203,211,215,216,217,220,221,226,227,235,248,249,251,259,267,269,282,284,285,288,292,300,301,303,309,310,312,313,316,322,323,328,334,],[-54,-167,-166,-17,-53,-52,126,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,180,-56,-178,203,-172,-170,-29,-32,-33,-28,-38,-35,-37,-30,-34,-31,-44,-36,-43,215,-115,-121,-168,226,-179,-42,-80,-110,-91,-105,-104,-169,266,-57,-171,282,284,-77,298,-193,-40,-39,-45,180,-83,-196,-195,-60,-41,-46,-172,-78,-84,-194,-197,333,337,]),'AND':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,158,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'PRINT':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[4,4,4,-8,-5,4,-6,4,-4,-2,4,-7,4,-143,4,4,4,4,-117,4,4,-116,-3,4,4,-122,4,4,-133,-144,4,4,-18,4,4,-113,-111,-112,-102,-94,4,-96,-99,-98,-93,-92,-95,-97,-101,-100,4,-107,-106,4,-108,4,-24,4,-138,-139,-135,-134,-136,-137,-9,4,4,4,4,4,4,4,4,-123,-188,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE':([1,7,11,12,25,29,38,50,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,123,124,125,126,156,170,180,203,215,216,217,220,221,226,235,244,259,276,281,282,284,292,303,304,306,308,313,316,325,],[46,-54,-167,-166,-17,-53,-52,46,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,-154,-155,-153,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-163,-77,-156,-164,-40,-39,-83,-60,-162,-157,-158,-78,-84,-159,]),'COLON':([7,11,12,25,27,29,38,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,126,156,170,180,188,203,215,216,217,219,220,221,226,235,250,257,259,292,303,312,313,316,],[-54,-167,-166,-17,98,-53,-52,119,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,237,-179,-80,-110,-91,260,-105,-104,-169,-57,283,-51,-77,-83,-60,283,-78,-84,]),'GEQ':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,161,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'TRUE':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[78,78,78,78,78,78,78,-117,78,-116,78,78,78,-133,78,78,-113,-111,-112,-102,-94,78,-96,-99,-98,-93,-92,-95,-97,-101,-100,78,-107,-106,78,-108,78,-138,-139,-135,-134,-136,-137,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MINUS':([7,11,12,15,18,25,27,29,31,36,38,39,46,48,52,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,85,86,89,90,91,97,103,104,109,110,126,146,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,189,190,191,192,194,195,201,203,204,206,207,210,214,215,216,217,220,221,222,226,232,235,236,237,240,257,259,260,262,263,277,278,283,287,288,293,303,313,],[-54,-167,-166,88,-55,-17,-51,-53,88,88,-52,107,88,-51,88,88,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,171,88,-118,-71,-76,88,88,-56,88,-133,-178,88,88,-113,-111,-112,-115,-102,-94,88,-96,-99,-98,-93,-92,-95,-97,-101,-100,88,-121,-107,-106,88,-108,88,-168,-138,-139,-135,-134,-136,-137,88,-179,88,88,88,88,88,-80,-110,171,-105,-104,88,-169,88,-57,88,88,88,-51,-77,88,88,88,88,88,88,88,88,88,-60,-78,]),'CHARS':([25,54,55,115,141,179,208,268,286,318,],[-17,139,-15,139,139,139,-16,139,139,139,]),'OR':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,165,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'TO':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,245,246,259,279,280,292,303,305,307,313,316,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,277,-160,-77,277,277,-83,-60,-161,277,-78,-84,]),'NE':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,166,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'DIVIDE':([7,11,12,18,25,27,29,38,39,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,89,90,91,104,126,156,170,180,203,215,216,220,221,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,-52,112,-51,-119,155,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,155,155,-169,-57,-51,-77,-60,-78,]),'IN':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,122,126,156,170,180,202,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,157,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,200,-178,-115,-121,-168,247,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'RETURN':([0,1,17,20,23,28,32,35,43,44,45,95,98,99,117,119,120,131,178,186,196,199,228,229,230,234,270,297,317,319,320,327,330,331,336,],[15,15,-8,-5,15,-6,-4,-2,-7,15,-143,-3,15,-122,-144,15,15,-18,-24,15,-9,15,-123,-188,15,15,15,15,15,15,15,15,15,15,15,]),'ICONST':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,209,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[90,90,90,90,90,90,90,-117,90,-116,90,90,90,-133,90,90,-113,-111,-112,-102,-94,90,-96,-99,-98,-93,-92,-95,-97,-101,-100,90,-107,-106,90,-108,90,-138,-139,-135,-134,-136,-137,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'BOOL':([25,54,55,115,141,179,200,208,214,247,268,286,287,318,],[-17,142,-15,142,142,142,142,-16,142,142,142,142,142,142,]),'FALSE':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[68,68,68,68,68,68,68,-117,68,-116,68,68,68,-133,68,68,-113,-111,-112,-102,-94,68,-96,-99,-98,-93,-92,-95,-97,-101,-100,68,-107,-106,68,-108,68,-138,-139,-135,-134,-136,-137,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'THEN':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,101,102,104,126,156,170,176,180,203,215,216,217,220,221,226,235,259,271,291,292,303,313,315,316,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,186,-85,-56,-178,-115,-121,222,-168,-179,-80,-110,-91,-105,-104,-169,-57,-77,186,222,-83,-60,-78,222,-84,]),'ARRAY':([25,54,55,115,141,179,208,268,286,318,],[-17,148,-15,148,148,148,-16,148,148,148,]),'INT':([25,54,55,115,141,179,200,208,214,247,268,286,287,318,],[-17,149,-15,149,149,149,149,-16,149,149,149,149,149,149,]),'LBRACKET':([7,11,12,18,25,27,29,37,38,39,48,61,62,63,64,65,66,67,68,69,70,71,73,77,78,79,83,84,89,90,91,104,126,139,148,170,180,203,215,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,103,-52,-61,-51,-68,-67,-65,-74,-64,-70,-66,-72,-79,-69,-62,-63,169,-73,-51,-55,-75,-61,-71,-76,-56,-178,209,214,-61,-168,-179,-80,-169,-57,-51,-77,-60,-78,]),'PROC':([98,],[182,]),'END':([17,20,28,32,35,43,95,99,131,178,196,228,229,319,327,330,336,],[-8,-5,-6,-4,-2,-7,-3,-122,-18,-24,-9,-123,-188,329,332,335,338,]),'ASC':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[16,16,16,-8,-5,16,-6,16,-4,-2,16,-7,16,-143,16,16,16,16,-117,16,16,-116,-3,16,16,-122,16,16,-133,-144,16,16,-18,16,16,-113,-111,-112,-102,-94,16,-96,-99,-98,-93,-92,-95,-97,-101,-100,16,-107,-106,16,-108,16,-24,16,-138,-139,-135,-134,-136,-137,-9,16,16,16,16,16,16,16,16,-123,-188,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'SYN':([0,17,20,23,28,32,35,43,95,99,131,178,196,228,229,297,317,319,320,327,330,331,336,],[9,-8,-5,9,-6,-4,-2,-7,-3,-122,-18,-24,-9,-123,-188,9,9,9,9,9,9,9,9,]),'LEQ':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,167,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'NULL':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[84,84,84,84,84,84,84,-117,84,-116,84,84,84,-133,84,84,-113,-111,-112,-102,-94,84,-96,-99,-98,-93,-92,-95,-97,-101,-100,84,-107,-106,84,-108,84,-138,-139,-135,-134,-136,-137,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LOWER':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[19,19,19,-8,-5,19,-6,19,-4,-2,19,-7,19,-143,19,19,19,19,-117,19,19,-116,-3,19,19,-122,19,19,-133,-144,19,19,-18,19,19,-113,-111,-112,-102,-94,19,-96,-99,-98,-93,-92,-95,-97,-101,-100,19,-107,-106,19,-108,19,-24,19,-138,-139,-135,-134,-136,-137,-9,19,19,19,19,19,19,19,19,-123,-188,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LPAREN':([4,6,14,15,16,19,24,25,27,31,33,34,36,41,46,48,52,57,60,76,79,86,88,97,103,109,110,132,133,134,135,137,138,142,144,146,149,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,182,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,242,243,244,255,257,260,262,263,277,278,281,282,283,284,287,288,293,296,],[-187,52,-182,57,-181,-184,-186,-17,97,57,-180,-185,57,-183,57,97,57,57,57,-117,97,57,-116,57,57,57,-133,206,-32,-33,207,-38,-35,-37,-34,57,-36,57,-113,-111,-112,-102,-94,57,-96,-99,-98,-93,-92,-95,-97,-101,-100,57,-107,-106,57,-108,57,227,-138,-139,-135,-134,-136,-137,57,57,57,57,57,57,57,57,57,57,57,206,207,-35,206,288,57,57,57,57,57,-35,-40,57,-39,57,57,57,318,]),'TYPE':([0,17,20,23,28,32,35,43,95,99,131,178,196,228,229,297,317,319,320,327,330,331,336,],[21,-8,-5,21,-6,-4,-2,-7,-3,-122,-18,-24,-9,-123,-188,21,21,21,21,21,21,21,21,]),'ID':([0,1,9,15,17,20,21,23,25,26,28,31,32,35,36,42,43,44,45,46,51,52,54,55,57,60,76,81,86,88,95,97,98,99,103,109,110,115,117,119,120,130,131,136,141,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,177,178,179,186,189,190,191,192,194,195,196,197,199,200,201,204,206,207,208,210,214,222,227,228,229,230,232,234,236,237,240,247,260,262,263,268,270,277,278,283,286,287,288,293,297,299,317,318,319,320,327,330,331,336,],[25,25,25,25,-8,-5,25,25,-17,25,-6,25,-4,-2,25,25,-7,25,-143,25,25,25,25,-15,25,25,-117,25,25,-116,-3,25,25,-122,25,25,-133,25,-144,25,25,25,-18,25,25,25,25,-113,-111,-112,-102,-94,25,-96,-99,-98,-93,-92,-95,-97,-101,-100,25,-107,-106,25,-108,25,25,-24,25,25,-138,-139,-135,-134,-136,-137,-9,25,25,25,25,25,25,25,-16,25,25,25,25,-123,-188,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'OD':([44,45,99,117,199,228,],[116,-143,-122,-144,241,-123,]),'EXIT':([0,1,17,20,23,28,32,35,43,44,45,95,98,99,117,119,120,131,178,186,196,199,228,229,230,234,270,297,317,319,320,327,330,331,336,],[26,26,-8,-5,26,-6,-4,-2,-7,26,-143,-3,26,-122,-144,26,26,-18,-24,26,-9,26,-123,-188,26,26,26,26,26,26,26,26,26,26,26,]),'LOC':([25,132,133,134,135,137,138,142,143,144,145,147,149,150,211,282,284,285,300,310,328,],[-17,-29,-32,-33,-28,-38,-35,-37,-30,-34,-31,-44,-36,-43,-42,-40,-39,-45,323,-46,334,]),'RESULT':([0,1,17,20,23,28,32,35,43,44,45,95,98,99,117,119,120,131,178,186,196,199,228,229,230,234,270,297,317,319,320,327,330,331,336,],[31,31,-8,-5,31,-6,-4,-2,-7,31,-143,-3,31,-122,-144,31,31,-18,-24,31,-9,31,-123,-188,31,31,31,31,31,31,31,31,31,31,31,]),'ABS':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[33,33,33,-8,-5,33,-6,33,-4,-2,33,-7,33,-143,33,33,33,33,-117,33,33,-116,-3,33,33,-122,33,33,-133,-144,33,33,-18,33,33,-113,-111,-112,-102,-94,33,-96,-99,-98,-93,-92,-95,-97,-101,-100,33,-107,-106,33,-108,33,-24,33,-138,-139,-135,-134,-136,-137,-9,33,33,33,33,33,33,33,33,-123,-188,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LAND':([7,11,12,18,25,27,29,38,39,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,-52,106,-51,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,174,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,174,-105,-104,-169,-57,-51,-77,-60,-78,]),'COMMA':([7,11,12,25,29,38,53,54,55,56,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,92,93,94,104,113,114,115,126,127,128,129,132,133,134,135,137,138,142,143,144,145,147,149,150,156,170,180,181,187,188,198,203,205,208,211,212,213,215,216,217,218,219,220,221,224,225,226,235,238,239,248,253,254,255,256,258,259,267,268,269,273,275,282,284,285,292,300,301,303,309,310,311,312,313,316,322,323,],[-54,-167,-166,-17,-53,-52,130,136,-15,-19,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,177,136,-25,-56,-10,197,136,-178,204,-172,-170,-29,-32,-33,-28,-38,-35,-37,-30,-34,-31,-44,-36,-43,-115,-121,-168,204,236,-58,-12,-179,-20,-16,-42,-22,-23,-80,-110,-91,236,-58,-105,-104,-26,-27,-169,-57,-11,-13,-171,-21,287,-49,-47,-50,-77,299,136,-193,-59,-14,-40,-39,-45,-83,-196,-195,-60,-41,-46,-48,-172,-78,-84,-194,-197,]),'ARROW':([7,11,12,15,18,25,27,29,31,36,38,39,46,48,52,57,60,76,79,83,86,88,89,97,103,104,109,110,126,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,189,190,191,192,194,195,201,203,204,206,207,210,214,222,226,232,235,236,237,240,257,260,262,263,277,278,283,287,288,293,303,],[-54,-167,-166,81,-55,-17,-51,-53,81,81,-52,104,81,-51,81,81,81,-117,-51,-55,81,-116,104,81,81,-56,81,-133,-178,81,81,-113,-111,-112,-102,-94,81,-96,-99,-98,-93,-92,-95,-97,-101,-100,81,104,-107,-106,81,-108,81,-168,-138,-139,-135,-134,-136,-137,81,-179,81,81,81,81,81,81,-169,81,-57,81,81,81,-51,81,81,81,81,81,81,81,81,81,-60,]),'CCONST':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[64,64,64,64,64,64,64,-117,64,-116,64,64,64,-133,64,64,-113,-111,-112,-102,-94,64,-96,-99,-98,-93,-92,-95,-97,-101,-100,64,-107,-106,64,-108,64,-138,-139,-135,-134,-136,-137,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'SCONST':([15,31,36,46,52,57,60,76,86,88,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[91,91,91,91,91,91,91,-117,91,-116,91,91,91,-133,91,91,-113,-111,-112,-102,-94,91,-96,-99,-98,-93,-92,-95,-97,-101,-100,91,-107,-106,91,-108,91,-138,-139,-135,-134,-136,-137,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'EQUALS':([7,11,12,18,25,27,29,38,39,48,54,55,79,93,104,105,106,107,108,111,112,122,126,132,133,134,135,137,138,140,142,143,144,145,147,149,150,180,198,203,208,211,226,235,282,284,285,303,310,],[-54,-167,-166,-55,-17,-51,-53,-52,110,-51,146,-15,-51,179,-56,189,190,191,192,194,195,201,-178,-29,-32,-33,-28,-38,-35,210,-37,-30,-34,-31,-44,-36,-43,-168,240,-179,-16,-42,-169,-57,-40,-39,-45,-60,-46,]),'RETURNS':([266,298,],[296,296,]),'UPPER':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[41,41,41,-8,-5,41,-6,41,-4,-2,41,-7,41,-143,41,41,41,41,-117,41,41,-116,-3,41,41,-122,41,41,-133,-144,41,41,-18,41,41,-113,-111,-112,-102,-94,41,-96,-99,-98,-93,-92,-95,-97,-101,-100,41,-107,-106,41,-108,41,-24,41,-138,-139,-135,-134,-136,-137,-9,41,41,41,41,41,41,41,41,-123,-188,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'TIMES':([7,11,12,18,25,27,29,38,39,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,89,90,91,104,126,156,170,180,203,215,216,220,221,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,-52,111,-51,-119,154,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,154,154,-169,-57,-51,-77,-60,-78,]),'NUM':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[14,14,14,-8,-5,14,-6,14,-4,-2,14,-7,14,-143,14,14,14,14,-117,14,14,-116,-3,14,14,-122,14,14,-133,-144,14,14,-18,14,14,-113,-111,-112,-102,-94,14,-96,-99,-98,-93,-92,-95,-97,-101,-100,14,-107,-106,14,-108,14,-24,14,-138,-139,-135,-134,-136,-137,-9,14,14,14,14,14,14,14,14,-123,-188,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DOWN':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,122,126,156,170,180,203,215,216,217,220,221,226,235,245,246,259,279,292,303,305,313,316,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,202,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,280,-160,-77,307,-83,-60,-161,-78,-84,]),'NOT':([15,31,36,46,52,57,86,97,103,109,110,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,189,190,191,192,194,195,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[76,76,76,76,76,76,76,76,76,76,-133,76,76,-113,-111,-112,-102,-94,76,-96,-99,-98,-93,-92,-95,-97,-101,-100,76,-107,-106,76,-108,76,-138,-139,-135,-134,-136,-137,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'RBRACKET':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,126,133,134,137,138,142,144,149,156,170,180,187,188,203,215,216,217,218,219,220,221,226,235,252,254,255,256,258,259,273,274,282,284,289,292,303,309,311,313,316,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,-178,-32,-33,-38,-35,-37,-34,-36,-115,-121,-168,235,-58,-179,-80,-110,-91,259,-58,-105,-104,-169,-57,285,286,-49,-47,-50,-77,-59,303,-40,-39,313,-83,-60,-41,-48,-78,-84,]),'PLUS':([7,11,12,18,25,27,29,38,39,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,-52,108,-51,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,172,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,172,-105,-104,-169,-57,-51,-77,-60,-78,]),'CHAR':([25,54,55,115,141,179,200,208,214,247,268,286,287,318,],[-17,137,-15,137,137,137,137,-16,137,137,137,137,137,137,]),'SEMI':([3,5,7,8,10,11,12,13,15,18,22,25,29,30,38,40,47,49,50,53,56,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,80,82,83,84,85,87,89,90,91,92,94,96,100,102,104,113,114,116,118,121,123,124,125,126,132,133,134,135,137,138,142,143,144,145,147,149,150,156,170,180,183,184,193,198,203,205,211,212,213,215,216,217,220,221,224,225,226,231,235,238,239,241,244,253,259,266,272,275,276,281,282,284,285,292,295,298,303,304,306,308,310,313,316,321,325,329,332,333,335,337,338,],[-128,-125,-54,-127,-124,-167,-166,-129,-174,-126,-131,-17,-53,99,-52,-130,-152,120,-150,131,-19,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-175,-81,-73,-51,-82,-109,-55,-75,-90,-177,-118,-71,-76,178,-25,-173,-176,-85,-56,-10,196,-148,-165,-151,-154,-155,-153,-178,-29,-32,-33,-28,-38,-35,-37,-30,-34,-31,-44,-36,-43,-115,-121,-168,228,229,-132,-12,-179,-20,-42,-22,-23,-80,-110,-91,-105,-104,-26,-27,-169,-140,-57,-11,-13,-149,-163,-21,-77,297,-141,-14,-156,-164,-40,-39,-45,-83,317,320,-60,-162,-157,-158,-46,-78,-84,331,-159,-189,-191,-198,-190,-199,-192,]),'MODULO':([7,11,12,18,25,27,29,38,39,48,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,83,84,89,90,91,104,126,156,170,180,203,215,216,220,221,226,235,257,259,303,313,],[-54,-167,-166,-55,-17,-51,-53,-52,105,-51,-119,153,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-73,-51,-109,-55,-75,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,153,153,-169,-57,-51,-77,-60,-78,]),'LENGTH':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[34,34,34,-8,-5,34,-6,34,-4,-2,34,-7,34,-143,34,34,34,34,-117,34,34,-116,-3,34,34,-122,34,34,-133,-144,34,34,-18,34,34,-113,-111,-112,-102,-94,34,-96,-99,-98,-93,-92,-95,-97,-101,-100,34,-107,-106,34,-108,34,-24,34,-138,-139,-135,-134,-136,-137,-9,34,34,34,34,34,34,34,34,-123,-188,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'EQ':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,160,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'IF':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,86,95,97,98,99,103,109,110,117,119,120,131,146,169,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[36,36,86,-8,-5,36,-6,86,-4,-2,86,-7,36,-143,86,86,86,86,-3,86,36,-122,86,86,-133,-144,36,36,-18,86,86,-24,36,-138,-139,-135,-134,-136,-137,-9,36,86,86,86,86,86,86,86,-123,-188,36,86,36,86,86,86,86,86,86,36,86,86,86,86,86,86,36,36,36,36,36,36,36,36,]),'LT':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,168,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'GT':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,257,259,303,313,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,162,-73,-51,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,-51,-77,-60,-78,]),'$end':([2,17,20,23,28,32,35,43,95,99,131,178,196,228,229,],[0,-8,-5,-1,-6,-4,-2,-7,-3,-122,-18,-24,-9,-123,-188,]),'ELSIF':([7,11,12,25,29,38,45,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,99,104,117,126,156,170,180,185,203,215,216,217,220,221,223,226,228,234,235,259,261,265,292,302,303,313,314,316,326,],[-54,-167,-166,-17,-53,-52,-143,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-122,-56,-144,-178,-115,-121,-168,232,-179,-80,-110,-91,-105,-104,263,-169,-123,-142,-57,-77,-86,293,-83,232,-60,-78,-88,-84,-89,]),'FI':([7,11,12,25,29,38,45,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,99,104,117,126,156,170,180,185,203,215,216,217,220,221,226,228,233,234,235,259,264,270,290,292,294,302,303,313,316,324,],[-54,-167,-166,-17,-53,-52,-143,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-122,-56,-144,-178,-115,-121,-168,231,-179,-80,-110,-91,-105,-104,-169,-123,272,-142,-57,-77,292,-145,-87,-83,316,-146,-60,-78,-84,-147,]),'REF':([25,54,55,115,141,179,208,268,286,318,],[-17,141,-15,141,141,141,-16,141,141,141,]),'BY':([7,11,12,25,29,38,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,104,126,156,170,180,203,215,216,217,220,221,226,235,245,246,259,292,303,313,316,],[-54,-167,-166,-17,-53,-52,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-56,-178,-115,-121,-168,-179,-80,-110,-91,-105,-104,-169,-57,278,-160,-77,-83,-60,-78,-84,]),'READ':([0,1,15,17,20,23,28,31,32,35,36,43,44,45,46,52,57,60,76,81,86,88,95,97,98,99,103,109,110,117,119,120,131,146,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,178,186,189,190,191,192,194,195,196,199,201,204,206,207,210,214,222,228,229,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[24,24,24,-8,-5,24,-6,24,-4,-2,24,-7,24,-143,24,24,24,24,-117,24,24,-116,-3,24,24,-122,24,24,-133,-144,24,24,-18,24,24,-113,-111,-112,-102,-94,24,-96,-99,-98,-93,-92,-95,-97,-101,-100,24,-107,-106,24,-108,24,-24,24,-138,-139,-135,-134,-136,-137,-9,24,24,24,24,24,24,24,24,-123,-188,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'ELSE':([7,11,12,25,29,38,45,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,82,83,84,85,89,90,91,99,104,117,126,156,170,180,185,203,215,216,217,220,221,223,226,228,234,235,259,261,265,292,302,303,313,314,316,326,],[-54,-167,-166,-17,-53,-52,-143,-119,-103,-68,-67,-65,-74,-64,-70,-66,-72,-120,-69,-62,-114,-63,-81,-73,-51,-82,-109,-55,-75,-90,-118,-71,-76,-122,-56,-144,-178,-115,-121,-168,230,-179,-80,-110,-91,-105,-104,262,-169,-123,-142,-57,-77,-86,262,-83,230,-60,-78,-88,-84,-89,]),'FOR':([1,],[51,]),'DCL':([0,17,20,23,28,32,35,43,95,99,131,178,196,228,229,297,317,319,320,327,330,331,336,],[42,-8,-5,42,-6,-4,-2,-7,-3,-122,-18,-24,-9,-123,-188,42,42,42,42,42,42,42,42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'do_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'return_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'assignment_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'operand2':([15,31,36,46,52,57,86,97,103,109,146,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[59,59,59,59,59,59,59,59,59,59,59,59,59,220,221,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'monadic_operator':([15,31,36,46,52,57,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'array_slice':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'synonym_list':([9,],[53,]),'character_mode':([54,115,141,179,200,214,247,268,286,287,318,],[144,144,144,144,144,144,144,144,144,144,144,]),'step_enumeration':([51,],[123,]),'boolean_literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'parenthesized_expression':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'identifier_list':([9,21,42,130,177,197,227,299,],[54,93,115,54,93,115,268,268,]),'character_string_literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'iteration':([51,],[125,]),'bracketed_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'else_clause':([185,302,],[233,324,]),'builtin_call':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'array_location':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'result_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'mode':([54,115,141,179,268,286,318,],[140,198,211,225,300,310,328,]),'empty_literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'string_concatenation_operator':([85,217,],[173,173,]),'action_statement':([0,1,23,44,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[17,45,17,117,45,45,117,45,117,117,17,17,17,17,17,17,17,17,]),'operand0':([15,31,36,46,52,57,86,97,103,109,146,169,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'parameter_list':([52,97,288,],[127,181,181,]),'mode_definition':([21,177,],[94,224,]),'composite_mode':([54,115,141,179,268,286,318,],[145,145,145,145,145,145,145,]),'dereferenced_reference':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'initialization':([198,],[239,]),'boolean_mode':([54,115,141,179,200,214,247,268,286,287,318,],[134,134,134,134,134,134,134,134,134,134,134,]),'statement_list':([0,297,317,320,331,],[23,319,327,330,336,]),'identifier':([0,1,9,15,21,23,26,31,36,42,44,46,51,52,54,57,60,81,86,97,98,103,109,115,119,120,130,136,141,146,152,159,169,173,175,177,179,186,197,199,200,201,204,206,207,210,214,222,227,230,232,234,236,237,240,247,260,262,263,268,270,277,278,283,286,287,288,293,297,299,317,318,319,320,327,330,331,336,],[27,48,55,79,55,27,96,79,79,55,48,79,122,79,135,79,79,79,79,79,79,79,79,135,79,48,55,208,135,79,79,79,79,79,79,55,135,48,55,48,243,79,79,79,79,79,257,79,55,48,79,48,79,79,79,243,79,79,79,135,48,79,79,79,135,257,79,79,27,55,27,135,27,27,27,27,27,27,]),'newmode_statement':([0,23,297,317,319,320,327,330,331,336,],[28,28,28,28,28,28,28,28,28,28,]),'declaration_list':([42,],[114,]),'exit_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'then_expression':([176,291,315,],[223,314,326,]),'list_index_mode':([214,],[254,]),'primitive_value':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'literal_range':([206,207,214,287,288,],[249,251,258,258,251,]),'operand1':([15,31,36,46,52,57,86,97,103,109,146,159,169,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[85,85,85,85,85,85,85,85,85,85,85,217,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'operator1':([75,],[159,]),'statement':([0,23,297,317,319,320,327,330,331,336,],[35,95,35,35,95,35,95,95,35,95,]),'constant_expression':([146,210,],[212,253,]),'expression':([15,31,36,46,52,57,86,97,103,109,146,169,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[87,87,102,102,128,151,102,128,188,193,213,219,246,128,250,250,213,250,261,102,273,274,275,289,290,102,304,305,309,250,312,102,]),'parameter':([52,97,204,288,],[129,129,248,129,]),'range_enumeration':([51,],[124,]),'location':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[39,39,89,39,89,89,39,89,89,89,89,170,89,89,39,89,89,39,39,89,89,89,89,89,89,39,39,89,89,89,89,89,89,89,39,89,39,89,89,89,89,89,89,39,89,89,89,89,89,89,39,39,39,39,39,39,39,39,]),'if_action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'string_mode':([54,115,141,179,268,286,318,],[150,150,150,150,150,150,150,]),'synonym_definition':([9,130,],[56,205,]),'program':([0,],[2,]),'referenced_location':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'boolean_expression':([36,46,86,232,263,293,],[101,118,176,271,291,315,]),'builtin_name':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'integer_mode':([54,115,141,179,200,214,247,268,286,287,318,],[133,133,133,133,133,133,133,133,133,133,133,]),'expression_list':([103,169,],[187,218,]),'arithmetic_additive_operator':([85,217,],[175,175,]),'start_value':([201,],[245,]),'character_literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'relational_operator':([75,],[164,]),'discrete_range_mode':([54,115,141,179,200,214,247,268,286,287,318,],[138,138,138,138,244,138,281,138,138,138,138,]),'value_array_slice':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'declaration':([42,197,],[113,238,]),'integer_literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,209,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,252,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'procedure_call':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'index_mode':([214,287,],[256,311,]),'action_statement_list':([1,120,186,230,],[44,199,234,270,]),'array_mode':([54,115,141,179,268,286,318,],[147,147,147,147,147,147,147,]),'literal':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'operand4':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[72,72,72,72,72,72,156,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'membership_operator':([75,],[163,]),'result':([15,31,],[74,100,]),'synonym_statement':([0,23,297,317,319,320,327,330,331,336,],[20,20,20,20,20,20,20,20,20,20,]),'array_primitive_value':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'while_control':([1,50,],[47,121,]),'discrete_mode':([54,115,141,179,200,214,247,268,286,287,318,],[132,132,132,132,242,255,242,132,132,255,132,]),'parameter_spec':([268,],[301,]),'value_array_element':([15,31,36,46,52,57,60,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'conditional_expression':([15,31,36,46,52,57,86,97,103,109,146,169,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'elsif_expression':([223,],[265,]),'array_element':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'control_part':([1,],[49,]),'operand3':([15,31,36,46,52,57,86,97,103,109,146,152,159,169,173,175,201,204,206,207,210,214,222,232,236,237,240,260,262,263,277,278,283,287,288,293,],[82,82,82,82,82,82,82,82,82,82,82,216,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'result_spec':([266,298,],[295,321,]),'reference_mode':([54,115,141,179,268,286,318,],[143,143,143,143,143,143,143,]),'formal_parameter_list':([227,],[267,]),'action':([0,1,23,44,98,119,120,186,199,230,234,270,297,317,319,320,327,330,331,336,],[30,30,30,30,183,183,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'assigning_operator':([39,],[109,]),'declaration_statement':([0,23,297,317,319,320,327,330,331,336,],[32,32,32,32,32,32,32,32,32,32,]),'for_control':([1,],[50,]),'call_action':([0,1,15,23,31,36,44,46,52,57,60,81,86,97,98,103,109,119,120,146,152,159,169,173,175,186,199,201,204,206,207,210,214,222,230,232,234,236,237,240,260,262,263,270,277,278,283,287,288,293,297,317,319,320,327,330,331,336,],[18,18,83,18,83,83,18,83,83,83,83,83,83,83,18,83,83,18,18,83,83,83,83,83,83,18,18,83,83,83,83,83,83,83,18,83,18,83,83,83,83,83,83,18,83,83,83,83,83,83,18,18,18,18,18,18,18,18,]),'procedure_definition':([98,],[184,]),'newmode_list':([21,],[92,]),'then_clause':([101,271,],[185,302,]),'formal_parameter':([227,299,],[269,322,]),'else_expression':([223,265,],[264,294,]),'step_value':([245,],[279,]),'end_value':([245,279,280,307,],[276,306,308,325,]),'arithmetic_multiplicative_operator':([59,220,221,],[152,152,152,]),'procedure_statement':([0,23,297,317,319,320,327,330,331,336,],[43,43,43,43,43,43,43,43,43,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',297),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',304),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',305),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',314),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',321),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',328),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',329),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',330),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',339),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',340),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',341),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',348),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',370),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',377),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',384),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',391),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',404),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',430),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',437),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',444),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',463),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',464),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',475),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',476),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',488),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',489),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',496),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',503),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',504),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',505),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',516),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',517),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',524),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',531),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',532),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',544),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',545),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',551),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',552),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',563),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',564),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',571),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',572),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',573),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',580),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',588),
  ('action -> bracketed_action','action',1,'p_action','parser.py',599),
  ('action -> assignment_action','action',1,'p_action','parser.py',600),
  ('action -> call_action','action',1,'p_action','parser.py',601),
  ('action -> exit_action','action',1,'p_action','parser.py',602),
  ('action -> return_action','action',1,'p_action','parser.py',603),
  ('action -> result_action','action',1,'p_action','parser.py',604),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',611),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',612),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',619),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',631),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',632),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',641),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',652),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',658),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',659),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',667),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',668),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',669),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',681),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',682),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',692),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',693),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',694),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',704),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',711),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',712),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',720),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',721),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',722),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',723),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',738),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',744),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',750),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','parser.py',756),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','parser.py',757),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',775),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',776),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',783),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',784),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',793),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',794),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',803),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',809),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',816),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',817),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',826),
  ('result -> expression','result',1,'p_result','parser.py',833),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',839),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',840),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',854),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',855),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',856),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',857),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',858),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',864),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',871),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',872),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',873),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',874),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',889),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',890),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',899),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',906),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',907),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',917),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',918),
]
