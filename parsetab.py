
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT END REF LENGTH INT NUM NULL EXIT RETURN IF PROC CHARS BY TRUE BOOL FOR DO ELSE CHAR OD ABS DOWN THEN RETURNS IN SYN PRINT FI UPPER LOC FALSE TYPE RESULT LOWER TO DCL WHILE ELSIF ASC READ ARRAYprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n                     | string_slice\n                     | string_element\n         dereferenced_reference : location ARROW\n         string_element : identifier LBRACKET start_element RBRACKET\n         start_element : expression\n         string_slice : identifier LBRACKET left_element COLON right_element RBRACKET \n         left_element : expression\n         right_element : expression\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {end':([9,15,20,24,31,37,38,42,87,93,120,181,198,229,230,],[-4,-5,0,-1,-6,-7,-2,-8,-129,-3,-9,-18,-24,-195,-130,]),'LPAREN':([3,5,7,10,11,13,16,19,23,28,33,35,36,45,53,62,63,67,77,84,85,86,91,92,102,103,113,115,123,125,126,128,129,132,133,134,135,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,173,174,182,199,200,201,203,204,205,207,208,210,212,221,224,226,227,234,238,243,246,252,254,261,263,265,281,282,286,287,288,289,291,295,300,309,312,314,],[-194,-187,62,86,-193,62,-190,-17,91,-189,-192,62,-188,-191,-123,62,-124,91,62,62,62,62,62,62,91,62,-140,62,-35,207,-38,-33,-37,212,-34,-32,-36,62,-119,62,-118,-120,62,62,-113,-115,-114,-106,-100,-104,-101,-109,-105,62,-103,-107,-102,-99,-108,91,231,62,-143,-141,-144,-146,-145,-142,62,62,62,62,62,62,62,62,62,62,62,62,212,288,62,62,62,212,207,62,-39,62,62,-40,62,323,62,62,212,]),'COMMA':([2,4,18,19,27,32,43,44,46,47,48,49,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,94,95,96,107,108,109,111,121,122,123,124,125,126,128,129,131,132,133,134,135,136,139,164,165,166,167,168,169,170,175,176,206,209,211,213,215,216,217,218,219,220,223,225,228,232,233,235,236,237,248,249,252,253,255,256,257,260,267,269,270,272,273,276,287,291,292,298,299,303,304,307,315,316,317,318,319,321,326,327,],[-173,-54,-57,-17,-56,-52,-53,-174,119,-10,-15,130,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,180,130,-19,130,197,-25,-58,-44,-31,-35,-30,-28,-38,-33,-37,-12,-29,-34,-32,-36,-43,-128,-122,224,-65,227,-177,-179,-185,227,-175,-11,-16,-13,-42,224,-65,-87,-117,-111,-112,-98,-64,-186,-176,-59,-20,-23,-22,-27,-26,-49,-47,-50,289,-14,-84,-66,-178,-200,130,305,-21,-39,-40,-45,-90,-67,-202,-203,-61,-41,-179,-48,-46,-85,-91,-204,-201,]),'INT':([19,48,49,95,137,196,208,209,245,272,285,289,290,323,],[-17,-15,135,135,135,135,135,-16,135,135,135,135,135,135,]),'ELSE':([2,4,18,19,27,32,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,87,105,111,139,164,170,176,185,191,217,218,219,220,222,223,225,228,230,232,233,239,260,262,264,298,299,307,308,319,321,322,336,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,-129,-150,-58,-128,-122,-185,-175,242,-151,-87,-117,-111,-112,263,-98,-64,-186,-130,-176,-59,-149,-84,-93,263,-90,-67,-61,242,-85,-91,-95,-96,]),'CCONST':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[65,65,65,-123,65,-124,65,65,65,65,65,65,65,-140,65,65,-119,65,-118,-120,65,65,-113,-115,-114,-106,-100,-104,-101,-109,-105,65,-103,-107,-102,-99,-108,65,-143,-141,-144,-146,-145,-142,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'AND':([2,4,18,19,27,32,43,44,52,54,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,111,139,164,170,176,217,218,219,220,223,225,228,232,233,254,260,299,307,319,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,155,-125,-73,-58,-128,-122,-185,-175,-87,-117,-111,-112,-98,-64,-186,-176,-59,-51,-84,-67,-61,-85,]),'EQUALS':([2,4,18,19,23,27,32,34,41,43,44,48,95,102,107,110,111,112,114,116,117,118,121,122,123,124,125,126,128,129,131,132,133,134,135,136,170,173,176,183,192,209,213,225,228,232,233,287,291,292,299,307,318,],[-173,-54,-57,-17,-51,-56,-52,-55,113,-53,-174,-15,182,-51,196,199,-58,200,201,203,204,205,-44,-31,-35,-30,-28,-38,-33,-37,210,-29,-34,-32,-36,-43,-185,-51,-175,238,246,-16,-42,-64,-186,-176,-59,-39,-40,-45,-67,-61,-46,]),'SEMI':([1,2,4,7,12,14,18,19,21,22,25,26,27,30,32,34,43,44,46,47,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,88,89,94,96,97,99,100,101,108,109,111,121,122,123,124,125,126,128,129,131,132,133,134,135,136,139,164,170,171,172,176,186,189,190,193,194,195,202,206,211,213,217,218,219,220,223,225,228,232,233,235,236,237,241,248,249,257,260,271,276,277,280,281,287,291,292,298,299,302,306,307,311,314,318,319,321,329,332,334,335,338,342,344,345,346,348,349,],[-131,-173,-54,-181,87,-138,-57,-17,-137,-134,-135,-136,-56,-132,-52,-133,-53,-174,120,-10,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-184,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,-182,-183,-180,181,-19,-92,-159,-157,187,198,-25,-58,-44,-31,-35,-30,-28,-38,-33,-37,-12,-29,-34,-32,-36,-43,-128,-122,-185,229,230,-175,-158,-172,-155,-161,-162,-160,-139,-11,-13,-42,-87,-117,-111,-112,-98,-64,-186,-176,-59,-20,-23,-22,-147,-27,-26,-14,-84,301,-21,-148,-156,-170,-39,-40,-45,-90,-67,325,328,-61,-163,-171,-46,-85,-91,341,-164,-169,-165,-196,-166,-205,-198,-197,-206,-199,]),'TYPE':([0,9,15,24,31,37,38,42,87,93,120,181,198,229,230,301,324,325,328,339,340,341,347,],[40,-4,-5,40,-6,-7,-2,-8,-129,-3,-9,-18,-24,-195,-130,40,40,40,40,40,40,40,40,]),'ID':([0,6,7,9,13,15,17,19,24,29,31,35,37,38,39,40,42,48,49,50,53,62,63,77,84,85,86,87,90,91,92,93,95,103,104,105,106,113,115,119,120,130,137,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,180,181,182,184,187,188,191,196,197,198,199,200,201,203,204,205,207,208,209,210,212,221,224,226,227,229,230,231,234,238,239,242,243,244,245,246,261,263,265,272,278,285,286,288,289,290,295,301,305,309,312,323,324,325,328,339,340,341,347,],[19,19,19,-4,19,-5,19,-17,19,19,-6,19,-7,-2,19,19,-8,-15,19,19,-123,19,-124,19,19,19,19,-129,19,19,19,-3,19,19,19,-150,19,-140,19,19,-9,19,19,19,-119,19,-118,-120,19,19,-113,-115,-114,-106,-100,-104,-101,-109,-105,19,-103,-107,-102,-99,-108,19,-18,19,19,19,19,-151,19,19,-24,-143,-141,-144,-146,-145,-142,19,19,-16,19,19,19,19,19,19,-195,-130,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'IN':([2,4,18,19,27,32,43,44,52,54,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,111,139,164,170,176,192,217,218,219,220,223,225,228,232,233,247,254,260,299,307,319,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,156,-125,-73,-58,-128,-122,-185,-175,245,-87,-117,-111,-112,-98,-64,-186,-176,-59,285,-51,-84,-67,-61,-85,]),'ARROW':([2,4,7,13,18,19,23,27,32,34,35,41,43,44,53,62,63,67,77,78,81,84,85,86,91,92,102,103,111,113,115,139,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,170,173,176,182,199,200,201,203,204,205,207,208,210,212,221,224,225,226,227,228,232,233,234,238,243,246,254,261,263,265,286,288,289,295,299,307,309,312,],[-173,-54,50,50,-57,-17,-51,-56,-52,-55,50,111,-53,-174,-123,50,-124,-51,50,-55,111,50,50,50,50,50,-51,50,-58,-140,50,111,50,-119,50,-118,-120,50,50,-113,-115,-114,-106,-100,-104,-101,-109,-105,50,-103,-107,-102,-99,-108,-185,-51,-175,50,-143,-141,-144,-146,-145,-142,50,50,50,50,50,50,-64,50,50,-186,-176,-59,50,50,50,50,-51,50,50,50,50,50,50,50,-67,-61,50,50,]),'TIMES':([2,4,18,19,23,27,32,34,41,43,44,52,54,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,76,78,79,81,82,102,111,139,164,170,173,176,217,218,219,220,225,228,232,233,254,260,299,307,319,],[-173,-54,-57,-17,-51,-56,-52,-55,110,-53,-174,-121,-76,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,144,-82,-70,-78,-80,-83,-79,-55,-127,-125,-73,-51,-58,-128,-122,-185,-51,-175,-87,-117,144,144,-64,-186,-176,-59,-51,-84,-67,-61,-85,]),'EXIT':([0,9,15,24,31,37,38,39,42,87,90,93,104,105,120,181,184,187,188,191,198,229,230,239,242,244,278,301,324,325,328,339,340,341,347,],[17,-4,-5,17,-6,-7,-2,17,-8,-129,17,-3,17,-150,-9,-18,17,17,17,-151,-24,-195,-130,17,17,17,17,17,17,17,17,17,17,17,17,]),'CHAR':([19,48,49,95,137,196,208,209,245,272,285,289,290,323,],[-17,-15,126,126,126,126,126,-16,126,126,126,126,126,126,]),'NULL':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[69,69,69,-123,69,-124,69,69,69,69,69,69,69,-140,69,69,-119,69,-118,-120,69,69,-113,-115,-114,-106,-100,-104,-101,-109,-105,69,-103,-107,-102,-99,-108,69,-143,-141,-144,-146,-145,-142,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'FI':([2,4,18,19,27,32,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,87,105,111,139,164,170,176,185,191,217,218,219,220,223,225,228,230,232,233,239,240,260,266,278,294,296,298,299,307,308,319,321,330,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,-129,-150,-58,-128,-122,-185,-175,241,-151,-87,-117,-111,-112,-98,-64,-186,-130,-176,-59,-149,277,-84,298,-152,-94,321,-90,-67,-61,-153,-85,-91,-154,]),'ICONST':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[72,72,72,-123,72,-124,72,72,72,72,72,72,72,-140,72,72,-119,72,-118,-120,72,72,-113,-115,-114,-106,-100,-104,-101,-109,-105,72,-103,-107,-102,-99,-108,72,-143,-141,-144,-146,-145,-142,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'RBRACKET':([2,4,18,19,27,32,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,111,123,126,128,129,133,134,135,139,164,165,166,170,176,177,179,215,216,217,218,219,220,223,225,228,232,233,252,253,255,256,259,260,267,268,274,275,287,291,293,298,299,307,315,317,319,321,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,-58,-35,-38,-33,-37,-34,-32,-36,-128,-122,225,-65,-185,-175,233,-60,260,-65,-87,-117,-111,-112,-98,-64,-186,-176,-59,-49,-47,-50,290,292,-84,-66,299,-63,307,-39,-40,319,-90,-67,-61,-41,-48,-85,-91,]),'TRUE':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[73,73,73,-123,73,-124,73,73,73,73,73,73,73,-140,73,73,-119,73,-118,-120,73,73,-113,-115,-114,-106,-100,-104,-101,-109,-105,73,-103,-107,-102,-99,-108,73,-143,-141,-144,-146,-145,-142,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'SCONST':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[74,74,74,-123,74,-124,74,74,74,74,74,74,74,-140,74,74,-119,74,-118,-120,74,74,-113,-115,-114,-106,-100,-104,-101,-109,-105,74,-103,-107,-102,-99,-108,74,-143,-141,-144,-146,-145,-142,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'TO':([2,4,18,19,27,32,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,111,139,164,170,176,217,218,219,220,223,225,228,232,233,260,283,284,298,299,307,310,313,319,321,331,333,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,-58,-128,-122,-185,-175,-87,-117,-111,-112,-98,-64,-186,-176,-59,-84,312,-167,-90,-67,-61,312,312,-85,-91,-168,312,]),'LOWER':([0,7,9,13,15,24,31,35,37,38,39,42,50,53,62,63,77,84,85,86,87,90,91,92,93,103,104,105,113,115,120,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[45,45,-4,45,-5,45,-6,45,-7,-2,45,-8,45,-123,45,-124,45,45,45,45,-129,45,45,45,-3,45,45,-150,-140,45,-9,45,-119,45,-118,-120,45,45,-113,-115,-114,-106,-100,-104,-101,-109,-105,45,-103,-107,-102,-99,-108,-18,45,45,45,45,-151,-24,-143,-141,-144,-146,-145,-142,45,45,45,45,45,45,45,45,-195,-130,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'SYN':([0,9,15,24,31,37,38,42,87,93,120,181,198,229,230,301,324,325,328,339,340,341,347,],[29,-4,-5,29,-6,-7,-2,-8,-129,-3,-9,-18,-24,-195,-130,29,29,29,29,29,29,29,29,]),'NUM':([0,7,9,13,15,24,31,35,37,38,39,42,50,53,62,63,77,84,85,86,87,90,91,92,93,103,104,105,113,115,120,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[28,28,-4,28,-5,28,-6,28,-7,-2,28,-8,28,-123,28,-124,28,28,28,28,-129,28,28,28,-3,28,28,-150,-140,28,-9,28,-119,28,-118,-120,28,28,-113,-115,-114,-106,-100,-104,-101,-109,-105,28,-103,-107,-102,-99,-108,-18,28,28,28,28,-151,-24,-143,-141,-144,-146,-145,-142,28,28,28,28,28,28,28,28,-195,-130,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FALSE':([7,13,35,53,62,63,77,84,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[76,76,76,-123,76,-124,76,76,76,76,76,76,76,-140,76,76,-119,76,-118,-120,76,76,-113,-115,-114,-106,-100,-104,-101,-109,-105,76,-103,-107,-102,-99,-108,76,-143,-141,-144,-146,-145,-142,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'RPAREN':([2,4,18,19,27,32,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,86,91,111,121,122,123,124,125,126,128,129,132,133,134,135,136,139,141,164,167,168,169,170,175,176,213,217,218,219,220,223,225,228,231,232,233,251,258,260,269,270,273,287,288,291,292,298,299,303,304,307,315,316,318,319,321,326,327,337,343,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,170,176,-58,-44,-31,-35,-30,-28,-38,-33,-37,-29,-34,-32,-36,-43,-128,217,-122,228,-177,-179,-185,232,-175,-42,-87,-117,-111,-112,-98,-64,-186,271,-176,-59,287,291,-84,-178,-200,306,-39,176,-40,-45,-90,-67,-202,-203,-61,-41,-179,-46,-85,-91,-204,-201,344,348,]),'LENGTH':([0,7,9,13,15,24,31,35,37,38,39,42,50,53,62,63,77,84,85,86,87,90,91,92,93,103,104,105,113,115,120,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[33,33,-4,33,-5,33,-6,33,-7,-2,33,-8,33,-123,33,-124,33,33,33,33,-129,33,33,33,-3,33,33,-150,-140,33,-9,33,-119,33,-118,-120,33,33,-113,-115,-114,-106,-100,-104,-101,-109,-105,33,-103,-107,-102,-99,-108,-18,33,33,33,33,-151,-24,-143,-141,-144,-146,-145,-142,33,33,33,33,33,33,33,33,-195,-130,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'IF':([0,7,9,13,15,24,31,35,37,38,39,42,62,77,85,86,87,90,91,92,93,103,104,105,113,115,120,140,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[35,77,-4,77,-5,35,-6,77,-7,-2,35,-8,77,77,77,77,-129,35,77,77,-3,77,35,-150,-140,77,-9,77,-18,77,35,35,35,-151,-24,-143,-141,-144,-146,-145,-142,77,77,77,77,77,77,77,77,-195,-130,77,77,35,35,77,35,77,77,77,77,35,77,77,77,77,35,77,77,35,35,35,35,35,35,35,]),'ASC':([0,7,9,13,15,24,31,35,37,38,39,42,50,53,62,63,77,84,85,86,87,90,91,92,93,103,104,105,113,115,120,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[36,36,-4,36,-5,36,-6,36,-7,-2,36,-8,36,-123,36,-124,36,36,36,36,-129,36,36,36,-3,36,36,-150,-140,36,-9,36,-119,36,-118,-120,36,36,-113,-115,-114,-106,-100,-104,-101,-109,-105,36,-103,-107,-102,-99,-108,-18,36,36,36,36,-151,-24,-143,-141,-144,-146,-145,-142,36,36,36,36,36,36,36,36,-195,-130,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'NOT':([7,13,35,62,77,85,86,91,92,103,113,115,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,182,199,200,201,203,204,205,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[63,63,63,63,63,63,63,63,63,63,-140,63,63,-119,63,-118,-120,63,63,-113,-115,-114,-106,-100,-104,-101,-109,-105,63,-103,-107,-102,-99,-108,63,-143,-141,-144,-146,-145,-142,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'LAND':([2,4,18,19,23,27,32,34,41,43,44,52,54,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,81,82,102,111,139,164,170,173,176,217,218,219,220,223,225,228,232,233,254,260,299,307,319,],[-173,-54,-57,-17,-51,-56,-52,-55,116,-53,-174,-121,-76,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,149,-79,-55,-127,-125,-73,-51,-58,-128,-122,-185,-51,-175,-87,-117,-111,-112,149,-64,-186,-176,-59,-51,-84,-67,-61,-85,]),'WHILE':([2,4,18,19,27,32,39,43,44,52,54,55,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,100,111,123,126,128,129,133,134,135,139,164,170,176,193,194,195,217,218,219,220,223,225,228,232,233,260,281,287,291,298,299,307,311,314,319,321,332,334,335,342,],[-173,-54,-57,-17,-56,-52,103,-53,-174,-121,-76,-89,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,-88,-125,-73,103,-58,-35,-38,-33,-37,-34,-32,-36,-128,-122,-185,-175,-161,-162,-160,-87,-117,-111,-112,-98,-64,-186,-176,-59,-84,-170,-39,-40,-90,-67,-61,-163,-171,-85,-91,-164,-169,-165,-166,]),'ABS':([0,7,9,13,15,24,31,35,37,38,39,42,50,53,62,63,77,84,85,86,87,90,91,92,93,103,104,105,113,115,120,140,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,181,182,184,187,188,191,198,199,200,201,203,204,205,207,208,210,212,221,224,226,227,229,230,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[5,5,-4,5,-5,5,-6,5,-7,-2,5,-8,5,-123,5,-124,5,5,5,5,-129,5,5,5,-3,5,5,-150,-140,5,-9,5,-119,5,-118,-120,5,5,-113,-115,-114,-106,-100,-104,-101,-109,-105,5,-103,-107,-102,-99,-108,-18,5,5,5,5,-151,-24,-143,-141,-144,-146,-145,-142,5,5,5,5,5,5,5,5,-195,-130,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'DO':([0,9,15,24,31,37,38,39,42,87,90,93,104,105,120,181,184,187,188,191,198,229,230,239,242,244,278,301,324,325,328,339,340,341,347,],[39,-4,-5,39,-6,-7,-2,39,-8,-129,39,-3,39,-150,-9,-18,39,39,39,-151,-24,-195,-130,39,39,39,39,39,39,39,39,39,39,39,39,]),'FOR':([39,],[106,]),'EQ':([2,4,18,19,27,32,43,44,52,54,56,57,58,59,60,61,64,65,66,67,68,69,71,72,73,74,75,76,78,79,80,81,82,111,139,164,170,176,217,218,219,220,223,225,228,232,233,254,260,299,307,319,],[-173,-54,-57,-17,-56,-52,-53,-174,-121,-76,-71,-75,-77,-126,-72,-74,-69,-81,-116,-51,-110,-82,-70,-78,-80,-83,-97,-79,-55,-127,159,-125,-73,-58,-128,-122,-185,-175,-87,-117,-111,-112,-98,-64,-186,-176,-59,-51,-84,-67,-61,-85,]),'REF':([19,48,49,95,137,196,209,272,290,323,],[-17,-15,137,137,137,137,-16,137,137,137,]),'OD':([87,104,105,191,230,244,],[-129,190,-150,-151,-130,280,]),'CHARS':([19,48,49,95,137,196,209,272,290,323,],[-17,-15,138,138,138,138,-16,138,138,138,]),'PROC':([90,],[174,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'composite_mode':([49,95,137,196,272,290,323,],[122,122,122,122,122,122,122,]),'procedure_call':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'character_mode':([49,95,137,196,208,245,272,285,289,290,323,],[133,133,133,133,133,133,133,133,133,133,133,]),'while_control':([39,100,],[99,186,]),'start_element':([92,],[177,]),'parameter_list':([86,91,288,],[167,175,175,]),'array_element':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'constant_expression':([182,238,],[237,276,]),'declaration_statement':([0,24,301,324,325,328,339,340,341,347,],[9,9,9,9,9,9,9,9,9,9,]),'value_array_slice':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'range_enumeration':([106,],[194,]),'for_control':([39,],[100,]),'declaration_list':([6,],[46,]),'referenced_location':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'discrete_mode':([49,95,137,196,208,245,272,285,289,290,323,],[132,132,132,132,252,281,132,314,252,132,132,]),'parameter':([86,91,227,288,],[168,168,269,168,]),'boolean_literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'step_value':([283,],[310,]),'character_string_literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'relational_operator':([80,],[162,]),'result_spec':([271,306,],[302,329,]),'then_clause':([98,279,],[185,308,]),'control_part':([39,],[101,]),'program':([0,],[20,]),'if_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'then_expression':([151,297,320,],[222,322,336,]),'identifier_list':([6,29,40,119,180,197,231,305,],[49,95,107,49,95,107,272,272,]),'statement_list':([0,301,325,328,341,],[24,324,339,340,347,]),'initialization':([131,],[211,]),'return_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'value_array_element':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'declaration':([6,119,],[47,206,]),'arithmetic_additive_operator':([75,223,],[146,146,]),'procedure_statement':([0,24,301,324,325,328,339,340,341,347,],[37,37,37,37,37,37,37,37,37,37,]),'call_action':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[34,78,78,34,78,34,78,78,78,78,78,78,34,78,78,78,34,78,78,78,78,78,78,78,34,34,34,78,78,78,78,78,78,78,78,78,78,34,34,78,34,78,78,78,78,34,78,78,78,78,34,78,78,34,34,34,34,34,34,34,]),'iteration':([106,],[195,]),'newmode_statement':([0,24,301,324,325,328,339,340,341,347,],[31,31,31,31,31,31,31,31,31,31,]),'dereferenced_reference':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'discrete_range_mode':([49,95,137,196,208,245,272,285,289,290,323,],[123,123,123,123,123,123,123,123,123,123,123,]),'primitive_value':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'operand0':([7,13,35,62,77,85,86,91,92,103,115,140,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'literal_range':([207,208,212,288,289,],[251,255,258,251,255,]),'statement':([0,24,301,324,325,328,339,340,341,347,],[38,93,38,93,38,38,93,93,38,93,]),'action_statement_list':([39,184,187,242,],[104,239,244,278,]),'string_element':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'result':([7,13,],[83,88,]),'string_mode':([49,95,137,196,272,290,323,],[136,136,136,136,136,136,136,]),'boolean_mode':([49,95,137,196,208,245,272,285,289,290,323,],[128,128,128,128,128,128,128,128,128,128,128,]),'parameter_spec':([272,],[303,]),'arithmetic_multiplicative_operator':([68,219,220,],[143,143,143,]),'reference_mode':([49,95,137,196,272,290,323,],[124,124,124,124,124,124,124,]),'array_slice':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'step_enumeration':([106,],[193,]),'else_expression':([222,264,],[266,296,]),'expression_list':([85,140,],[165,215,]),'start_value':([246,],[283,]),'empty_literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'conditional_expression':([7,13,35,62,77,85,86,91,92,103,115,140,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'character_literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'procedure_definition':([90,],[171,]),'action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[12,12,12,172,12,12,12,172,12,12,12,12,12,12,12,12,12,12,12,12,]),'formal_parameter':([231,305,],[270,327,]),'array_location':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'parenthesized_expression':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'operand1':([7,13,35,62,77,85,86,91,92,103,115,140,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[75,75,75,75,75,75,75,75,75,75,75,75,223,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'operator1':([80,],[158,]),'array_primitive_value':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'do_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'mode_definition':([40,197,],[109,249,]),'else_clause':([185,308,],[240,330,]),'literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,259,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'elsif_expression':([222,],[264,]),'bracketed_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'string_concatenation_operator':([75,223,],[147,147,]),'synonym_list':([29,],[94,]),'operand4':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[52,52,52,52,52,164,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'left_element':([92,],[178,]),'synonym_definition':([29,180,],[96,235,]),'membership_operator':([80,],[153,]),'exit_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'identifier':([0,6,7,13,17,24,29,35,39,40,49,50,62,77,84,85,86,90,91,92,95,103,104,106,115,119,130,137,140,143,146,147,158,180,182,184,187,188,196,197,207,208,210,212,221,224,226,227,231,234,238,239,242,243,244,245,246,261,263,265,272,278,285,286,288,289,290,295,301,305,309,312,323,324,325,328,339,340,341,347,],[23,48,67,67,89,23,48,67,102,48,125,67,67,67,67,67,67,173,67,67,125,67,102,192,67,48,209,125,67,67,67,67,67,48,67,102,102,173,125,48,67,254,67,67,67,67,67,67,48,67,67,102,102,67,102,282,67,67,67,67,125,102,282,67,67,254,125,67,23,48,67,67,125,23,23,23,23,23,23,23,]),'operand2':([7,13,35,62,77,85,86,91,92,103,115,140,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[68,68,68,68,68,68,68,68,68,68,68,68,219,220,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'expression':([7,13,35,62,77,85,86,91,92,103,115,140,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[70,70,97,141,97,166,169,169,179,97,202,216,236,250,250,257,250,262,267,268,169,274,236,97,284,293,294,97,315,316,250,97,331,334,]),'location':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[41,81,81,41,81,41,139,81,81,81,81,81,41,81,81,81,41,81,81,81,81,81,81,81,41,41,41,81,81,81,81,81,81,81,81,81,81,41,41,81,41,81,81,81,81,41,81,81,81,81,41,81,81,41,41,41,41,41,41,41,]),'index_mode':([208,289,],[253,317,]),'string_slice':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'assignment_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'formal_parameter_list':([231,],[273,]),'operand3':([7,13,35,62,77,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[66,66,66,66,66,66,66,66,66,66,66,66,218,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'mode':([49,95,137,196,272,290,323,],[131,183,213,248,304,318,337,]),'synonym_statement':([0,24,301,324,325,328,339,340,341,347,],[15,15,15,15,15,15,15,15,15,15,]),'result_action':([0,24,39,90,104,184,187,188,239,242,244,278,301,324,325,328,339,340,341,347,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'array_mode':([49,95,137,196,272,290,323,],[121,121,121,121,121,121,121,]),'boolean_expression':([35,77,103,243,265,295,],[98,151,189,279,297,320,]),'assigning_operator':([41,],[115,]),'right_element':([234,],[275,]),'builtin_name':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'integer_mode':([49,95,137,196,208,245,272,285,289,290,323,],[134,134,134,134,134,134,134,134,134,134,134,]),'integer_literal':([7,13,35,62,77,84,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,214,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'action_statement':([0,24,39,104,184,187,239,242,244,278,301,324,325,328,339,340,341,347,],[42,42,105,191,105,105,191,105,191,191,42,42,42,42,42,42,42,42,]),'end_value':([283,310,313,333,],[311,332,335,342,]),'monadic_operator':([7,13,35,62,77,85,86,91,92,103,115,140,143,146,147,158,182,207,208,210,212,221,224,226,227,234,238,243,246,261,263,265,286,288,289,295,309,312,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'builtin_call':([0,7,13,24,35,39,50,62,77,84,85,86,90,91,92,103,104,115,140,143,146,147,158,182,184,187,188,207,208,210,212,221,224,226,227,234,238,239,242,243,244,246,261,263,265,278,286,288,289,295,301,309,312,324,325,328,339,340,341,347,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'newmode_list':([40,],[108,]),'list_index_mode':([208,],[256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',45),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',46),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',55),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',56),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',65),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',85),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',91),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',92),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',101),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',102),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',111),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> identifier','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',151),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',157),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',163),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',169),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',176),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',181),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',204),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',209),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',210),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',218),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',219),
  ('location -> identifier','location',1,'p_location','parser.py',225),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',226),
  ('location -> array_element','location',1,'p_location','parser.py',227),
  ('location -> array_slice','location',1,'p_location','parser.py',228),
  ('location -> call_action','location',1,'p_location','parser.py',229),
  ('location -> string_slice','location',1,'p_location','parser.py',230),
  ('location -> string_element','location',1,'p_location','parser.py',231),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',237),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',243),
  ('start_element -> expression','start_element',1,'p_start_element','parser.py',250),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',256),
  ('left_element -> expression','left_element',1,'p_left_element','parser.py',262),
  ('right_element -> expression','right_element',1,'p_right_element','parser.py',268),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',274),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',280),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',281),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',290),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',296),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',302),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',303),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',304),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',305),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',311),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',312),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',313),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',314),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',315),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',321),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',327),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',328),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',334),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',340),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',346),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',352),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',358),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',364),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',370),
  ('expression -> operand0','expression',1,'p_expression','parser.py',376),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',377),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',383),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',384),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',393),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',399),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',405),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',411),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',412),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',422),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',432),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',433),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',439),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',440),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',441),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',446),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',452),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',458),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',459),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',460),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',471),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',483),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',496),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',501),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',502),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',512),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',513),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',519),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',520),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',521),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',528),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',534),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',535),
  ('action -> bracketed_action','action',1,'p_action','parser.py',544),
  ('action -> assignment_action','action',1,'p_action','parser.py',545),
  ('action -> call_action','action',1,'p_action','parser.py',546),
  ('action -> exit_action','action',1,'p_action','parser.py',547),
  ('action -> return_action','action',1,'p_action','parser.py',548),
  ('action -> result_action','action',1,'p_action','parser.py',549),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',555),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',556),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',562),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',568),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',569),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',570),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',571),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',572),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',573),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',574),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',582),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',583),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',592),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',597),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',598),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',606),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',607),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',608),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',619),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',620),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',629),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',630),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',631),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',640),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',646),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',647),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',653),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',654),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',655),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',656),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',670),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',676),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',682),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',688),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',689),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',698),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',704),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',705),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',711),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',712),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',720),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',721),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',736),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',742),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',743),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',751),
  ('result -> expression','result',1,'p_result','parser.py',757),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',763),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',764),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',774),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',775),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',776),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',777),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',778),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',779),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',780),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',781),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',787),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',793),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',794),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',795),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',796),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',810),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',811),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',820),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',826),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',827),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',836),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',837),
]
