
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT ABS BOOL ARRAY IN NUM FI ASC RETURN ELSIF DCL EXIT PRINT DOWN ELSE DO BY NULL PROC RETURNS REF TO LOC RESULT TYPE INT LOWER TRUE END FOR OD SYN LENGTH FALSE THEN CHARS UPPER IF CHAR READ WHILEprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n                     | string_slice\n                     | string_element\n         dereferenced_reference : location ARROW\n         string_element : identifier LBRACKET start_element RBRACKET\n         start_element : expression\n         string_slice : identifier LBRACKET left_element COLON right_element RBRACKET \n         left_element : expression\n         right_element : expression\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'NUM':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[1,1,1,-6,-7,-2,-4,-5,-8,1,1,1,1,1,-124,1,-123,1,1,1,1,1,-140,1,1,-3,-129,1,-150,1,-24,1,-18,1,-114,-115,1,1,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,1,-102,-105,-120,-118,1,-119,1,-145,-142,-146,-144,-143,-141,-9,1,-151,1,1,1,1,1,1,1,-195,-130,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'TYPE':([0,17,18,21,25,27,28,34,109,110,119,141,194,229,231,305,325,328,329,337,338,340,344,],[2,-6,-7,-2,-4,-5,-8,2,-3,-129,-24,-18,-9,-195,-130,2,2,2,2,2,2,2,2,]),'OD':([110,112,115,197,231,246,],[-129,198,-150,-151,-130,280,]),'SYN':([0,17,18,21,25,27,28,34,109,110,119,141,194,229,231,305,325,328,329,337,338,340,344,],[4,-6,-7,-2,-4,-5,-8,4,-3,-129,-24,-18,-9,-195,-130,4,4,4,4,4,4,4,4,]),'COMMA':([13,20,23,29,36,37,38,45,46,47,48,49,50,51,52,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,105,106,107,125,126,127,128,129,130,132,135,136,137,138,139,140,143,151,169,170,171,172,189,190,191,192,193,206,207,208,213,214,215,217,220,221,222,223,224,225,226,228,233,240,242,243,245,251,256,257,258,259,265,267,268,269,270,277,279,286,287,289,294,299,300,306,308,315,316,317,318,320,322,323,324,],[-174,-53,-52,-17,-54,-173,-57,-56,-25,120,122,-15,122,142,-19,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-10,122,195,-33,-32,-28,-34,-31,-29,-35,-36,-44,-37,-30,-43,-38,-128,-122,227,-175,-177,-179,239,-65,227,-185,-12,-26,-27,-16,-23,-22,-42,-20,239,-65,-111,-112,-98,-87,-117,-176,-59,-64,-186,-13,-11,-21,-49,-50,-47,292,-84,-178,-200,122,301,-66,-14,-45,-39,-40,-90,-203,-202,-61,-67,-41,-179,-46,-48,-91,-85,-204,-201,]),'ARROW':([5,7,8,9,12,13,20,23,29,33,36,37,38,45,55,57,64,65,67,73,76,77,88,90,93,96,98,103,104,111,117,131,143,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,170,173,183,184,185,186,187,188,192,210,211,212,216,218,227,228,232,233,235,239,240,241,242,244,248,255,261,263,266,288,290,292,297,306,308,310,312,],[54,-55,-51,54,96,-174,-53,-52,-17,54,-54,-173,-57,-56,-55,54,-124,54,96,-51,-123,54,54,54,54,-58,-140,54,54,-51,54,54,96,54,-114,-115,54,54,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,54,-102,-105,-120,-118,54,-119,-175,-51,-145,-142,-146,-144,-143,-141,-185,54,54,54,54,54,54,-176,54,-59,54,54,-64,54,-186,54,54,-51,54,54,54,54,54,54,54,-61,-67,54,54,]),'RESULT':([0,17,18,21,25,27,28,34,42,89,109,110,112,115,119,141,181,194,196,197,199,229,231,236,238,246,275,305,325,328,329,337,338,340,344,],[5,-6,-7,-2,-4,-5,-8,5,5,5,-3,-129,5,-150,-24,-18,5,-9,5,-151,5,-195,-130,5,5,5,5,5,5,5,5,5,5,5,5,]),'END':([17,18,21,25,27,28,109,110,119,141,194,229,231,329,337,340,344,],[-6,-7,-2,-4,-5,-8,-3,-129,-24,-18,-9,-195,-130,341,343,347,348,]),'SCONST':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[87,87,87,87,-124,87,-123,87,87,87,87,-140,87,87,87,87,87,-114,-115,87,87,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,87,-102,-105,-120,-118,87,-119,-145,-142,-146,-144,-143,-141,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'SEMI':([6,7,10,11,13,14,19,20,23,29,33,36,37,38,40,41,44,45,46,47,51,52,53,55,56,58,59,60,62,63,66,67,68,69,70,71,72,73,74,75,78,79,80,81,82,83,84,85,86,87,92,96,102,105,107,108,113,116,118,125,126,127,128,129,130,132,135,136,137,138,139,140,143,151,170,174,176,182,192,193,198,201,202,203,204,205,206,207,213,214,215,217,222,223,224,225,226,228,233,234,240,242,243,245,251,265,271,276,279,280,282,286,287,289,294,302,304,306,308,309,314,317,320,322,326,332,334,335,341,342,343,345,347,348,349,],[-135,-133,-136,-137,-174,-134,-131,-53,-52,-17,-181,-54,-173,-57,-132,110,-138,-56,-25,119,141,-19,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-183,-126,-88,-51,-73,-89,-71,-78,-184,-74,-81,-121,-76,-110,-70,-83,-92,-58,-180,-10,194,-182,199,-159,-157,-33,-32,-28,-34,-31,-29,-35,-36,-44,-37,-30,-43,-38,-128,-122,-175,229,231,-139,-185,-12,-155,-160,-161,-162,-172,-158,-26,-27,-23,-22,-42,-20,-111,-112,-98,-87,-117,-176,-59,-147,-64,-186,-13,-11,-21,-84,305,-148,-14,-156,-170,-45,-39,-40,-90,325,328,-61,-67,-163,-171,-46,-91,-85,338,-164,-169,-165,-196,-166,-197,-205,-198,-199,-206,]),'CHARS':([29,49,50,106,121,133,208,269,291,327,],[-17,-15,123,123,123,123,-16,123,123,123,]),'GEQ':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,157,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'FI':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,110,115,143,151,170,180,192,197,222,223,224,225,226,228,231,233,237,238,240,242,262,265,275,293,294,296,306,307,308,320,322,330,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-129,-150,-128,-122,-175,234,-185,-151,-111,-112,-98,-87,-117,-176,-130,-59,276,-149,-64,-186,294,-84,-152,-94,-90,320,-61,-153,-67,-91,-85,-154,]),'BY':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,265,283,284,294,306,308,320,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-84,310,-167,-90,-61,-67,-91,-85,]),'LPAREN':([1,3,5,8,9,22,24,29,30,31,33,35,39,43,57,64,65,73,76,77,88,90,93,98,103,104,111,117,125,126,127,128,130,131,132,135,137,140,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,173,175,183,184,185,186,187,188,210,211,212,216,218,227,232,235,239,241,244,248,255,256,261,263,266,281,282,287,288,289,290,292,297,303,310,312,314,],[-189,-193,77,88,77,-188,104,-17,-194,-187,77,-191,-192,-190,77,-124,77,88,-123,77,77,77,77,-140,77,77,88,77,-33,-32,211,-34,212,77,-35,-36,-37,-38,77,-114,-115,77,77,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,77,-102,-105,-120,-118,77,-119,88,230,-145,-142,-146,-144,-143,-141,77,77,77,77,77,77,77,77,77,77,77,77,290,212,77,77,77,211,212,-39,77,-40,77,77,77,327,77,77,212,]),'PROC':([89,],[175,]),'AND':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,153,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'REF':([29,49,50,106,121,133,208,269,291,327,],[-17,-15,133,133,133,133,-16,133,133,133,]),'LOC':([29,125,126,127,128,129,130,132,135,136,137,138,139,140,215,286,287,289,299,317,339,],[-17,-33,-32,-28,-34,-31,-29,-35,-36,-44,-37,-30,-43,-38,-42,-45,-39,-40,323,-46,346,]),'FALSE':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[68,68,68,68,-124,68,-123,68,68,68,68,-140,68,68,68,68,68,-114,-115,68,68,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,68,-102,-105,-120,-118,68,-119,-145,-142,-146,-144,-143,-141,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'OR':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,162,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'MINUS':([5,7,8,9,12,13,20,23,29,33,36,37,38,45,53,55,56,57,58,59,60,62,63,66,67,68,69,71,73,74,77,78,79,81,82,83,84,85,86,87,88,90,93,96,98,103,104,111,117,131,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,170,173,183,184,185,186,187,188,192,210,211,212,216,218,222,223,224,225,226,227,228,232,233,235,239,240,241,242,244,248,255,261,263,265,266,288,290,292,297,306,308,310,312,322,],[76,-55,-51,76,95,-174,-53,-52,-17,76,-54,-173,-57,-56,-116,-55,-72,76,-75,-77,-69,146,-127,-82,-125,-79,-80,-126,-51,-73,76,-71,-78,-74,-81,-121,-76,-110,-70,-83,76,76,76,-58,-140,76,76,-51,76,76,-128,76,-114,-115,76,76,-113,-122,-107,-101,-99,-104,-100,-106,-109,-103,-108,76,-102,-105,-120,-118,76,-119,-175,-51,-145,-142,-146,-144,-143,-141,-185,76,76,76,76,76,-111,-112,146,-87,-117,76,-176,76,-59,76,76,-64,76,-186,76,76,-51,76,76,-84,76,76,76,76,76,-61,-67,76,76,-85,]),'NOT':([5,9,33,57,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[64,64,64,64,64,64,64,64,-140,64,64,64,64,64,-114,-115,64,64,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,64,-102,-105,-120,-118,64,-119,-145,-142,-146,-144,-143,-141,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'RBRACKET':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,125,126,128,132,135,137,140,143,151,170,178,179,189,190,192,220,221,222,223,224,225,226,228,233,240,242,250,256,257,258,259,265,272,273,277,278,287,289,294,298,306,308,315,318,320,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-33,-32,-34,-35,-36,-37,-38,-128,-122,-175,233,-60,240,-65,-185,265,-65,-111,-112,-98,-87,-117,-176,-59,-64,-186,286,-49,-50,-47,291,-84,306,-63,-66,308,-39,-40,-90,322,-61,-67,-41,-48,-91,-85,]),'ELSIF':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,110,115,143,151,170,180,192,197,219,222,223,224,225,226,228,231,233,238,240,242,260,264,265,294,306,307,308,319,320,322,336,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-129,-150,-128,-122,-175,235,-185,-151,263,-111,-112,-98,-87,-117,-176,-130,-59,-149,-64,-186,-93,297,-84,-90,-61,235,-67,-95,-91,-85,-96,]),'NULL':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[66,66,66,66,-124,66,-123,66,66,66,66,-140,66,66,66,66,66,-114,-115,66,66,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,66,-102,-105,-120,-118,66,-119,-145,-142,-146,-144,-143,-141,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'RETURNS':([271,302,],[303,303,]),'FOR':([42,],[114,]),'INT':([29,49,50,106,121,133,208,216,247,269,285,291,292,327,],[-17,-15,135,135,135,135,-16,135,135,135,135,135,135,135,]),'EXIT':([0,17,18,21,25,27,28,34,42,89,109,110,112,115,119,141,181,194,196,197,199,229,231,236,238,246,275,305,325,328,329,337,338,340,344,],[15,-6,-7,-2,-4,-5,-8,15,15,15,-3,-129,15,-150,-24,-18,15,-9,15,-151,15,-195,-130,15,15,15,15,15,15,15,15,15,15,15,15,]),'LEQ':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,160,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'RPAREN':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,88,96,104,125,126,127,128,129,130,132,135,136,137,138,139,140,143,151,164,169,170,171,172,191,192,215,222,223,224,225,226,228,230,233,240,242,252,254,265,267,268,270,286,287,289,290,294,299,300,306,308,315,316,317,320,322,323,324,339,346,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,170,-58,192,-33,-32,-28,-34,-31,-29,-35,-36,-44,-37,-30,-43,-38,-128,-122,225,228,-175,-177,-179,242,-185,-42,-111,-112,-98,-87,-117,-176,271,-59,-64,-186,287,289,-84,-178,-200,302,-45,-39,-40,170,-90,-203,-202,-61,-67,-41,-179,-46,-91,-85,-204,-201,345,349,]),'LENGTH':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[39,39,39,-6,-7,-2,-4,-5,-8,39,39,39,39,39,-124,39,-123,39,39,39,39,39,-140,39,39,-3,-129,39,-150,39,-24,39,-18,39,-114,-115,39,39,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,39,-102,-105,-120,-118,39,-119,39,-145,-142,-146,-144,-143,-141,-9,39,-151,39,39,39,39,39,39,39,-195,-130,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'READ':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[3,3,3,-6,-7,-2,-4,-5,-8,3,3,3,3,3,-124,3,-123,3,3,3,3,3,-140,3,3,-3,-129,3,-150,3,-24,3,-18,3,-114,-115,3,3,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,3,-102,-105,-120,-118,3,-119,3,-145,-142,-146,-144,-143,-141,-9,3,-151,3,3,3,3,3,3,3,-195,-130,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TO':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,265,283,284,294,306,308,311,313,320,322,331,333,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-84,312,-167,-90,-61,-67,312,312,-91,-85,-168,312,]),'PLUS':([7,8,12,13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,73,74,78,79,81,82,83,84,85,86,87,96,111,143,151,170,173,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-55,-51,101,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,150,-127,-82,-125,-79,-80,-126,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-51,-128,-122,-175,-51,-185,-111,-112,150,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'ASC':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[22,22,22,-6,-7,-2,-4,-5,-8,22,22,22,22,22,-124,22,-123,22,22,22,22,22,-140,22,22,-3,-129,22,-150,22,-24,22,-18,22,-114,-115,22,22,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,22,-102,-105,-120,-118,22,-119,22,-145,-142,-146,-144,-143,-141,-9,22,-151,22,22,22,22,22,22,22,-195,-130,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'ARRAY':([29,49,50,106,121,133,208,269,291,327,],[-17,-15,134,134,134,134,-16,134,134,134,]),'THEN':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,91,92,96,143,144,151,170,192,222,223,224,225,226,228,233,240,242,265,274,294,295,306,308,320,321,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,181,-92,-58,-128,218,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-84,181,-90,218,-61,-67,-91,218,-85,]),'LAND':([7,8,12,13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,73,74,78,79,81,82,83,84,85,86,87,96,111,143,151,170,173,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-55,-51,97,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,147,-127,-82,-125,-79,-80,-126,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-51,-128,-122,-175,-51,-185,-111,-112,147,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'DCL':([0,17,18,21,25,27,28,34,109,110,119,141,194,229,231,305,325,328,329,337,338,340,344,],[26,-6,-7,-2,-4,-5,-8,26,-3,-129,-24,-18,-9,-195,-130,26,26,26,26,26,26,26,26,]),'TRUE':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[69,69,69,69,-124,69,-123,69,69,69,69,-140,69,69,69,69,69,-114,-115,69,69,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,69,-102,-105,-120,-118,69,-119,-145,-142,-146,-144,-143,-141,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'ICONST':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[79,79,79,79,-124,79,-123,79,79,79,79,-140,79,79,79,79,79,-114,-115,79,79,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,79,-102,-105,-120,-118,79,-119,-145,-142,-146,-144,-143,-141,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'MODULO':([7,8,12,13,20,23,29,36,37,38,45,53,55,56,58,59,60,63,66,67,68,69,71,73,74,78,79,81,82,83,84,85,86,87,96,111,143,151,170,173,192,222,223,225,226,228,233,240,242,255,265,306,308,322,],[-55,-51,94,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-127,-82,-125,-79,-80,-126,-51,-73,-71,-78,-74,-81,-121,-76,165,-70,-83,-58,-51,-128,-122,-175,-51,-185,165,165,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'BOOL':([29,49,50,106,121,133,208,216,247,269,285,291,292,327,],[-17,-15,137,137,137,137,-16,137,137,137,137,137,137,137,]),'IN':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,200,222,223,224,225,226,228,233,240,242,249,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,158,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,247,-111,-112,-98,-87,-117,-176,-59,-64,-186,285,-51,-84,-61,-67,-85,]),'EQUALS':([7,8,12,13,20,23,29,36,37,38,45,48,49,50,94,95,96,97,99,100,101,111,124,125,126,127,128,129,130,132,135,136,137,138,139,140,170,173,192,193,200,208,215,228,233,240,242,286,287,289,306,308,317,],[-55,-51,98,-174,-53,-52,-17,-54,-173,-57,-56,121,-15,131,183,184,-58,185,186,187,188,-51,210,-33,-32,-28,-34,-31,-29,-35,-36,-44,-37,-30,-43,-38,-175,-51,-185,244,248,-16,-42,-176,-59,-64,-186,-45,-39,-40,-61,-67,-46,]),'DIVIDE':([7,8,12,13,20,23,29,36,37,38,45,53,55,56,58,59,60,63,66,67,68,69,71,73,74,78,79,81,82,83,84,85,86,87,96,111,143,151,170,173,192,222,223,225,226,228,233,240,242,255,265,306,308,322,],[-55,-51,99,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-127,-82,-125,-79,-80,-126,-51,-73,-71,-78,-74,-81,-121,-76,168,-70,-83,-58,-51,-128,-122,-175,-51,-185,168,168,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'ID':([0,2,4,5,9,15,17,18,21,25,26,27,28,29,33,34,42,49,50,54,57,64,65,76,77,88,89,90,93,98,103,104,106,109,110,112,114,115,117,119,120,121,122,131,133,141,142,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,195,196,197,199,208,210,211,212,216,218,227,229,230,231,232,235,236,238,239,241,244,246,247,248,261,263,266,269,275,285,288,290,291,292,297,301,305,310,312,325,327,328,329,337,338,340,344,],[29,29,29,29,29,29,-6,-7,-2,-4,29,-5,-8,-17,29,29,29,-15,29,29,29,-124,29,-123,29,29,29,29,29,-140,29,29,29,-3,-129,29,29,-150,29,-24,29,29,29,29,29,-18,29,29,-114,-115,29,29,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,29,-102,-105,-120,-118,29,-119,29,-145,-142,-146,-144,-143,-141,-9,29,29,-151,29,-16,29,29,29,29,29,29,-195,29,-130,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'PRINT':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[30,30,30,-6,-7,-2,-4,-5,-8,30,30,30,30,30,-124,30,-123,30,30,30,30,30,-140,30,30,-3,-129,30,-150,30,-24,30,-18,30,-114,-115,30,30,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,30,-102,-105,-120,-118,30,-119,30,-145,-142,-146,-144,-143,-141,-9,30,-151,30,30,30,30,30,30,30,-195,-130,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LT':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,152,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'RETURN':([0,17,18,21,25,27,28,34,42,89,109,110,112,115,119,141,181,194,196,197,199,229,231,236,238,246,275,305,325,328,329,337,338,340,344,],[33,-6,-7,-2,-4,-5,-8,33,33,33,-3,-129,33,-150,-24,-18,33,-9,33,-151,33,-195,-130,33,33,33,33,33,33,33,33,33,33,33,33,]),'TIMES':([7,8,12,13,20,23,29,36,37,38,45,53,55,56,58,59,60,63,66,67,68,69,71,73,74,78,79,81,82,83,84,85,86,87,96,111,143,151,170,173,192,222,223,225,226,228,233,240,242,255,265,306,308,322,],[-55,-51,100,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-127,-82,-125,-79,-80,-126,-51,-73,-71,-78,-74,-81,-121,-76,166,-70,-83,-58,-51,-128,-122,-175,-51,-185,166,166,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'LOWER':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[35,35,35,-6,-7,-2,-4,-5,-8,35,35,35,35,35,-124,35,-123,35,35,35,35,35,-140,35,35,-3,-129,35,-150,35,-24,35,-18,35,-114,-115,35,35,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,35,-102,-105,-120,-118,35,-119,35,-145,-142,-146,-144,-143,-141,-9,35,-151,35,35,35,35,35,35,35,-195,-130,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'$end':([17,18,21,25,27,28,32,34,109,110,119,141,194,229,231,],[-6,-7,-2,-4,-5,-8,0,-1,-3,-129,-24,-18,-9,-195,-130,]),'CCONST':([5,9,33,57,64,65,76,77,88,90,93,98,103,104,117,131,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,183,184,185,186,187,188,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[82,82,82,82,-124,82,-123,82,82,82,82,-140,82,82,82,82,82,-114,-115,82,82,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,82,-102,-105,-120,-118,82,-119,-145,-142,-146,-144,-143,-141,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'NE':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,155,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'WHILE':([13,20,23,29,36,37,38,42,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,118,125,126,128,132,135,137,140,143,151,170,192,201,202,203,222,223,224,225,226,228,233,240,242,265,282,287,289,294,306,308,309,314,320,322,332,334,335,342,],[-174,-53,-52,-17,-54,-173,-57,117,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,117,-33,-32,-34,-35,-36,-37,-38,-128,-122,-175,-185,-160,-161,-162,-111,-112,-98,-87,-117,-176,-59,-64,-186,-84,-170,-39,-40,-90,-61,-67,-163,-171,-91,-85,-164,-169,-165,-166,]),'EQ':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,159,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'ELSE':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,110,115,143,151,170,180,192,197,219,222,223,224,225,226,228,231,233,238,240,242,260,264,265,294,306,307,308,319,320,322,336,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-129,-150,-128,-122,-175,236,-185,-151,261,-111,-112,-98,-87,-117,-176,-130,-59,-149,-64,-186,-93,261,-84,-90,-61,236,-67,-95,-91,-85,-96,]),'ABS':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[31,31,31,-6,-7,-2,-4,-5,-8,31,31,31,31,31,-124,31,-123,31,31,31,31,31,-140,31,31,-3,-129,31,-150,31,-24,31,-18,31,-114,-115,31,31,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,31,-102,-105,-120,-118,31,-119,31,-145,-142,-146,-144,-143,-141,-9,31,-151,31,31,31,31,31,31,31,-195,-130,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'IF':([0,5,9,17,18,21,25,27,28,33,34,42,57,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[9,57,57,-6,-7,-2,-4,-5,-8,57,9,9,57,57,57,9,57,57,-140,57,57,-3,-129,9,-150,57,-24,57,-18,57,9,-145,-142,-146,-144,-143,-141,-9,9,-151,9,57,57,57,57,57,57,-195,-130,57,57,9,9,57,57,57,9,57,57,57,57,9,57,57,57,57,9,57,57,9,9,9,9,9,9,9,]),'CHAR':([29,49,50,106,121,133,208,216,247,269,285,291,292,327,],[-17,-15,140,140,140,140,-16,140,140,140,140,140,140,140,]),'DO':([0,17,18,21,25,27,28,34,42,89,109,110,112,115,119,141,181,194,196,197,199,229,231,236,238,246,275,305,325,328,329,337,338,340,344,],[42,-6,-7,-2,-4,-5,-8,42,42,42,-3,-129,42,-150,-24,-18,42,-9,42,-151,42,-195,-130,42,42,42,42,42,42,42,42,42,42,42,42,]),'UPPER':([0,5,9,17,18,21,25,27,28,33,34,42,54,57,64,65,76,77,88,89,90,93,98,103,104,109,110,112,115,117,119,131,141,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,181,183,184,185,186,187,188,194,196,197,199,210,211,212,216,218,227,229,231,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[43,43,43,-6,-7,-2,-4,-5,-8,43,43,43,43,43,-124,43,-123,43,43,43,43,43,-140,43,43,-3,-129,43,-150,43,-24,43,-18,43,-114,-115,43,43,-113,-107,-101,-99,-104,-100,-106,-109,-103,-108,43,-102,-105,-120,-118,43,-119,43,-145,-142,-146,-144,-143,-141,-9,43,-151,43,43,43,43,43,43,43,-195,-130,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'COLON':([8,13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,111,143,151,170,177,179,190,192,221,222,223,224,225,226,228,233,240,242,253,255,265,294,306,308,316,320,322,],[89,-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,196,-128,-122,-175,232,-62,241,-185,266,-111,-112,-98,-87,-117,-176,-59,-64,-186,288,-51,-84,-90,-61,-67,288,-91,-85,]),'GT':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,78,79,81,82,83,84,85,86,87,96,143,151,170,192,222,223,224,225,226,228,233,240,242,255,265,306,308,322,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,163,-51,-73,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,-111,-112,-98,-87,-117,-176,-59,-64,-186,-51,-84,-61,-67,-85,]),'DOWN':([13,20,23,29,36,37,38,45,53,55,56,58,59,60,62,63,66,67,68,69,71,72,73,74,75,78,79,81,82,83,84,85,86,87,96,143,151,170,192,200,222,223,224,225,226,228,233,240,242,265,283,284,294,306,308,311,320,322,331,],[-174,-53,-52,-17,-54,-173,-57,-56,-116,-55,-72,-75,-77,-69,-97,-127,-82,-125,-79,-80,-126,-88,-51,-73,-89,-71,-78,-74,-81,-121,-76,-110,-70,-83,-58,-128,-122,-175,-185,249,-111,-112,-98,-87,-117,-176,-59,-64,-186,-84,313,-167,-90,-61,-67,333,-91,-85,-168,]),'LBRACKET':([7,8,12,13,16,20,23,29,36,37,38,45,55,56,58,59,60,61,63,66,67,68,69,73,74,78,79,81,82,84,86,87,96,111,123,134,143,170,173,192,225,228,233,240,242,255,265,306,308,322,],[-55,90,-68,-174,103,-53,-52,-17,-54,-173,-57,-56,-55,-72,-75,-77,-69,145,-86,-82,-68,-79,-80,90,-73,-71,-78,-74,-81,-76,-70,-83,-58,90,209,216,-68,-175,90,-185,-87,-176,-59,-64,-186,90,-84,-61,-67,-85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'end_value':([283,311,313,333,],[309,332,335,342,]),'operand3':([5,9,33,57,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,226,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'start_element':([90,],[178,]),'call_action':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[7,55,55,55,7,7,55,55,55,55,55,7,55,55,55,55,7,55,55,55,55,55,55,55,7,7,7,55,55,55,55,55,55,55,55,7,7,55,55,55,7,55,55,55,55,7,55,55,55,55,7,55,55,7,7,7,7,7,7,7,]),'membership_operator':([72,],[156,]),'iteration':([114,],[201,]),'character_mode':([50,106,121,133,216,247,269,285,291,292,327,],[128,128,128,128,128,128,128,128,128,128,128,]),'action_statement_list':([42,181,199,236,],[112,238,246,275,]),'discrete_mode':([50,106,121,133,216,247,269,285,291,292,327,],[130,130,130,130,256,282,130,314,130,256,130,]),'newmode_list':([2,],[47,]),'step_value':([283,],[311,]),'program':([0,],[32,]),'start_value':([248,],[283,]),'exit_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'monadic_operator':([5,9,33,57,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'control_part':([42,],[113,]),'parameter_spec':([269,],[300,]),'location':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[12,67,67,67,12,12,143,67,67,67,67,12,67,67,67,67,12,67,67,67,67,67,67,67,12,12,12,67,67,67,67,67,67,67,67,12,12,67,67,67,12,67,67,67,67,12,67,67,67,67,12,67,67,12,12,12,12,12,12,12,]),'operator1':([72,],[161,]),'initialization':([193,],[243,]),'declaration':([26,195,],[105,245,]),'parameter_list':([88,104,290,],[169,191,169,]),'mode_definition':([2,120,],[46,206,]),'result':([5,33,],[70,108,]),'synonym_definition':([4,142,],[52,217,]),'declaration_list':([26,],[107,]),'primitive_value':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'right_element':([232,],[272,]),'operand0':([5,9,33,57,77,88,90,93,103,104,117,131,145,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string_mode':([50,106,121,133,269,291,327,],[139,139,139,139,139,139,139,]),'declaration_statement':([0,34,305,325,328,329,337,338,340,344,],[25,25,25,25,25,25,25,25,25,25,]),'elsif_expression':([219,],[264,]),'integer_literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'parameter':([88,104,227,290,],[171,171,267,171,]),'list_index_mode':([216,],[259,]),'procedure_statement':([0,34,305,325,328,329,337,338,340,344,],[18,18,18,18,18,18,18,18,18,18,]),'integer_mode':([50,106,121,133,216,247,269,285,291,292,327,],[126,126,126,126,126,126,126,126,126,126,126,]),'synonym_list':([4,],[51,]),'action_statement':([0,34,42,112,181,199,236,238,246,275,305,325,328,329,337,338,340,344,],[28,28,115,197,115,115,115,197,197,197,28,28,28,28,28,28,28,28,]),'array_location':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'range_enumeration':([114,],[203,]),'assigning_operator':([12,],[93,]),'boolean_literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'bracketed_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'return_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'then_expression':([144,295,321,],[219,319,336,]),'operand2':([5,9,33,57,77,88,90,93,103,104,117,131,145,148,149,161,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[85,85,85,85,85,85,85,85,85,85,85,85,85,222,223,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'string_element':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array_mode':([50,106,121,133,269,291,327,],[136,136,136,136,136,136,136,]),'assignment_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'reference_mode':([50,106,121,133,269,291,327,],[138,138,138,138,138,138,138,]),'arithmetic_multiplicative_operator':([85,222,223,],[167,167,167,]),'composite_mode':([50,106,121,133,269,291,327,],[129,129,129,129,129,129,129,]),'constant_expression':([131,210,],[214,251,]),'string_concatenation_operator':([62,224,],[149,149,]),'value_array_element':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'mode':([50,106,121,133,269,291,327,],[124,193,207,215,299,317,339,]),'boolean_mode':([50,106,121,133,216,247,269,285,291,292,327,],[125,125,125,125,125,125,125,125,125,125,125,]),'procedure_call':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'identifier':([0,2,4,5,9,15,26,33,34,42,50,54,57,65,77,88,89,90,93,103,104,106,112,114,117,120,121,122,131,133,142,145,148,149,161,167,181,195,196,199,210,211,212,216,218,227,230,232,235,236,238,239,241,244,246,247,248,261,263,266,269,275,285,288,290,291,292,297,301,305,310,312,325,327,328,329,337,338,340,344,],[8,49,49,73,73,102,49,73,8,111,127,73,73,73,73,73,173,73,73,73,73,127,111,200,73,49,127,208,73,127,49,73,73,73,73,73,111,49,173,111,73,73,73,255,73,73,49,73,73,111,111,73,73,73,111,281,73,73,73,73,127,111,281,73,73,127,255,73,49,8,73,73,8,127,8,8,8,8,8,8,]),'parenthesized_expression':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'character_literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'character_string_literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'array_element':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,250,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'result_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'discrete_range_mode':([50,106,121,133,216,247,269,285,291,292,327,],[132,132,132,132,132,132,132,132,132,132,132,]),'if_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'builtin_call':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'operand1':([5,9,33,57,77,88,90,93,103,104,117,131,145,161,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[62,62,62,62,62,62,62,62,62,62,62,62,62,224,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string_slice':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'newmode_statement':([0,34,305,325,328,329,337,338,340,344,],[17,17,17,17,17,17,17,17,17,17,]),'result_spec':([271,302,],[304,326,]),'array_slice':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'expression_list':([103,145,],[189,220,]),'synonym_statement':([0,34,305,325,328,329,337,338,340,344,],[27,27,27,27,27,27,27,27,27,27,]),'statement':([0,34,305,325,328,329,337,338,340,344,],[21,109,21,21,21,109,109,21,109,109,]),'referenced_location':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'then_clause':([91,274,],[180,307,]),'literal_range':([211,212,216,290,292,],[252,254,257,252,257,]),'builtin_name':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'procedure_definition':([89,],[174,]),'conditional_expression':([5,9,33,57,77,88,90,93,103,104,117,131,145,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'formal_parameter':([230,301,],[268,324,]),'else_expression':([219,264,],[262,296,]),'value_array_slice':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'boolean_expression':([9,57,117,235,263,297,],[91,144,204,274,295,321,]),'expression':([5,9,33,57,77,88,90,93,103,104,117,131,145,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[80,92,80,92,164,172,179,182,190,172,92,213,221,213,253,253,253,260,172,273,92,277,278,279,284,293,92,298,315,316,253,92,331,334,]),'step_enumeration':([114,],[202,]),'else_clause':([180,307,],[237,330,]),'statement_list':([0,305,325,328,338,],[34,329,337,340,344,]),'index_mode':([216,292,],[258,318,]),'operand4':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[83,83,83,83,151,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'relational_operator':([72,],[154,]),'empty_literal':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,209,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'dereferenced_reference':([0,5,9,33,34,42,54,57,65,77,88,89,90,93,103,104,112,117,131,145,148,149,161,167,181,196,199,210,211,212,216,218,227,232,235,236,238,239,241,244,246,248,261,263,266,275,288,290,292,297,305,310,312,325,328,329,337,338,340,344,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'while_control':([42,118,],[116,205,]),'left_element':([90,],[177,]),'array_primitive_value':([5,9,33,57,65,77,88,90,93,103,104,117,131,145,148,149,161,167,210,211,212,216,218,227,232,235,239,241,244,248,261,263,266,288,290,292,297,310,312,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[41,41,41,176,41,41,176,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'for_control':([42,],[118,]),'identifier_list':([2,4,26,120,142,195,230,301,],[48,50,106,48,50,106,269,269,]),'formal_parameter_list':([230,],[270,]),'do_action':([0,34,42,89,112,181,196,199,236,238,246,275,305,325,328,329,337,338,340,344,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'arithmetic_additive_operator':([62,224,],[148,148,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',45),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',46),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',55),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',56),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',65),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',85),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',91),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',92),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',101),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',102),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',111),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> identifier','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',151),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',157),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',163),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',169),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',176),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',181),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',204),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',209),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',210),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',218),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',219),
  ('location -> identifier','location',1,'p_location','parser.py',225),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',226),
  ('location -> array_element','location',1,'p_location','parser.py',227),
  ('location -> array_slice','location',1,'p_location','parser.py',228),
  ('location -> call_action','location',1,'p_location','parser.py',229),
  ('location -> string_slice','location',1,'p_location','parser.py',230),
  ('location -> string_element','location',1,'p_location','parser.py',231),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',237),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',243),
  ('start_element -> expression','start_element',1,'p_start_element','parser.py',250),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',256),
  ('left_element -> expression','left_element',1,'p_left_element','parser.py',262),
  ('right_element -> expression','right_element',1,'p_right_element','parser.py',268),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',274),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',280),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',281),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',290),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',296),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',302),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',303),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',304),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',305),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',311),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',312),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',313),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',314),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',315),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',321),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',327),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',328),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',334),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',340),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',346),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',352),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',358),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',364),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',370),
  ('expression -> operand0','expression',1,'p_expression','parser.py',376),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',377),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',383),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',384),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',393),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',399),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',405),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',411),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',412),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',422),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',432),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',433),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',439),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',440),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',441),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',446),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',452),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',458),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',459),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',460),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',471),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',483),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',496),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',501),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',502),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',512),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',513),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',519),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',520),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',521),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',528),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',534),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',535),
  ('action -> bracketed_action','action',1,'p_action','parser.py',544),
  ('action -> assignment_action','action',1,'p_action','parser.py',545),
  ('action -> call_action','action',1,'p_action','parser.py',546),
  ('action -> exit_action','action',1,'p_action','parser.py',547),
  ('action -> return_action','action',1,'p_action','parser.py',548),
  ('action -> result_action','action',1,'p_action','parser.py',549),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',555),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',556),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',562),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',568),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',569),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',570),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',571),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',572),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',573),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',574),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',582),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',583),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',592),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',597),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',598),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',606),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',607),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',608),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',619),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',620),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',629),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',630),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',631),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',640),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',646),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',647),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',653),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',654),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',655),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',656),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',670),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',676),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',682),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',688),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',689),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',698),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',704),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',705),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',711),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',712),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',720),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',721),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',736),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',742),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',743),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',751),
  ('result -> expression','result',1,'p_result','parser.py',757),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',763),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',764),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',774),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',775),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',776),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',777),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',778),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',779),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',780),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',781),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',787),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',793),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',794),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',795),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',796),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',810),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',811),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',820),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',826),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',827),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',836),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',837),
]
