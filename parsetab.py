
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT EXIT END ASC FI RETURNS DO CHARS RESULT RETURN WHILE FALSE PROC SYN REF THEN IN DCL INT LOC ELSE NUM TYPE LENGTH IF ELSIF TO LOWER DOWN PRINT ABS OD CHAR NULL FOR TRUE READ BOOL ARRAY UPPER BYprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'AND':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,155,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'LOWER':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[2,-6,2,2,-4,-5,2,2,2,-7,-8,-2,-3,2,-133,2,2,2,-117,-116,2,2,2,2,-122,2,-143,2,2,-139,-136,-137,-138,-135,-134,2,-18,2,-93,-94,-100,-95,2,-92,-97,-96,-102,-101,-98,-99,-107,-108,2,2,-106,-113,-111,-112,2,-9,-24,2,2,-144,2,2,2,2,2,2,-123,-188,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([4,7,9,10,11,15,22,23,24,25,28,32,46,50,51,58,60,61,64,65,66,67,69,70,71,73,74,75,78,79,81,83,84,85,86,87,88,89,90,92,93,94,95,106,109,114,116,117,118,119,121,122,124,145,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,198,203,204,205,206,209,210,216,217,218,219,221,222,223,224,225,226,232,237,240,243,256,257,259,262,276,278,279,292,295,299,302,314,],[-166,52,-53,-51,72,-17,72,72,-52,-55,-167,-54,-56,72,-133,72,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,166,-66,72,-70,-76,-55,-62,-103,-64,-109,-120,72,-67,-63,72,72,-51,72,-139,-136,-137,-138,-135,-134,72,-168,72,-121,-115,-93,-94,-100,-95,72,-92,-97,-96,-102,-101,-98,-99,-107,-108,72,72,-106,-113,-111,-112,72,-178,72,72,72,72,-169,72,166,-104,-105,72,-110,-80,72,-57,72,72,72,72,-179,-51,72,-77,72,72,72,72,72,72,-60,72,72,-78,]),'WHILE':([4,9,15,24,27,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,111,127,129,130,134,138,140,141,145,152,153,188,190,191,198,209,216,217,218,221,222,224,240,257,273,280,281,293,295,297,298,314,315,320,322,323,330,],[-166,-53,-17,-52,106,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,106,-37,-33,-35,-34,-32,-36,-38,-168,-121,-115,-153,-155,-154,-178,-169,-91,-104,-105,-110,-80,-57,-179,-77,-163,-39,-40,-83,-60,-164,-156,-78,-84,-157,-158,-162,-159,]),'LT':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,156,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'PROC':([59,],[148,]),'OR':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,157,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'FOR':([27,],[107,]),'ARROW':([4,7,9,10,11,15,22,23,24,25,28,32,46,50,51,58,67,68,70,72,76,81,85,92,95,106,109,114,116,117,118,119,121,122,124,145,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,198,203,204,205,206,209,210,219,223,224,225,226,232,237,240,243,256,259,262,276,278,279,292,295,299,302,],[-166,46,-53,-51,63,-17,63,63,-52,-55,-167,-54,-56,63,-133,63,46,-117,-51,-116,63,63,-55,63,63,63,-51,63,-139,-136,-137,-138,-135,-134,63,-168,63,46,-93,-94,-100,-95,63,-92,-97,-96,-102,-101,-98,-99,-107,-108,63,63,-106,-113,-111,-112,63,-178,63,63,63,63,-169,63,63,63,-57,63,63,63,63,-179,-51,63,63,63,63,63,63,63,-60,63,63,]),'FALSE':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[64,64,64,64,-133,64,-117,-116,64,64,64,64,64,64,-139,-136,-137,-138,-135,-134,64,64,-93,-94,-100,-95,64,-92,-97,-96,-102,-101,-98,-99,-107,-108,64,64,-106,-113,-111,-112,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'CHAR':([15,54,56,97,139,184,202,203,238,252,269,277,278,310,],[-17,141,-15,141,141,141,-16,141,141,141,141,141,141,141,]),'PRINT':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[5,-6,5,5,-4,-5,5,5,5,-7,-8,-2,-3,5,-133,5,5,5,-117,-116,5,5,5,5,-122,5,-143,5,5,-139,-136,-137,-138,-135,-134,5,-18,5,-93,-94,-100,-95,5,-92,-97,-96,-102,-101,-98,-99,-107,-108,5,5,-106,-113,-111,-112,5,-9,-24,5,5,-144,5,5,5,5,5,5,-123,-188,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'SCONST':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[84,84,84,84,-133,84,-117,-116,84,84,84,84,84,84,-139,-136,-137,-138,-135,-134,84,84,-93,-94,-100,-95,84,-92,-97,-96,-102,-101,-98,-99,-107,-108,84,84,-106,-113,-111,-112,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'LEQ':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,163,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'GT':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,164,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'SYN':([0,3,6,14,19,37,38,42,44,99,143,181,183,212,213,285,308,309,312,324,327,328,334,],[8,-6,8,-4,-5,-7,-8,-2,-3,-122,-18,-9,-24,-123,-188,8,8,8,8,8,8,8,8,]),'NULL':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[74,74,74,74,-133,74,-117,-116,74,74,74,74,74,74,-139,-136,-137,-138,-135,-134,74,74,-93,-94,-100,-95,74,-92,-97,-96,-102,-101,-98,-99,-107,-108,74,74,-106,-113,-111,-112,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'MODULO':([4,7,9,10,15,24,25,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,79,83,84,85,86,87,88,89,90,93,94,109,145,152,153,198,209,217,218,221,222,224,240,243,257,295,314,],[-166,49,-53,-51,-17,-52,-55,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-66,-70,-76,-55,-62,172,-64,-109,-120,-67,-63,-51,-168,-121,-115,-178,-169,172,172,-110,-80,-57,-179,-51,-77,-60,-78,]),'TIMES':([4,7,9,10,15,24,25,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,79,83,84,85,86,87,88,89,90,93,94,109,145,152,153,198,209,217,218,221,222,224,240,243,257,295,314,],[-166,47,-53,-51,-17,-52,-55,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-66,-70,-76,-55,-62,173,-64,-109,-120,-67,-63,-51,-168,-121,-115,-178,-169,173,173,-110,-80,-57,-179,-51,-77,-60,-78,]),'RESULT':([0,3,6,14,19,27,37,38,42,44,59,99,108,110,143,181,183,185,192,193,196,212,213,231,233,239,267,285,308,309,312,324,327,328,334,],[11,-6,11,-4,-5,11,-7,-8,-2,-3,11,-122,-143,11,-18,-9,-24,11,11,-144,11,-123,-188,11,11,11,11,11,11,11,11,11,11,11,11,]),'REF':([15,54,56,97,139,184,202,252,277,310,],[-17,139,-15,139,139,139,-16,139,139,139,]),'COLON':([4,9,10,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,109,145,152,153,177,198,209,214,216,217,218,221,222,224,240,243,247,257,293,295,303,314,315,],[-166,-53,59,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,192,-168,-121,-115,223,-178,-169,256,-91,-104,-105,-110,-80,-57,-179,-51,279,-77,-83,-60,279,-78,-84,]),'ELSIF':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,99,108,145,152,153,186,193,198,209,212,216,217,218,220,221,222,224,231,240,257,258,260,293,295,296,314,315,317,329,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-122,-143,-168,-121,-115,232,-144,-178,-169,-123,-91,-104,-105,262,-110,-80,-57,-142,-179,-77,-86,292,-83,-60,232,-78,-84,-88,-89,]),'CCONST':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[73,73,73,73,-133,73,-117,-116,73,73,73,73,73,73,-139,-136,-137,-138,-135,-134,73,73,-93,-94,-100,-95,73,-92,-97,-96,-102,-101,-98,-99,-107,-108,73,73,-106,-113,-111,-112,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'IN':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,189,198,209,216,217,218,221,222,224,236,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,162,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,238,-178,-169,-91,-104,-105,-110,-80,-57,269,-179,-51,-77,-60,-78,]),'ID':([0,3,6,8,11,14,15,16,19,20,22,23,27,37,38,40,42,44,50,51,54,56,58,59,63,68,72,76,81,92,95,97,99,106,107,108,110,114,116,117,118,119,121,122,124,126,139,142,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,180,181,182,183,184,185,192,193,196,202,203,204,205,206,210,211,212,213,219,223,225,226,231,232,233,237,238,239,252,256,259,262,267,269,276,277,278,279,285,288,292,299,302,308,309,310,312,324,327,328,334,],[15,-6,15,15,15,-4,-17,15,-5,15,15,15,15,-7,-8,15,-2,-3,15,-133,15,-15,15,15,15,-117,-116,15,15,15,15,15,-122,15,15,-143,15,15,-139,-136,-137,-138,-135,-134,15,15,15,15,-18,15,-93,-94,-100,-95,15,-92,-97,-96,-102,-101,-98,-99,-107,-108,15,15,-106,-113,-111,-112,15,15,-9,15,-24,15,15,15,-144,15,-16,15,15,15,15,15,15,-123,-188,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'DIVIDE':([4,7,9,10,15,24,25,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,79,83,84,85,86,87,88,89,90,93,94,109,145,152,153,198,209,217,218,221,222,224,240,243,257,295,314,],[-166,48,-53,-51,-17,-52,-55,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-66,-70,-76,-55,-62,174,-64,-109,-120,-67,-63,-51,-168,-121,-115,-178,-169,174,174,-110,-80,-57,-179,-51,-77,-60,-78,]),'RPAREN':([4,9,15,24,28,32,46,58,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,114,125,127,129,130,131,132,134,135,136,137,138,140,141,144,145,146,147,152,153,176,197,198,207,209,211,216,217,218,221,222,224,240,249,250,251,253,255,257,275,276,280,281,282,283,293,295,303,304,306,307,313,314,315,326,332,],[-166,-53,-17,-52,-167,-54,-56,145,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,198,-31,-37,-33,-35,-44,-43,-34,-28,-29,-30,-32,-36,-38,209,-168,-172,-170,-121,-115,222,240,-178,-42,-169,254,-91,-104,-105,-110,-80,-57,-179,280,281,-171,-193,287,-77,-45,145,-39,-40,-195,-196,-83,-60,-172,-46,-41,-197,-194,-78,-84,333,336,]),'NE':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,160,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'GEQ':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,165,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'EQUALS':([4,7,9,10,15,24,25,28,32,45,46,47,48,49,52,53,54,56,70,101,109,125,127,129,130,131,132,133,134,135,136,137,138,140,141,145,179,189,198,202,207,209,224,240,275,280,281,295,304,],[-166,51,-53,-51,-17,-52,-55,-167,-54,116,-56,117,118,119,121,122,124,-15,-51,184,-51,-31,-37,-33,-35,-44,-43,204,-34,-28,-29,-30,-32,-36,-38,-168,226,237,-178,-16,-42,-169,-57,-179,-45,-39,-40,-60,-46,]),'READ':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[18,-6,18,18,-4,-5,18,18,18,-7,-8,-2,-3,18,-133,18,18,18,-117,-116,18,18,18,18,-122,18,-143,18,18,-139,-136,-137,-138,-135,-134,18,-18,18,-93,-94,-100,-95,18,-92,-97,-96,-102,-101,-98,-99,-107,-108,18,18,-106,-113,-111,-112,18,-9,-24,18,18,-144,18,18,18,18,18,18,-123,-188,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'ELSE':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,99,108,145,152,153,186,193,198,209,212,216,217,218,220,221,222,224,231,240,257,258,260,293,295,296,314,315,317,329,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-122,-143,-168,-121,-115,233,-144,-178,-169,-123,-91,-104,-105,259,-110,-80,-57,-142,-179,-77,-86,259,-83,-60,233,-78,-84,-88,-89,]),'THEN':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,103,104,145,152,153,171,198,209,216,217,218,221,222,224,240,257,266,293,294,295,314,315,316,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,185,-85,-168,-121,-115,219,-178,-169,-91,-104,-105,-110,-80,-57,-179,-77,185,-83,219,-60,-78,-84,219,]),'LAND':([4,7,9,10,15,24,25,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,78,79,83,84,85,86,87,88,89,90,93,94,109,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,45,-53,-51,-17,-52,-55,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,167,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-51,-168,-121,-115,-178,-169,167,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'TYPE':([0,3,6,14,19,37,38,42,44,99,143,181,183,212,213,285,308,309,312,324,327,328,334,],[20,-6,20,-4,-5,-7,-8,-2,-3,-122,-18,-9,-24,-123,-188,20,20,20,20,20,20,20,20,]),'LENGTH':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[21,-6,21,21,-4,-5,21,21,21,-7,-8,-2,-3,21,-133,21,21,21,-117,-116,21,21,21,21,-122,21,-143,21,21,-139,-136,-137,-138,-135,-134,21,-18,21,-93,-94,-100,-95,21,-92,-97,-96,-102,-101,-98,-99,-107,-108,21,21,-106,-113,-111,-112,21,-9,-24,21,21,-144,21,21,21,21,21,21,-123,-188,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'IF':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[22,-6,22,81,-4,-5,81,81,22,-7,-8,-2,-3,81,-133,81,22,81,81,81,-122,81,-143,22,81,-139,-136,-137,-138,-135,-134,81,-18,81,-9,-24,22,22,-144,22,81,81,81,81,81,-123,-188,81,81,81,81,22,81,22,81,22,81,81,81,22,81,81,81,22,81,81,81,22,22,22,22,22,22,22,]),'COMMA':([4,9,15,24,28,32,46,54,55,56,57,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,96,97,98,100,101,102,125,127,129,130,131,132,134,135,136,137,138,140,141,144,145,146,147,152,153,177,178,179,197,198,200,201,202,207,208,209,214,215,216,217,218,221,222,224,227,228,229,230,240,242,244,245,246,248,251,252,253,255,257,264,265,275,280,281,282,283,293,295,303,304,305,306,307,313,314,315,],[-166,-53,-17,-52,-167,-54,-56,126,-19,-15,142,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-10,126,180,182,126,-25,-31,-37,-33,-35,-44,-43,-34,-28,-29,-30,-32,-36,-38,210,-168,-172,-170,-121,-115,-58,225,-12,210,-178,-23,-22,-16,-42,-20,-169,-58,225,-91,-104,-105,-110,-80,-57,-13,-11,-26,-27,-179,-47,-49,-50,278,-21,-171,126,-193,288,-77,-59,-14,-45,-39,-40,-195,-196,-83,-60,-172,-46,-48,-41,-197,-194,-78,-84,]),'PLUS':([4,7,9,10,15,24,25,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,78,79,83,84,85,86,87,88,89,90,93,94,109,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,53,-53,-51,-17,-52,-55,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,170,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-51,-168,-121,-115,-178,-169,170,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'LPAREN':([2,5,10,11,15,18,21,22,23,26,31,35,41,43,50,51,58,68,70,72,76,81,92,95,106,109,114,116,117,118,119,121,122,124,127,129,130,134,135,136,138,140,141,148,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,243,244,256,259,262,272,273,276,278,279,280,281,286,292,297,299,302,],[-184,-187,58,92,-17,-186,-185,92,92,-183,114,-180,-182,-181,92,-133,92,-117,58,-116,92,92,92,92,92,58,92,-139,-136,-137,-138,-135,-134,92,-37,-33,-35,-34,205,206,-32,-36,-38,211,92,-93,-94,-100,-95,92,-92,-97,-96,-102,-101,-98,-99,-107,-108,92,92,-106,-113,-111,-112,92,92,92,92,92,92,92,92,92,92,92,92,276,206,92,92,92,205,206,92,92,92,-39,-40,310,92,206,92,92,]),'END':([3,14,19,37,38,42,44,99,143,181,183,212,213,309,324,328,334,],[-6,-4,-5,-7,-8,-2,-3,-122,-18,-9,-24,-123,-188,325,331,335,337,]),'RETURN':([0,3,6,14,19,27,37,38,42,44,59,99,108,110,143,181,183,185,192,193,196,212,213,231,233,239,267,285,308,309,312,324,327,328,334,],[23,-6,23,-4,-5,23,-7,-8,-2,-3,23,-122,-143,23,-18,-9,-24,23,23,-144,23,-123,-188,23,23,23,23,23,23,23,23,23,23,23,23,]),'DO':([0,3,6,14,19,27,37,38,42,44,59,99,108,110,143,181,183,185,192,193,196,212,213,231,233,239,267,285,308,309,312,324,327,328,334,],[27,-6,27,-4,-5,27,-7,-8,-2,-3,27,-122,-143,27,-18,-9,-24,27,27,-144,27,-123,-188,27,27,27,27,27,27,27,27,27,27,27,27,]),'DOWN':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,145,152,153,189,198,209,216,217,218,221,222,224,240,257,270,271,293,295,300,314,315,319,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,236,-178,-169,-91,-104,-105,-110,-80,-57,-179,-77,301,-160,-83,-60,321,-78,-84,-161,]),'ICONST':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,199,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[61,61,61,61,-133,61,-117,-116,61,61,61,61,61,61,-139,-136,-137,-138,-135,-134,61,61,-93,-94,-100,-95,61,-92,-97,-96,-102,-101,-98,-99,-107,-108,61,61,-106,-113,-111,-112,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TO':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,257,270,271,293,295,300,301,314,315,319,321,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-77,302,-160,-83,-60,302,302,-78,-84,-161,302,]),'$end':([3,6,14,19,34,37,38,42,44,99,143,181,183,212,213,],[-6,-1,-4,-5,0,-7,-8,-2,-3,-122,-18,-9,-24,-123,-188,]),'CHARS':([15,54,56,97,139,184,202,252,277,310,],[-17,123,-15,123,123,123,-16,123,123,123,]),'ARRAY':([15,54,56,97,139,184,202,252,277,310,],[-17,128,-15,128,128,128,-16,128,128,128,]),'FI':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,99,108,145,152,153,186,193,198,209,212,216,217,218,221,222,224,231,234,240,257,261,267,290,291,293,295,296,314,315,318,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-122,-143,-168,-121,-115,235,-144,-178,-169,-123,-91,-104,-105,-110,-80,-57,-142,268,-179,-77,293,-145,-87,315,-83,-60,-146,-78,-84,-147,]),'LBRACKET':([4,7,9,10,12,15,24,25,28,32,46,60,61,62,64,67,69,70,71,73,74,75,79,83,84,85,86,88,90,93,94,109,123,128,145,152,198,209,222,224,240,243,257,295,314,],[-166,-61,-53,-51,95,-17,-52,-55,-167,-54,-56,-65,-71,151,-72,-61,-68,-51,-73,-74,-75,-69,-66,-70,-76,-55,-62,-64,-79,-67,-63,-51,199,203,-168,-61,-178,-169,-80,-57,-179,-51,-77,-60,-78,]),'BOOL':([15,54,56,97,139,184,202,203,238,252,269,277,278,310,],[-17,127,-15,127,127,127,-16,127,127,127,127,127,127,127,]),'RETURNS':([254,287,],[286,286,]),'NOT':([11,22,23,50,51,58,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[68,68,68,68,-133,68,68,68,68,68,68,-139,-136,-137,-138,-135,-134,68,68,-93,-94,-100,-95,68,-92,-97,-96,-102,-101,-98,-99,-107,-108,68,68,-106,-113,-111,-112,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'LOC':([15,125,127,129,130,131,132,134,135,136,137,138,140,141,207,275,280,281,283,304,326,],[-17,-31,-37,-33,-35,-44,-43,-34,-28,-29,-30,-32,-36,-38,-42,-45,-39,-40,307,-46,332,]),'OD':([99,108,110,193,212,239,],[-122,-143,194,-144,-123,274,]),'INT':([15,54,56,97,139,184,202,203,238,252,269,277,278,310,],[-17,140,-15,140,140,140,-16,140,140,140,140,140,140,140,]),'TRUE':([11,22,23,50,51,58,68,72,76,81,92,95,106,114,116,117,118,119,121,122,124,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[71,71,71,71,-133,71,-117,-116,71,71,71,71,71,71,-139,-136,-137,-138,-135,-134,71,71,-93,-94,-100,-95,71,-92,-97,-96,-102,-101,-98,-99,-107,-108,71,71,-106,-113,-111,-112,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'DCL':([0,3,6,14,19,37,38,42,44,99,143,181,183,212,213,285,308,309,312,324,327,328,334,],[16,-6,16,-4,-5,-7,-8,-2,-3,-122,-18,-9,-24,-123,-188,16,16,16,16,16,16,16,16,]),'EXIT':([0,3,6,14,19,27,37,38,42,44,59,99,108,110,143,181,183,185,192,193,196,212,213,231,233,239,267,285,308,309,312,324,327,328,334,],[40,-6,40,-4,-5,40,-7,-8,-2,-3,40,-122,-143,40,-18,-9,-24,40,40,-144,40,-123,-188,40,40,40,40,40,40,40,40,40,40,40,40,]),'SEMI':([1,4,9,13,15,17,23,24,25,28,29,30,32,33,36,39,46,55,57,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,80,82,83,84,85,86,87,88,89,90,91,93,94,96,98,100,102,104,105,111,112,113,115,120,125,127,129,130,131,132,134,135,136,137,138,140,141,145,149,150,152,153,179,187,188,190,191,194,195,198,200,201,207,208,209,216,217,218,221,222,224,227,228,229,230,235,240,248,254,257,265,268,273,274,275,280,281,284,287,293,295,297,298,304,311,314,315,320,322,323,325,330,331,333,335,336,337,],[-129,-166,-53,-124,-17,99,-174,-52,-126,-167,-128,-130,-54,-127,-131,-125,-56,-19,143,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-177,-82,-70,-76,-55,-62,-103,-64,-109,-120,-176,-67,-63,-10,181,183,-25,-85,-175,-150,196,-152,-173,-132,-31,-37,-33,-35,-44,-43,-34,-28,-29,-30,-32,-36,-38,-168,212,213,-121,-115,-12,-165,-153,-155,-154,-148,-151,-178,-23,-22,-42,-20,-169,-91,-104,-105,-110,-80,-57,-13,-11,-26,-27,-140,-179,-21,285,-77,-14,-141,-163,-149,-45,-39,-40,308,312,-83,-60,-164,-156,-46,327,-78,-84,-157,-158,-162,-189,-159,-191,-198,-190,-199,-192,]),'RBRACKET':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,127,129,130,134,138,140,141,145,152,153,177,178,198,209,214,215,216,217,218,221,222,224,240,241,242,244,245,246,257,263,264,280,281,289,293,295,305,306,314,315,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-37,-33,-35,-34,-32,-36,-38,-168,-121,-115,-58,224,-178,-169,-58,257,-91,-104,-105,-110,-80,-57,-179,275,-47,-49,-50,277,-77,295,-59,-39,-40,314,-83,-60,-48,-41,-78,-84,]),'BY':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,82,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,257,270,271,293,295,314,315,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,-81,-90,-66,-82,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-77,299,-160,-83,-60,-78,-84,]),'EQ':([4,9,15,24,28,32,46,60,61,64,65,66,67,69,70,71,73,74,75,77,78,79,83,84,85,86,87,88,89,90,93,94,145,152,153,198,209,216,217,218,221,222,224,240,243,257,295,314,],[-166,-53,-17,-52,-167,-54,-56,-65,-71,-72,-119,-114,-118,-68,-51,-73,-74,-75,-69,161,-90,-66,-70,-76,-55,-62,-103,-64,-109,-120,-67,-63,-168,-121,-115,-178,-169,-91,-104,-105,-110,-80,-57,-179,-51,-77,-60,-78,]),'NUM':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[41,-6,41,41,-4,-5,41,41,41,-7,-8,-2,-3,41,-133,41,41,41,-117,-116,41,41,41,41,-122,41,-143,41,41,-139,-136,-137,-138,-135,-134,41,-18,41,-93,-94,-100,-95,41,-92,-97,-96,-102,-101,-98,-99,-107,-108,41,41,-106,-113,-111,-112,41,-9,-24,41,41,-144,41,41,41,41,41,41,-123,-188,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'ABS':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[35,-6,35,35,-4,-5,35,35,35,-7,-8,-2,-3,35,-133,35,35,35,-117,-116,35,35,35,35,-122,35,-143,35,35,-139,-136,-137,-138,-135,-134,35,-18,35,-93,-94,-100,-95,35,-92,-97,-96,-102,-101,-98,-99,-107,-108,35,35,-106,-113,-111,-112,35,-9,-24,35,35,-144,35,35,35,35,35,35,-123,-188,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ASC':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[43,-6,43,43,-4,-5,43,43,43,-7,-8,-2,-3,43,-133,43,43,43,-117,-116,43,43,43,43,-122,43,-143,43,43,-139,-136,-137,-138,-135,-134,43,-18,43,-93,-94,-100,-95,43,-92,-97,-96,-102,-101,-98,-99,-107,-108,43,43,-106,-113,-111,-112,43,-9,-24,43,43,-144,43,43,43,43,43,43,-123,-188,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'UPPER':([0,3,6,11,14,19,22,23,27,37,38,42,44,50,51,58,59,63,68,72,76,81,92,95,99,106,108,110,114,116,117,118,119,121,122,124,143,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,181,183,185,192,193,196,203,204,205,206,210,212,213,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[26,-6,26,26,-4,-5,26,26,26,-7,-8,-2,-3,26,-133,26,26,26,-117,-116,26,26,26,26,-122,26,-143,26,26,-139,-136,-137,-138,-135,-134,26,-18,26,-93,-94,-100,-95,26,-92,-97,-96,-102,-101,-98,-99,-107,-108,26,26,-106,-113,-111,-112,26,-9,-24,26,26,-144,26,26,26,26,26,26,-123,-188,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'membership_operator':([77,],[154,]),'parameter_spec':([252,],[282,]),'synonym_definition':([8,142,],[55,208,]),'newmode_statement':([0,6,285,308,309,312,324,327,328,334,],[3,3,3,3,3,3,3,3,3,3,]),'start_value':([237,],[270,]),'program':([0,],[34,]),'array_mode':([54,97,139,184,252,277,310,],[131,131,131,131,131,131,131,]),'then_expression':([171,294,316,],[220,317,329,]),'arithmetic_additive_operator':([78,216,],[168,168,]),'operand4':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[66,66,66,66,66,153,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'index_mode':([203,278,],[242,305,]),'literal_range':([203,205,206,276,278,],[245,249,250,249,245,]),'range_enumeration':([107,],[190,]),'reference_mode':([54,97,139,184,252,277,310,],[137,137,137,137,137,137,137,]),'formal_parameter':([211,288,],[253,313,]),'declaration_statement':([0,6,285,308,309,312,324,327,328,334,],[14,14,14,14,14,14,14,14,14,14,]),'list_index_mode':([203,],[246,]),'synonym_statement':([0,6,285,308,309,312,324,327,328,334,],[19,19,19,19,19,19,19,19,19,19,]),'assigning_operator':([7,],[50,]),'boolean_expression':([22,81,106,232,262,292,],[103,171,187,266,294,316,]),'operand1':([11,22,23,50,58,81,92,95,106,114,124,151,158,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[78,78,78,78,78,78,78,78,78,78,78,78,216,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'result_spec':([254,287,],[284,311,]),'declaration':([16,180,],[96,228,]),'iteration':([107,],[188,]),'identifier_list':([8,16,20,142,180,182,211,288,],[54,97,101,54,97,101,252,252,]),'expression':([11,22,23,50,58,81,92,95,106,114,124,151,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[80,104,80,120,146,104,176,177,104,146,200,214,247,200,247,247,146,258,263,264,265,104,271,289,290,104,303,247,306,104,319,323,]),'composite_mode':([54,97,139,184,252,277,310,],[125,125,125,125,125,125,125,]),'conditional_expression':([11,22,23,50,58,81,92,95,106,114,124,151,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'dereferenced_reference':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'result':([11,23,],[91,105,]),'newmode_list':([20,],[100,]),'literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'then_clause':([103,266,],[186,296,]),'for_control':([27,],[111,]),'else_expression':([220,260,],[261,291,]),'formal_parameter_list':([211,],[255,]),'initialization':([179,],[227,]),'character_mode':([54,97,139,184,203,238,252,269,277,278,310,],[134,134,134,134,134,134,134,134,134,134,134,]),'operand3':([11,22,23,50,58,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,221,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'constant_expression':([124,204,],[201,248,]),'builtin_name':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'procedure_definition':([59,],[150,]),'action_statement':([0,6,27,110,185,196,231,233,239,267,285,308,309,312,324,327,328,334,],[38,38,108,193,108,108,193,108,193,193,38,38,38,38,38,38,38,38,]),'end_value':([270,300,301,321,],[298,320,322,330,]),'statement':([0,6,285,308,309,312,324,327,328,334,],[42,44,42,42,44,42,44,42,44,44,]),'result_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'primitive_value':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'elsif_expression':([220,],[260,]),'declaration_list':([16,],[98,]),'string_concatenation_operator':([78,216,],[169,169,]),'step_enumeration':([107,],[191,]),'parenthesized_expression':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'control_part':([27,],[112,]),'array_primitive_value':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'discrete_range_mode':([54,97,139,184,203,238,252,269,277,278,310,],[130,130,130,130,130,130,130,130,130,130,130,]),'procedure_call':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'boolean_mode':([54,97,139,184,203,238,252,269,277,278,310,],[129,129,129,129,129,129,129,129,129,129,129,]),'statement_list':([0,285,308,312,327,],[6,309,324,328,334,]),'character_literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'referenced_location':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'location':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[7,7,67,67,67,7,67,67,7,152,67,67,67,67,67,7,67,67,67,67,67,67,67,7,7,7,67,67,67,67,67,67,67,67,67,7,67,7,67,7,67,67,67,7,67,67,67,7,67,67,67,7,7,7,7,7,7,7,]),'parameter_list':([58,114,276,],[144,197,144,]),'array_element':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'identifier':([0,6,8,11,16,20,22,23,27,40,50,54,58,59,63,76,81,92,95,97,106,107,110,114,124,126,139,142,151,158,168,169,175,180,182,184,185,192,196,203,204,205,206,210,211,219,223,225,226,231,232,233,237,238,239,252,256,259,262,267,269,276,277,278,279,285,288,292,299,302,308,309,310,312,324,327,328,334,],[10,10,56,70,56,56,70,70,109,115,70,135,70,70,70,70,70,70,70,135,70,189,109,70,70,202,135,56,70,70,70,70,70,56,56,135,109,70,109,243,70,70,70,70,56,70,70,70,70,109,70,109,70,272,109,135,70,70,70,109,272,70,135,243,70,10,56,70,70,70,10,10,135,10,10,10,10,10,]),'discrete_mode':([54,97,139,184,203,238,252,269,277,278,310,],[136,136,136,136,244,273,136,297,136,244,136,]),'synonym_list':([8,],[57,]),'action_statement_list':([27,185,196,233,],[110,231,239,267,]),'array_location':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'bracketed_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[17,17,17,149,17,17,149,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'monadic_operator':([11,22,23,50,58,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'operand0':([11,22,23,50,58,81,92,95,106,114,124,151,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'integer_literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,199,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,241,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'relational_operator':([77,],[159,]),'empty_literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'character_string_literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'parameter':([58,114,210,276,],[147,147,251,147,]),'operator1':([77,],[158,]),'integer_mode':([54,97,139,184,203,238,252,269,277,278,310,],[138,138,138,138,138,138,138,138,138,138,138,]),'operand2':([11,22,23,50,58,81,92,95,106,114,124,151,158,168,169,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[87,87,87,87,87,87,87,87,87,87,87,87,87,217,218,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'step_value':([270,],[300,]),'string_mode':([54,97,139,184,252,277,310,],[132,132,132,132,132,132,132,]),'mode':([54,97,139,184,252,277,310,],[133,179,207,230,283,304,326,]),'value_array_slice':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'builtin_call':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'return_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'mode_definition':([20,182,],[102,229,]),'if_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_slice':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'exit_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'else_clause':([186,296,],[234,318,]),'do_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'while_control':([27,111,],[113,195,]),'procedure_statement':([0,6,285,308,309,312,324,327,328,334,],[37,37,37,37,37,37,37,37,37,37,]),'assignment_action':([0,6,27,59,110,185,192,196,231,233,239,267,285,308,309,312,324,327,328,334,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'call_action':([0,6,11,22,23,27,50,58,59,63,76,81,92,95,106,110,114,124,151,158,168,169,175,185,192,196,203,204,205,206,210,219,223,225,226,231,232,233,237,239,256,259,262,267,276,278,279,285,292,299,302,308,309,312,324,327,328,334,],[25,25,85,85,85,25,85,85,25,85,85,85,85,85,85,25,85,85,85,85,85,85,85,25,25,25,85,85,85,85,85,85,85,85,85,25,85,25,85,25,85,85,85,25,85,85,85,25,85,85,85,25,25,25,25,25,25,25,]),'arithmetic_multiplicative_operator':([87,217,218,],[175,175,175,]),'boolean_literal':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'value_array_element':([11,22,23,50,58,76,81,92,95,106,114,124,151,158,168,169,175,203,204,205,206,210,219,223,225,226,232,237,256,259,262,276,278,279,292,299,302,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'expression_list':([95,151,],[178,215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',295),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',302),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',303),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',312),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',326),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',328),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',336),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',339),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',353),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',354),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',361),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',368),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',375),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',382),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',389),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',396),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',402),
  ('expression -> operand0','expression',1,'p_expression','parser.py',409),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',410),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',417),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',418),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',428),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',442),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',449),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',450),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',473),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',474),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',494),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',501),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',502),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',514),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',515),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',522),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',529),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',530),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',541),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',542),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',549),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',550),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',561),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',562),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',569),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',570),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',571),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',578),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',585),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',586),
  ('action -> bracketed_action','action',1,'p_action','parser.py',597),
  ('action -> assignment_action','action',1,'p_action','parser.py',598),
  ('action -> call_action','action',1,'p_action','parser.py',599),
  ('action -> exit_action','action',1,'p_action','parser.py',600),
  ('action -> return_action','action',1,'p_action','parser.py',601),
  ('action -> result_action','action',1,'p_action','parser.py',602),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',609),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',610),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',617),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',624),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',625),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',639),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',640),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',650),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',656),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',657),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',665),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',666),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',667),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',679),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',680),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',692),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',702),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',709),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',710),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',717),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',718),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',719),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',720),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',735),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',741),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',747),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',753),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',754),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',764),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',771),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',772),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',779),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',780),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',789),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',790),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',799),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',805),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',812),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',813),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',822),
  ('result -> expression','result',1,'p_result','parser.py',829),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',835),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',836),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',847),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',848),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',849),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',850),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',854),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',860),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',867),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',868),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',869),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',870),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',885),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',886),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',895),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',902),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',903),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',913),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',914),
]
