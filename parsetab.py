
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT TYPE THEN DO EXIT BOOL LENGTH ELSE LOWER FI NULL REF SYN TRUE UPPER BY ABS READ DCL LOC DOWN PRINT INT ASC NUM FOR CHAR IN WHILE ELSIF PROC CHARS RETURNS RETURN END TO OD RESULT IF ARRAY FALSEprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_range_mode \n                              | identifier DOWN IN discrete_range_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'LPAREN':([3,4,9,10,13,16,19,27,29,32,34,35,37,41,49,52,54,61,65,69,70,83,94,98,103,104,114,116,117,118,119,121,122,127,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,166,168,169,172,173,174,175,178,181,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,256,257,269,270,271,277,285,290,291,293,294,296,299,301,302,],[-185,54,61,61,-183,98,61,-181,-17,-184,-187,-186,-180,-182,61,-133,61,61,54,61,-117,61,-116,61,54,61,61,-135,-138,-136,-139,-134,-137,201,-98,61,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,61,-113,-111,-112,61,-108,-107,-106,61,61,-37,224,-34,-33,-35,227,-32,-38,-36,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,290,227,224,-35,227,305,61,61,61,61,-39,-40,61,61,-35,]),'LENGTH':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[3,3,-6,-8,3,3,-5,3,3,-4,-2,-7,-3,3,-133,3,3,3,3,-117,3,3,-116,3,3,-143,3,3,-122,-135,-138,-136,-139,-134,-137,-24,-98,3,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,3,-113,-111,-112,3,-108,-107,-106,3,3,3,-9,3,3,-144,3,-18,3,-188,-123,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'COLON':([4,11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,103,125,157,159,163,198,199,207,208,211,212,213,215,221,239,251,256,261,287,303,313,314,316,],[55,-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,183,-168,-121,-115,-178,240,-169,-80,-91,-110,-105,-104,252,-179,-57,-77,-51,293,-83,-60,-84,-78,293,]),'ABS':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[37,37,-6,-8,37,37,-5,37,37,-4,-2,-7,-3,37,-133,37,37,37,37,-117,37,37,-116,37,37,-143,37,37,-122,-135,-138,-136,-139,-134,-137,-24,-98,37,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,37,-113,-111,-112,37,-108,-107,-106,37,37,37,-9,37,37,-144,37,-18,37,-188,-123,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'BOOL':([29,58,101,112,131,170,204,223,232,245,272,291,292,305,],[-17,-15,166,166,166,166,-16,166,166,166,166,166,166,166,]),'LAND':([2,4,11,12,14,17,22,28,29,51,62,63,64,65,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,103,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[48,-51,-53,-167,-52,-54,-55,-166,-17,-56,-73,-118,-68,-51,-109,-69,-103,153,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-51,-168,-121,-115,-178,-169,-80,153,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'AND':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,139,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'EXIT':([0,1,6,8,15,21,25,26,43,44,55,105,107,115,133,161,165,183,185,186,196,202,203,216,220,230,253,276,304,306,307,327,328,329,336,],[5,5,-6,-8,-5,5,-4,-2,-7,-3,5,-143,5,-122,-24,5,-9,5,5,-144,-18,-188,-123,5,5,5,5,5,5,5,5,5,5,5,5,]),'RBRACKET':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,125,157,159,163,166,169,172,173,175,178,181,197,198,199,207,208,211,212,213,214,215,221,239,251,257,258,259,260,263,274,275,287,288,294,296,303,313,314,317,319,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-37,-34,-33,-35,-32,-38,-36,239,-58,-169,-80,-91,-110,-105,-104,251,-58,-179,-57,-77,-49,-47,-50,292,295,-59,303,-83,314,-39,-40,-60,-84,-78,-48,-41,]),'WHILE':([11,12,14,17,21,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,110,125,157,159,163,188,189,190,199,207,208,211,212,213,221,239,251,270,287,294,296,297,302,303,313,314,320,323,324,331,],[-53,-167,-52,-54,104,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,104,-168,-121,-115,-178,-153,-155,-154,-169,-80,-91,-110,-105,-104,-179,-57,-77,-163,-83,-39,-40,-156,-164,-60,-84,-78,-157,-158,-162,-159,]),'TYPE':([0,1,6,8,15,25,26,43,44,115,133,165,196,202,203,276,304,306,307,327,328,329,336,],[7,7,-6,-8,-5,-4,-2,-7,-3,-122,-24,-9,-18,-188,-123,7,7,7,7,7,7,7,7,]),'TIMES':([2,4,11,12,14,17,22,28,29,51,62,63,64,65,67,68,71,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,103,125,157,159,163,199,207,211,212,213,221,239,251,256,303,314,],[47,-51,-53,-167,-52,-54,-55,-166,-17,-56,-73,-118,-68,-51,-109,-69,150,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-51,-168,-121,-115,-178,-169,-80,-110,150,150,-179,-57,-77,-51,-60,-78,]),'NUM':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[41,41,-6,-8,41,41,-5,41,41,-4,-2,-7,-3,41,-133,41,41,41,41,-117,41,41,-116,41,41,-143,41,41,-122,-135,-138,-136,-139,-134,-137,-24,-98,41,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,41,-113,-111,-112,41,-108,-107,-106,41,41,41,-9,41,41,-144,41,-18,41,-188,-123,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'CHAR':([29,58,101,112,131,170,204,223,232,245,272,291,292,305,],[-17,-15,178,178,178,178,-16,178,178,178,178,178,178,178,]),'ARRAY':([29,58,101,112,131,170,204,245,292,305,],[-17,-15,167,167,167,167,-16,167,167,167,]),'PROC':([55,],[127,]),'IF':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,98,104,105,107,114,115,116,117,118,119,121,122,133,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[10,10,-6,-8,69,69,-5,69,10,-4,-2,-7,-3,69,-133,69,10,69,69,69,69,-143,10,69,-122,-135,-138,-136,-139,-134,-137,-24,69,10,-9,10,10,-144,69,-18,69,-188,-123,69,10,69,10,69,69,69,69,10,69,69,69,69,69,69,69,10,10,69,69,69,69,69,69,10,10,10,10,10,10,10,]),'NOT':([9,10,19,49,52,54,61,69,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[70,70,70,70,-133,70,70,70,70,70,70,-135,-138,-136,-139,-134,-137,-98,70,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,70,-113,-111,-112,70,-108,-107,-106,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'UPPER':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[13,13,-6,-8,13,13,-5,13,13,-4,-2,-7,-3,13,-133,13,13,13,13,-117,13,13,-116,13,13,-143,13,13,-122,-135,-138,-136,-139,-134,-137,-24,-98,13,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,13,-113,-111,-112,13,-108,-107,-106,13,13,13,-9,13,13,-144,13,-18,13,-188,-123,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MODULO':([2,4,11,12,14,17,22,28,29,51,62,63,64,65,67,68,71,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,103,125,157,159,163,199,207,211,212,213,221,239,251,256,303,314,],[46,-51,-53,-167,-52,-54,-55,-166,-17,-56,-73,-118,-68,-51,-109,-69,149,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-51,-168,-121,-115,-178,-169,-80,-110,149,149,-179,-57,-77,-51,-60,-78,]),'IN':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,191,199,207,208,211,212,213,221,233,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,146,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,232,-169,-80,-91,-110,-105,-104,-179,272,-57,-77,-51,-60,-78,]),'OR':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,141,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'OD':([105,107,115,186,203,230,],[-143,187,-122,-144,-123,266,]),'DCL':([0,1,6,8,15,25,26,43,44,115,133,165,196,202,203,276,304,306,307,327,328,329,336,],[18,18,-6,-8,-5,-4,-2,-7,-3,-122,-24,-9,-18,-188,-123,18,18,18,18,18,18,18,18,]),'PLUS':([2,4,11,12,14,17,22,28,29,51,62,63,64,65,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,103,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[50,-51,-53,-167,-52,-54,-55,-166,-17,-56,-73,-118,-68,-51,-109,-69,-103,155,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-51,-168,-121,-115,-178,-169,-80,155,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'ARROW':([2,4,9,10,11,12,14,17,19,22,28,29,49,51,52,54,61,63,65,69,70,78,83,94,98,103,104,114,116,117,118,119,121,122,125,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,163,194,199,200,210,219,221,223,224,227,228,231,234,238,239,240,246,247,252,256,285,290,291,293,299,301,303,],[51,-51,75,75,-53,-167,-52,-54,75,-55,-166,-17,75,-56,-133,75,75,51,-51,75,-117,-55,75,-116,75,-51,75,75,-135,-138,-136,-139,-134,-137,-168,-98,75,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,75,-113,-111,-112,75,-108,-107,-106,75,51,75,-178,75,-169,75,75,75,-179,75,75,75,75,75,75,75,-57,75,75,75,75,-51,75,75,75,75,75,75,-60,]),'SCONST':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[76,76,76,76,-133,76,76,76,-117,76,-116,76,76,76,-135,-138,-136,-139,-134,-137,-98,76,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,76,-113,-111,-112,76,-108,-107,-106,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'DO':([0,1,6,8,15,21,25,26,43,44,55,105,107,115,133,161,165,183,185,186,196,202,203,216,220,230,253,276,304,306,307,327,328,329,336,],[21,21,-6,-8,-5,21,-4,-2,-7,-3,21,-143,21,-122,-24,21,-9,21,21,-144,-18,-188,-123,21,21,21,21,21,21,21,21,21,21,21,21,]),'NE':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,144,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'TRUE':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[62,62,62,62,-133,62,62,62,-117,62,-116,62,62,62,-135,-138,-136,-139,-134,-137,-98,62,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,62,-113,-111,-112,62,-108,-107,-106,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DOWN':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,125,157,159,163,191,199,207,208,211,212,213,221,239,251,267,268,287,298,303,313,314,322,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,233,-169,-80,-91,-110,-105,-104,-179,-57,-77,300,-160,-83,321,-60,-84,-78,-161,]),'CCONST':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[82,82,82,82,-133,82,82,82,-117,82,-116,82,82,82,-135,-138,-136,-139,-134,-137,-98,82,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,82,-113,-111,-112,82,-108,-107,-106,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'SEMI':([9,11,12,14,17,20,22,23,28,29,30,31,33,36,39,42,51,56,57,60,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,81,82,84,85,86,87,88,89,90,91,92,93,95,97,99,100,102,106,108,110,111,113,120,125,128,129,157,159,163,166,168,169,172,173,174,175,176,177,178,179,180,181,182,184,187,188,189,190,192,199,205,206,207,208,211,212,213,217,221,222,225,229,235,236,237,239,243,251,254,265,266,270,273,278,279,287,294,295,296,297,302,303,308,313,314,318,320,323,324,325,331,332,334,335,337,338,],[-174,-53,-167,-52,-54,-127,-126,-130,-166,-17,-128,-129,-124,-131,-125,115,-56,-173,-25,133,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-175,-74,-65,-82,-66,-177,-71,-114,-63,-67,-119,-64,-72,-85,-10,165,-176,185,-152,-150,-19,196,-132,-168,202,203,-121,-115,-178,-37,-28,-34,-33,-35,-29,-32,-30,-31,-38,-44,-43,-36,-12,-165,-148,-153,-155,-154,-151,-169,-27,-26,-80,-91,-110,-105,-104,-140,-179,-11,-42,-13,-23,-22,-20,-57,276,-77,-141,-14,-149,-163,-21,306,307,-83,-39,-45,-40,-156,-164,-60,329,-84,-78,-46,-157,-158,-162,-189,-159,-198,-191,-190,-199,-192,]),'FI':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,105,115,125,157,159,160,163,186,199,203,207,208,211,212,213,218,220,221,239,249,251,253,283,286,287,289,303,313,314,315,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-143,-122,-168,-121,-115,217,-178,-144,-169,-123,-80,-91,-110,-105,-104,254,-142,-179,-57,287,-77,-145,-87,313,-83,-146,-60,-84,-78,-147,]),'NULL':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[80,80,80,80,-133,80,80,80,-117,80,-116,80,80,80,-135,-138,-136,-139,-134,-137,-98,80,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,80,-113,-111,-112,80,-108,-107,-106,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'RETURN':([0,1,6,8,15,21,25,26,43,44,55,105,107,115,133,161,165,183,185,186,196,202,203,216,220,230,253,276,304,306,307,327,328,329,336,],[9,9,-6,-8,-5,9,-4,-2,-7,-3,9,-143,9,-122,-24,9,-9,9,9,-144,-18,-188,-123,9,9,9,9,9,9,9,9,9,9,9,9,]),'REF':([29,58,101,112,131,170,204,245,292,305,],[-17,-15,170,170,170,170,-16,170,170,170,]),'LBRACKET':([2,4,11,12,14,17,22,28,29,40,51,62,63,64,65,68,73,74,76,77,78,79,80,82,84,86,88,90,91,93,95,103,125,157,163,167,171,199,207,221,239,251,256,303,314,],[-61,-51,-53,-167,-52,-54,-55,-166,-17,114,-56,-73,-61,-68,-51,-69,-70,-62,-76,-79,-55,158,-75,-74,-65,-66,-71,-63,-67,-64,-72,-51,-168,-61,-178,223,226,-169,-80,-179,-57,-77,-51,-60,-78,]),'LT':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,137,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'BY':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,267,268,287,303,313,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,299,-160,-83,-60,-84,-78,]),'ASC':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[27,27,-6,-8,27,27,-5,27,27,-4,-2,-7,-3,27,-133,27,27,27,27,-117,27,27,-116,27,27,-143,27,27,-122,-135,-138,-136,-139,-134,-137,-24,-98,27,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,27,-113,-111,-112,27,-108,-107,-106,27,27,27,-9,27,27,-144,27,-18,27,-188,-123,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'FOR':([21,],[109,]),'GEQ':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,140,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'LOC':([29,166,168,169,172,173,174,175,176,177,178,179,180,181,225,281,294,295,296,318,326,],[-17,-37,-28,-34,-33,-35,-29,-32,-30,-31,-38,-44,-43,-36,-42,310,-39,-45,-40,-46,333,]),'THEN':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,96,97,125,147,157,159,163,199,207,208,211,212,213,221,239,251,255,284,287,303,312,313,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,161,-85,-168,210,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,161,210,-83,-60,210,-84,-78,]),'ID':([0,1,5,6,7,8,9,10,15,18,19,21,25,26,29,38,43,44,49,52,54,55,58,61,69,70,75,83,94,98,101,104,105,107,109,112,114,115,116,117,118,119,121,122,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,164,165,170,183,185,186,194,195,196,200,201,202,203,204,210,216,219,220,223,224,227,228,230,231,232,234,238,240,245,246,247,252,253,272,276,280,285,290,291,292,293,299,301,304,305,306,307,327,328,329,336,],[29,29,29,-6,29,-8,29,29,-5,29,29,29,-4,-2,-17,29,-7,-3,29,-133,29,29,-15,29,29,-117,29,29,-116,29,29,29,-143,29,29,29,29,-122,-135,-138,-136,-139,-134,-137,29,29,29,-24,-98,29,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,29,-113,-111,-112,29,-108,-107,-106,29,29,29,29,-9,29,29,29,-144,29,29,-18,29,29,-188,-123,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RETURNS':([243,279,],[277,277,]),'ELSE':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,105,115,125,157,159,160,163,186,199,203,207,208,209,211,212,213,220,221,239,248,250,251,287,289,303,311,313,314,330,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-143,-122,-168,-121,-115,216,-178,-144,-169,-123,-80,-91,246,-110,-105,-104,-142,-179,-57,246,-86,-77,-83,216,-60,-88,-84,-78,-89,]),'LOWER':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[32,32,-6,-8,32,32,-5,32,32,-4,-2,-7,-3,32,-133,32,32,32,32,-117,32,32,-116,32,32,-143,32,32,-122,-135,-138,-136,-139,-134,-137,-24,-98,32,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,32,-113,-111,-112,32,-108,-107,-106,32,32,32,-9,32,32,-144,32,-18,32,-188,-123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'EQ':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,145,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'CHARS':([29,58,101,112,131,170,204,245,292,305,],[-17,-15,171,171,171,171,-16,171,171,171,]),'EQUALS':([2,4,11,12,14,17,22,28,29,45,46,47,48,50,51,53,58,59,65,103,112,125,163,166,168,169,172,173,174,175,176,177,178,179,180,181,182,191,193,199,204,221,225,239,294,295,296,303,318,],[52,-51,-53,-167,-52,-54,-55,-166,-17,116,117,118,119,121,-56,122,-15,131,-51,-51,194,-168,-178,-37,-28,-34,-33,-35,-29,-32,-30,-31,-38,-44,-43,-36,228,231,234,-169,-16,-179,-42,-57,-39,-45,-40,-60,-46,]),'PRINT':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[34,34,-6,-8,34,34,-5,34,34,-4,-2,-7,-3,34,-133,34,34,34,34,-117,34,34,-116,34,34,-143,34,34,-122,-135,-138,-136,-139,-134,-137,-24,-98,34,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,34,-113,-111,-112,34,-108,-107,-106,34,34,34,-9,34,34,-144,34,-18,34,-188,-123,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'RPAREN':([11,12,14,17,28,29,51,54,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,98,123,124,125,126,134,157,159,162,163,166,168,169,172,173,174,175,176,177,178,179,180,181,199,201,207,208,211,212,213,221,225,239,241,242,244,251,262,264,281,282,287,290,294,295,296,303,309,310,313,314,316,318,319,326,333,],[-53,-167,-52,-54,-166,-17,-56,125,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,163,199,-170,-168,-172,207,-121,-115,221,-178,-37,-28,-34,-33,-35,-29,-32,-30,-31,-38,-44,-43,-36,-169,243,-80,-91,-110,-105,-104,-179,-42,-57,-171,-193,279,-77,294,296,-196,-195,-83,125,-39,-45,-40,-60,-194,-197,-84,-78,-172,-46,-41,332,337,]),'READ':([0,1,6,8,9,10,15,19,21,25,26,43,44,49,52,54,55,61,69,70,75,83,94,98,104,105,107,114,115,116,117,118,119,121,122,133,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,161,165,183,185,186,194,196,200,202,203,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[35,35,-6,-8,35,35,-5,35,35,-4,-2,-7,-3,35,-133,35,35,35,35,-117,35,35,-116,35,35,-143,35,35,-122,-135,-138,-136,-139,-134,-137,-24,-98,35,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,35,-113,-111,-112,35,-108,-107,-106,35,35,35,-9,35,35,-144,35,-18,35,-188,-123,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ICONST':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,226,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[88,88,88,88,-133,88,88,88,-117,88,-116,88,88,88,-135,-138,-136,-139,-134,-137,-98,88,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,88,-113,-111,-112,88,-108,-107,-106,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'END':([6,8,15,25,26,43,44,115,133,165,196,202,203,304,327,328,336,],[-6,-8,-5,-4,-2,-7,-3,-122,-24,-9,-18,-188,-123,325,334,335,338,]),'DIVIDE':([2,4,11,12,14,17,22,28,29,51,62,63,64,65,67,68,71,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,103,125,157,159,163,199,207,211,212,213,221,239,251,256,303,314,],[53,-51,-53,-167,-52,-54,-55,-166,-17,-56,-73,-118,-68,-51,-109,-69,151,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-51,-168,-121,-115,-178,-169,-80,-110,151,151,-179,-57,-77,-51,-60,-78,]),'SYN':([0,1,6,8,15,25,26,43,44,115,133,165,196,202,203,276,304,306,307,327,328,329,336,],[38,38,-6,-8,-5,-4,-2,-7,-3,-122,-24,-9,-18,-188,-123,38,38,38,38,38,38,38,38,]),'GT':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,135,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'ELSIF':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,105,115,125,157,159,160,163,186,199,203,207,208,209,211,212,213,220,221,239,248,250,251,287,289,303,311,313,314,330,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-143,-122,-168,-121,-115,219,-178,-144,-169,-123,-80,-91,247,-110,-105,-104,-142,-179,-57,285,-86,-77,-83,219,-60,-88,-84,-78,-89,]),'TO':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,267,268,287,298,300,303,313,314,321,322,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,301,-160,-83,301,301,-60,-84,-78,301,-161,]),'LEQ':([11,12,14,17,28,29,51,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,125,157,159,163,199,207,208,211,212,213,221,239,251,256,303,314,],[-53,-167,-52,-54,-166,-17,-56,-73,-118,-68,-51,138,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,-168,-121,-115,-178,-169,-80,-91,-110,-105,-104,-179,-57,-77,-51,-60,-78,]),'COMMA':([11,12,14,17,28,29,51,57,58,59,60,62,63,64,65,66,67,68,71,72,73,74,76,77,78,80,82,84,85,86,88,89,90,91,92,93,95,99,100,101,111,112,113,123,124,125,126,157,159,162,163,166,168,169,172,173,174,175,176,177,178,179,180,181,182,197,198,199,204,205,206,207,208,211,212,213,214,215,221,222,225,229,235,236,237,239,241,242,244,245,251,257,258,259,260,265,273,274,281,282,287,294,295,296,303,309,310,313,314,316,317,318,319,],[-53,-167,-52,-54,-166,-17,-56,-25,-15,130,132,-73,-118,-68,-51,-81,-109,-69,-103,-90,-70,-62,-76,-120,-55,-75,-74,-65,-82,-66,-71,-114,-63,-67,-119,-64,-72,-10,164,130,-19,130,195,200,-170,-168,-172,-121,-115,200,-178,-37,-28,-34,-33,-35,-29,-32,-30,-31,-38,-44,-43,-36,-12,238,-58,-169,-16,-27,-26,-80,-91,-110,-105,-104,238,-58,-179,-11,-42,-13,-23,-22,-20,-57,-171,-193,280,130,-77,-49,-47,-50,291,-14,-21,-59,-196,-195,-83,-39,-45,-40,-60,-194,-197,-84,-78,-172,-48,-46,-41,]),'RESULT':([0,1,6,8,15,21,25,26,43,44,55,105,107,115,133,161,165,183,185,186,196,202,203,216,220,230,253,276,304,306,307,327,328,329,336,],[19,19,-6,-8,-5,19,-4,-2,-7,-3,19,-143,19,-122,-24,19,-9,19,19,-144,-18,-188,-123,19,19,19,19,19,19,19,19,19,19,19,19,]),'MINUS':([2,4,9,10,11,12,14,17,19,22,28,29,49,51,52,54,61,62,63,64,65,67,68,69,71,72,73,74,76,77,78,80,82,84,86,88,89,90,91,92,93,95,98,103,104,114,116,117,118,119,121,122,125,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,163,194,199,200,207,208,210,211,212,213,219,221,223,224,227,228,231,234,238,239,240,246,247,251,252,256,285,290,291,293,299,301,303,314,],[45,-51,94,94,-53,-167,-52,-54,94,-55,-166,-17,94,-56,-133,94,94,-73,-118,-68,-51,-109,-69,94,-103,154,-70,-62,-76,-120,-55,-75,-74,-65,-66,-71,-114,-63,-67,-119,-64,-72,94,-51,94,94,-135,-138,-136,-139,-134,-137,-168,-98,94,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,94,-113,-111,-112,94,-108,-107,-106,94,-121,94,-115,-178,94,-169,94,-80,154,94,-110,-105,-104,94,-179,94,94,94,94,94,94,94,-57,94,94,94,-77,94,-51,94,94,94,94,94,94,-60,-78,]),'INT':([29,58,101,112,131,170,204,223,232,245,272,291,292,305,],[-17,-15,181,181,181,181,-16,181,181,181,181,181,181,181,]),'$end':([1,6,8,15,24,25,26,43,44,115,133,165,196,202,203,],[-1,-6,-8,-5,0,-4,-2,-7,-3,-122,-24,-9,-18,-188,-123,]),'FALSE':([9,10,19,49,52,54,61,69,70,83,94,98,104,114,116,117,118,119,121,122,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[95,95,95,95,-133,95,95,95,-117,95,-116,95,95,95,-135,-138,-136,-139,-134,-137,-98,95,-100,-101,-94,-99,-95,-93,-92,-97,-96,-102,95,-113,-111,-112,95,-108,-107,-106,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formal_parameter':([201,280,],[242,309,]),'action_statement':([0,1,21,107,161,185,216,220,230,253,276,304,306,307,327,328,329,336,],[8,8,105,186,105,105,105,186,186,186,8,8,8,8,8,8,8,8,]),'character_literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'primitive_value':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'operand0':([9,10,19,49,54,61,69,98,104,114,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'declaration':([18,164,],[99,222,]),'discrete_mode':([101,112,131,170,223,232,245,272,291,292,305,],[174,174,174,174,257,271,174,271,257,174,174,]),'parameter':([54,98,200,290,],[124,124,241,124,]),'else_clause':([160,289,],[218,315,]),'index_mode':([223,291,],[258,317,]),'synonym_list':([38,],[113,]),'builtin_call':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'dereferenced_reference':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'referenced_location':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'reference_mode':([101,112,131,170,245,292,305,],[176,176,176,176,176,176,176,]),'operand1':([9,10,19,49,54,61,69,98,104,114,136,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[72,72,72,72,72,72,72,72,72,72,208,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'array_primitive_value':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'else_expression':([209,248,],[249,286,]),'expression_list':([114,158,],[197,214,]),'step_enumeration':([109,],[190,]),'if_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'program':([0,],[24,]),'result':([9,19,],[81,102,]),'declaration_statement':([0,1,276,304,306,307,327,328,329,336,],[25,25,25,25,25,25,25,25,25,25,]),'statement':([0,1,276,304,306,307,327,328,329,336,],[26,44,26,44,26,26,44,44,26,44,]),'control_part':([21,],[106,]),'then_expression':([147,284,312,],[209,311,330,]),'action_statement_list':([21,161,185,216,],[107,220,230,253,]),'boolean_expression':([10,69,104,219,247,285,],[96,147,184,255,284,312,]),'while_control':([21,110,],[108,192,]),'procedure_call':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'range_enumeration':([109,],[189,]),'synonym_definition':([38,195,],[111,237,]),'conditional_expression':([9,10,19,49,54,61,69,98,104,114,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'return_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'integer_literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,226,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,263,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'identifier_list':([7,18,38,132,164,195,201,280,],[59,101,112,59,101,112,245,245,]),'expression':([9,10,19,49,54,61,69,98,104,114,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[87,97,87,120,126,134,97,126,97,198,215,235,126,250,97,261,261,261,265,268,235,274,275,283,97,288,97,316,261,319,322,324,]),'result_spec':([243,279,],[278,308,]),'array_slice':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'boolean_literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'for_control':([21,],[110,]),'string_mode':([101,112,131,170,245,292,305,],[180,180,180,180,180,180,180,]),'do_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'end_value':([267,298,300,321,],[297,320,323,331,]),'iteration':([109,],[188,]),'location':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[2,2,63,63,63,2,63,63,2,63,63,157,63,63,63,2,63,63,63,63,63,63,2,2,2,63,63,63,2,63,2,63,63,63,63,2,63,63,63,63,63,63,63,2,2,63,63,63,63,63,63,2,2,2,2,2,2,2,]),'formal_parameter_list':([201,],[244,]),'identifier':([0,1,5,7,9,10,18,19,21,38,49,54,55,61,69,75,83,98,101,104,107,109,112,114,130,131,132,136,148,152,156,158,161,164,170,183,185,194,195,200,201,210,216,219,220,223,224,227,228,230,231,232,234,238,240,245,246,247,252,253,272,276,280,285,290,291,292,293,299,301,304,305,306,307,327,328,329,336,],[4,4,56,58,65,65,58,65,103,58,65,65,65,65,65,65,65,65,168,65,103,191,168,65,204,168,58,65,65,65,65,65,103,58,168,65,103,65,58,65,58,65,103,65,103,256,65,65,65,103,65,269,65,65,65,168,65,65,65,103,269,4,58,65,65,256,168,65,65,65,4,168,4,4,4,4,4,4,]),'array_element':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'parameter_list':([54,98,290,],[123,162,123,]),'newmode_statement':([0,1,276,304,306,307,327,328,329,336,],[6,6,6,6,6,6,6,6,6,6,]),'membership_operator':([66,],[142,]),'operand3':([9,10,19,49,54,61,69,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[67,67,67,67,67,67,67,67,67,67,67,211,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'mode_definition':([7,132,],[57,206,]),'discrete_range_mode':([101,112,131,170,223,232,245,272,291,292,305,],[173,173,173,173,173,270,173,302,173,173,173,]),'empty_literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'elsif_expression':([209,],[248,]),'character_string_literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'operand2':([9,10,19,49,54,61,69,98,104,114,136,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[71,71,71,71,71,71,71,71,71,71,71,212,213,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'synonym_statement':([0,1,276,304,306,307,327,328,329,336,],[15,15,15,15,15,15,15,15,15,15,]),'builtin_name':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'composite_mode':([101,112,131,170,245,292,305,],[177,177,177,177,177,177,177,]),'start_value':([231,],[267,]),'literal':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'exit_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_mode':([101,112,131,170,245,292,305,],[179,179,179,179,179,179,179,]),'call_action':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[22,22,78,78,78,22,78,78,22,78,78,78,78,78,78,22,78,78,78,78,78,78,22,22,22,78,78,78,22,78,22,78,78,78,78,22,78,78,78,78,78,78,78,22,22,78,78,78,78,78,78,22,22,22,22,22,22,22,]),'relational_operator':([66,],[143,]),'string_concatenation_operator':([72,208,],[152,152,]),'literal_range':([223,224,227,290,291,],[259,262,264,262,259,]),'arithmetic_additive_operator':([72,208,],[156,156,]),'mode':([101,112,131,170,245,292,305,],[182,193,205,225,281,318,326,]),'statement_list':([0,276,306,307,329,],[1,304,327,328,336,]),'monadic_operator':([9,10,19,49,54,61,69,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'parenthesized_expression':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'step_value':([267,],[298,]),'character_mode':([101,112,131,170,223,232,245,272,291,292,305,],[169,169,169,169,169,169,169,169,169,169,169,]),'list_index_mode':([223,],[260,]),'parameter_spec':([245,],[282,]),'constant_expression':([194,234,],[236,273,]),'operator1':([66,],[136,]),'result_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[42,42,42,129,42,42,129,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'integer_mode':([101,112,131,170,223,232,245,272,291,292,305,],[175,175,175,175,175,175,175,175,175,175,175,]),'assigning_operator':([2,],[49,]),'initialization':([182,],[229,]),'bracketed_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'arithmetic_multiplicative_operator':([71,212,213,],[148,148,148,]),'declaration_list':([18,],[100,]),'value_array_element':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'procedure_statement':([0,1,276,304,306,307,327,328,329,336,],[43,43,43,43,43,43,43,43,43,43,]),'operand4':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[89,89,89,89,89,89,89,159,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'assignment_action':([0,1,21,55,107,161,183,185,216,220,230,253,276,304,306,307,327,328,329,336,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'array_location':([0,1,9,10,19,21,49,54,55,61,69,75,83,98,104,107,114,136,148,152,156,158,161,183,185,194,200,210,216,219,220,223,224,227,228,230,231,234,238,240,246,247,252,253,276,285,290,291,293,299,301,304,306,307,327,328,329,336,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'procedure_definition':([55,],[128,]),'then_clause':([96,255,],[160,289,]),'value_array_slice':([9,10,19,49,54,61,69,83,98,104,114,136,148,152,156,158,194,200,210,219,223,224,227,228,231,234,238,240,246,247,252,285,290,291,293,299,301,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'newmode_list':([7,],[60,]),'boolean_mode':([101,112,131,170,223,232,245,272,291,292,305,],[172,172,172,172,172,172,172,172,172,172,172,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',297),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',304),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',305),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',314),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',321),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',328),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',329),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',330),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',339),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',340),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',341),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',348),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',370),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',377),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',384),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',391),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',404),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',430),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',437),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',444),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',463),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',464),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',475),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',476),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',488),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',489),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',496),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',503),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',504),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',505),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',516),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',517),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',524),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',531),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',532),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',544),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',545),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',551),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',552),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',563),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',564),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',571),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',572),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',573),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',580),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',588),
  ('action -> bracketed_action','action',1,'p_action','parser.py',599),
  ('action -> assignment_action','action',1,'p_action','parser.py',600),
  ('action -> call_action','action',1,'p_action','parser.py',601),
  ('action -> exit_action','action',1,'p_action','parser.py',602),
  ('action -> return_action','action',1,'p_action','parser.py',603),
  ('action -> result_action','action',1,'p_action','parser.py',604),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',611),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',612),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',619),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',631),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',632),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',641),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',652),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',658),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',659),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',667),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',668),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',669),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',681),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',682),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',692),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',693),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',694),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',704),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',711),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',712),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',720),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',721),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',722),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',723),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',738),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',744),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',750),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','parser.py',756),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','parser.py',757),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',775),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',776),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',783),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',784),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',793),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',794),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',803),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',809),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',816),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',817),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',826),
  ('result -> expression','result',1,'p_result','parser.py',833),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',839),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',840),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',854),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',855),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',856),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',857),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',858),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',864),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',871),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',872),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',873),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',874),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',889),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',890),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',899),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',906),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',907),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',917),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',918),
]
