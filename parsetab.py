
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E9F3E767F71325411FBEF8C29B744520'
    
_lr_action_items = {'TRUE':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[45,45,45,45,45,-117,-116,45,45,45,45,-133,45,45,-92,-93,-95,-99,45,-101,-96,-100,-97,-102,-98,-94,45,-111,-112,-113,45,45,-107,-106,-108,45,45,-139,-136,-135,-134,-138,-137,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'CCONST':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[46,46,46,46,46,-117,-116,46,46,46,46,-133,46,46,-92,-93,-95,-99,46,-101,-96,-100,-97,-102,-98,-94,46,-111,-112,-113,46,46,-107,-106,-108,46,46,-139,-136,-135,-134,-138,-137,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'OR':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,119,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'GEQ':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,120,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'RESULT':([0,2,10,15,16,19,30,36,38,81,84,94,96,113,137,145,146,152,172,178,185,205,209,213,238,239,248,300,319,321,322,326,327,329,332,],[14,-6,14,14,-4,-5,-7,-8,-2,14,-143,-3,-122,14,14,-144,14,14,-9,-18,-24,14,14,14,-123,-188,14,14,14,14,14,14,14,14,14,]),'ID':([0,2,3,4,7,10,13,14,15,16,19,23,30,31,36,38,42,48,59,61,65,67,74,81,83,84,85,88,89,94,95,96,99,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,156,162,172,173,178,179,181,184,185,186,187,188,189,190,191,193,203,205,206,209,213,214,215,218,219,220,222,224,226,229,232,234,237,238,239,242,243,246,248,256,272,278,282,285,288,289,290,291,298,300,319,321,322,323,326,327,329,332,],[3,-6,-17,3,3,3,3,3,3,-4,-5,3,-7,3,-8,-2,3,3,3,-117,3,-116,3,3,3,-143,3,3,-15,-3,3,-122,3,3,-133,3,3,3,-92,-93,-95,-99,3,-101,-96,-100,-97,-102,-98,-94,3,-111,-112,-113,3,3,3,-107,-106,-108,3,-144,3,3,3,3,-9,3,-18,3,3,3,-24,3,-139,-136,-135,-134,-138,-137,3,3,3,3,3,3,3,3,-16,3,3,3,3,3,3,3,3,-123,-188,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'MODULO':([1,3,17,25,29,33,34,40,43,45,46,47,49,51,52,54,56,57,58,60,62,63,64,66,70,71,73,75,76,77,78,79,86,112,116,135,175,197,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,-52,109,-54,-51,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,-55,133,-119,-68,-66,-64,-118,-114,-69,-51,-62,-70,-109,-51,-56,-115,-121,-178,-168,-110,133,133,-80,-179,-57,-169,-77,-51,-60,-78,]),'REF':([3,88,89,99,156,184,219,272,290,323,],[-17,156,-15,156,156,156,-16,156,156,156,]),'RETURNS':([274,299,],[302,302,]),'EXIT':([0,2,10,15,16,19,30,36,38,81,84,94,96,113,137,145,146,152,172,178,185,205,209,213,238,239,248,300,319,321,322,326,327,329,332,],[4,-6,4,4,-4,-5,-7,-8,-2,4,-143,-3,-122,4,4,-144,4,4,-9,-18,-24,4,4,4,-123,-188,4,4,4,4,4,4,4,4,4,]),'COMMA':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,88,89,90,91,97,98,99,101,102,103,112,116,135,154,155,157,158,160,161,163,164,165,166,168,169,170,171,174,175,176,177,182,183,197,198,199,200,201,204,210,211,212,217,219,221,225,227,228,230,231,233,235,236,240,241,257,258,260,261,263,267,268,269,271,272,273,277,292,293,294,295,296,297,303,306,313,314,315,316,317,318,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,162,-15,173,-10,179,-19,162,-25,162,186,-56,-115,-121,-38,-30,-31,-35,-32,-33,-12,-28,-34,-44,-37,-29,-43,-36,-172,-178,226,-170,232,-58,-168,226,-91,232,-58,-110,-105,-104,-80,-42,-16,-13,-11,-179,-20,-23,-22,-57,-27,-26,-169,-77,-47,-50,-49,289,-14,-171,-21,-59,-193,162,298,-83,-39,-45,-40,-60,-195,-196,-78,-84,-41,-48,-46,-172,-197,-194,]),'READ':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[6,-6,6,6,6,6,-4,-5,-7,-8,-2,6,6,6,-117,6,-116,6,6,6,-143,-3,6,-122,6,-133,6,6,6,-92,-93,-95,-99,6,-101,-96,-100,-97,-102,-98,-94,6,-111,-112,-113,6,6,6,-107,-106,-108,6,-144,6,6,-9,-18,6,-24,-139,-136,-135,-134,-138,-137,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-123,-188,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'AND':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,128,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'FALSE':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[57,57,57,57,57,-117,-116,57,57,57,57,-133,57,57,-92,-93,-95,-99,57,-101,-96,-100,-97,-102,-98,-94,57,-111,-112,-113,57,57,-107,-106,-108,57,57,-139,-136,-135,-134,-138,-137,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'PLUS':([1,3,17,25,29,33,34,40,43,45,46,47,49,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,86,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,-52,108,-54,-51,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,140,-114,-69,-51,-62,-70,-109,-51,-56,-115,-121,-178,-168,140,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'ICONST':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,223,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[58,58,58,58,58,-117,-116,58,58,58,58,-133,58,58,-92,-93,-95,-99,58,-101,-96,-100,-97,-102,-98,-94,58,-111,-112,-113,58,58,-107,-106,-108,58,58,-139,-136,-135,-134,-138,-137,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'IF':([0,2,7,10,14,15,16,19,30,36,38,42,59,74,81,83,84,94,95,96,100,104,110,113,114,129,137,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[7,-6,59,7,59,7,-4,-5,-7,-8,-2,59,59,59,7,59,-143,-3,59,-122,59,-133,59,7,59,59,7,-144,7,7,-9,-18,59,-24,-139,-136,-135,-134,-138,-137,59,7,59,7,7,59,59,59,59,59,59,59,59,59,-123,-188,59,59,59,7,59,59,59,59,59,59,7,7,7,7,7,7,7,7,]),'DO':([0,2,10,15,16,19,30,36,38,81,84,94,96,113,137,145,146,152,172,178,185,205,209,213,238,239,248,300,319,321,322,326,327,329,332,],[10,-6,10,10,-4,-5,-7,-8,-2,10,-143,-3,-122,10,10,-144,10,10,-9,-18,-24,10,10,10,-123,-188,10,10,10,10,10,10,10,10,10,]),'TO':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,254,255,277,283,284,295,303,306,309,312,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-160,282,-83,282,282,-60,-78,-84,282,-161,]),'LPAREN':([3,6,7,9,11,12,14,20,21,27,32,37,40,42,48,59,61,67,74,76,83,86,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,154,158,160,161,164,165,168,169,171,181,187,188,189,190,191,193,194,203,206,215,218,220,222,224,226,229,232,234,242,243,246,252,253,260,262,278,282,285,287,288,289,291,292,294,302,],[-17,-186,74,-183,-181,-187,74,95,-184,-185,-182,-180,114,74,74,74,-117,-116,74,114,74,114,74,74,-133,74,74,-92,-93,-95,-99,74,-101,-96,-100,-97,-102,-98,-94,74,-111,-112,-113,74,74,-107,-106,-108,74,-38,-35,-32,-33,222,-34,-37,224,-36,74,-139,-136,-135,-134,-138,-137,237,74,74,74,74,74,74,74,74,74,74,74,74,74,74,222,224,224,291,74,74,74,224,74,74,74,-39,-40,323,]),'NOT':([7,14,42,59,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[61,61,61,61,61,61,61,61,-133,61,61,-92,-93,-95,-99,61,-101,-96,-100,-97,-102,-98,-94,61,-111,-112,-113,61,61,-107,-106,-108,61,61,-139,-136,-135,-134,-138,-137,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'BY':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,254,255,277,295,303,306,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-160,285,-83,-60,-78,-84,]),'DCL':([0,2,15,16,19,30,36,38,94,96,172,178,185,238,239,300,319,321,322,326,327,329,332,],[13,-6,13,-4,-5,-7,-8,-2,-3,-122,-9,-18,-24,-123,-188,13,13,13,13,13,13,13,13,]),'SEMI':([1,3,5,8,17,18,22,24,25,28,29,34,39,41,42,43,44,45,46,47,49,50,51,52,54,55,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,80,82,87,90,91,92,93,97,98,101,103,112,115,116,135,144,147,148,149,150,153,154,155,157,158,160,161,163,164,165,166,168,169,170,171,175,192,195,196,197,199,204,208,210,211,212,217,221,225,227,228,230,231,233,235,236,240,241,250,251,253,263,268,274,277,286,287,292,293,294,295,299,301,303,306,308,310,311,315,320,325,328,331,333,335,336,337,],[-166,-17,-127,-124,-167,-129,96,-131,-126,-125,-52,-54,-130,-128,-174,-53,-173,-73,-74,-75,-67,-81,-63,-120,-65,-85,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-152,146,-150,172,-10,-177,-176,178,-19,-25,185,-56,-175,-115,-121,-148,-165,-154,-153,-155,-151,-38,-30,-31,-35,-32,-33,-12,-28,-34,-44,-37,-29,-43,-36,-178,-132,238,239,-168,-91,-110,-140,-105,-104,-80,-42,-13,-11,-179,-20,-23,-22,-57,-27,-26,-169,-77,-141,-149,-163,-14,-21,300,-83,-156,-164,-39,-45,-40,-60,319,322,-78,-84,-162,-157,-158,-46,327,-159,-189,-190,-191,-198,-192,-199,]),'CHARS':([3,88,89,99,156,184,219,272,290,323,],[-17,167,-15,167,167,167,-16,167,167,167,]),'EQ':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,123,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'ARROW':([1,3,7,14,17,25,29,33,34,40,42,43,48,59,60,61,67,71,74,76,83,86,95,100,104,110,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,138,139,140,141,142,175,181,187,188,189,190,191,193,197,203,206,215,218,220,222,224,226,227,229,232,233,234,240,242,243,246,262,278,282,285,288,289,291,295,],[-166,-17,65,65,-167,-55,-52,112,-54,-51,65,-53,65,65,-55,-117,-116,112,65,-51,65,-51,65,65,-133,65,-56,65,-92,-93,-95,-99,65,-101,-96,-100,-97,-102,-98,-94,65,-111,-112,-113,65,112,65,-107,-106,-108,65,-178,65,-139,-136,-135,-134,-138,-137,-168,65,65,65,65,65,65,65,65,-179,65,65,-57,65,-169,65,65,65,-51,65,65,65,65,65,65,-60,]),'DOWN':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,112,116,135,151,175,197,199,204,210,211,212,227,233,240,241,254,255,277,283,295,303,306,312,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,216,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-160,284,-83,309,-60,-78,-84,-161,]),'EQUALS':([1,3,17,25,29,33,34,40,43,76,86,89,99,102,105,106,107,108,109,111,112,151,154,155,157,158,160,161,163,164,165,166,168,169,170,171,175,180,197,217,219,227,233,240,292,293,294,295,315,],[-166,-17,-167,-55,-52,104,-54,-51,-53,-51,-51,-15,181,184,187,188,189,190,191,193,-56,215,-38,-30,-31,-35,-32,-33,220,-28,-34,-44,-37,-29,-43,-36,-178,229,-168,-42,-16,-179,-57,-169,-39,-45,-40,-60,-46,]),'ELSIF':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,84,96,112,116,135,136,145,175,197,199,202,204,209,210,211,212,227,233,238,240,241,245,247,277,281,295,303,304,306,324,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-143,-122,-56,-115,-121,206,-144,-178,-168,-91,243,-110,-142,-105,-104,-80,-179,-57,-123,-169,-77,278,-86,-83,206,-60,-78,-88,-84,-89,]),'RPAREN':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,95,112,114,116,135,143,154,155,157,158,160,161,164,165,166,168,169,170,171,174,175,176,177,197,198,199,204,210,211,212,217,227,233,237,240,241,264,266,267,271,273,277,291,292,293,294,295,296,297,303,306,313,315,316,317,318,330,334,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,175,-56,197,-115,-121,212,-38,-30,-31,-35,-32,-33,-28,-34,-44,-37,-29,-43,-36,-172,-178,227,-170,-168,240,-91,-110,-105,-104,-80,-42,-179,-57,274,-169,-77,292,294,-171,-193,299,-83,197,-39,-45,-40,-60,-195,-196,-78,-84,-41,-46,-172,-197,-194,335,337,]),'PROC':([113,],[194,]),'MINUS':([1,3,7,14,17,25,29,33,34,40,42,43,45,46,47,49,51,52,54,56,57,58,59,60,62,63,64,66,70,71,72,73,74,75,76,77,78,79,83,86,95,100,104,110,112,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,138,139,140,141,142,175,181,187,188,189,190,191,193,197,199,203,204,206,210,211,212,215,218,220,222,224,226,227,229,232,233,234,240,241,242,243,246,262,278,282,285,288,289,291,295,303,],[-166,-17,67,67,-167,-55,-52,107,-54,-51,67,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,67,-55,-103,-119,-68,-66,-64,-118,139,-114,67,-69,-51,-62,-70,-109,67,-51,67,67,-133,67,-56,67,-115,-92,-93,-95,-99,67,-101,-96,-100,-97,-102,-98,-94,67,-111,-112,-113,67,-121,67,-107,-106,-108,67,-178,67,-139,-136,-135,-134,-138,-137,-168,139,67,-110,67,-105,-104,-80,67,67,67,67,67,67,-179,67,67,-57,67,-169,-77,67,67,67,-51,67,67,67,67,67,67,-60,-78,]),'BOOL':([3,88,89,99,156,184,214,218,219,256,272,289,290,323,],[-17,168,-15,168,168,168,168,168,-16,168,168,168,168,168,]),'SYN':([0,2,15,16,19,30,36,38,94,96,172,178,185,238,239,300,319,321,322,326,327,329,332,],[23,-6,23,-4,-5,-7,-8,-2,-3,-122,-9,-18,-24,-123,-188,23,23,23,23,23,23,23,23,]),'LBRACKET':([1,3,17,25,26,29,33,34,40,43,45,46,47,49,51,52,53,54,56,57,58,60,64,66,70,71,75,76,77,78,86,112,135,159,167,175,197,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,100,-52,-61,-54,-51,-53,-73,-74,-75,-67,-63,-79,129,-65,-76,-72,-71,-55,-68,-66,-64,-61,-69,-51,-62,-70,-51,-56,-61,218,223,-178,-168,-80,-179,-57,-169,-77,-51,-60,-78,]),'CHAR':([3,88,89,99,156,184,214,218,219,256,272,289,290,323,],[-17,154,-15,154,154,154,154,154,-16,154,154,154,154,154,]),'PRINT':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[12,-6,12,12,12,12,-4,-5,-7,-8,-2,12,12,12,-117,12,-116,12,12,12,-143,-3,12,-122,12,-133,12,12,12,-92,-93,-95,-99,12,-101,-96,-100,-97,-102,-98,-94,12,-111,-112,-113,12,12,12,-107,-106,-108,12,-144,12,12,-9,-18,12,-24,-139,-136,-135,-134,-138,-137,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-123,-188,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SCONST':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[56,56,56,56,56,-117,-116,56,56,56,56,-133,56,56,-92,-93,-95,-99,56,-101,-96,-100,-97,-102,-98,-94,56,-111,-112,-113,56,56,-107,-106,-108,56,56,-139,-136,-135,-134,-138,-137,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'ASC':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[11,-6,11,11,11,11,-4,-5,-7,-8,-2,11,11,11,-117,11,-116,11,11,11,-143,-3,11,-122,11,-133,11,11,11,-92,-93,-95,-99,11,-101,-96,-100,-97,-102,-98,-94,11,-111,-112,-113,11,11,11,-107,-106,-108,11,-144,11,11,-9,-18,11,-24,-139,-136,-135,-134,-138,-137,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-123,-188,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LENGTH':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[27,-6,27,27,27,27,-4,-5,-7,-8,-2,27,27,27,-117,27,-116,27,27,27,-143,-3,27,-122,27,-133,27,27,27,-92,-93,-95,-99,27,-101,-96,-100,-97,-102,-98,-94,27,-111,-112,-113,27,27,27,-107,-106,-108,27,-144,27,27,-9,-18,27,-24,-139,-136,-135,-134,-138,-137,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-123,-188,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'DIVIDE':([1,3,17,25,29,33,34,40,43,45,46,47,49,51,52,54,56,57,58,60,62,63,64,66,70,71,73,75,76,77,78,79,86,112,116,135,175,197,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,-52,111,-54,-51,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,-55,132,-119,-68,-66,-64,-118,-114,-69,-51,-62,-70,-109,-51,-56,-115,-121,-178,-168,-110,132,132,-80,-179,-57,-169,-77,-51,-60,-78,]),'LT':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,124,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'NE':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,125,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'COLON':([1,3,17,29,34,40,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,86,112,116,135,175,183,197,199,201,204,210,211,212,227,233,240,241,259,262,277,295,303,306,316,],[-166,-17,-167,-52,-54,113,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,152,-56,-115,-121,-178,234,-168,-91,242,-110,-105,-104,-80,-179,-57,-169,-77,288,-51,-83,-60,-78,-84,288,]),'IN':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,151,175,197,199,204,210,211,212,216,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,126,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,214,-178,-168,-91,-110,-105,-104,-80,256,-179,-57,-169,-77,-51,-60,-78,]),'WHILE':([1,3,10,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,87,112,116,135,148,149,150,154,158,160,161,165,168,171,175,197,199,204,210,211,212,227,233,240,241,253,277,286,287,292,294,295,303,306,308,310,311,325,],[-166,-17,83,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,83,-56,-115,-121,-154,-153,-155,-38,-35,-32,-33,-34,-37,-36,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-163,-83,-156,-164,-39,-40,-60,-78,-84,-162,-157,-158,-159,]),'TYPE':([0,2,15,16,19,30,36,38,94,96,172,178,185,238,239,300,319,321,322,326,327,329,332,],[31,-6,31,-4,-5,-7,-8,-2,-3,-122,-9,-18,-24,-123,-188,31,31,31,31,31,31,31,31,]),'GT':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,127,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'NUM':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[32,-6,32,32,32,32,-4,-5,-7,-8,-2,32,32,32,-117,32,-116,32,32,32,-143,-3,32,-122,32,-133,32,32,32,-92,-93,-95,-99,32,-101,-96,-100,-97,-102,-98,-94,32,-111,-112,-113,32,32,32,-107,-106,-108,32,-144,32,32,-9,-18,32,-24,-139,-136,-135,-134,-138,-137,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-123,-188,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TIMES':([1,3,17,25,29,33,34,40,43,45,46,47,49,51,52,54,56,57,58,60,62,63,64,66,70,71,73,75,76,77,78,79,86,112,116,135,175,197,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,-52,106,-54,-51,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,-55,131,-119,-68,-66,-64,-118,-114,-69,-51,-62,-70,-109,-51,-56,-115,-121,-178,-168,-110,131,131,-80,-179,-57,-169,-77,-51,-60,-78,]),'RBRACKET':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,112,116,135,154,158,160,161,165,168,171,175,182,183,197,199,200,201,204,210,211,212,227,233,240,241,257,258,260,261,265,269,270,275,277,292,294,295,303,306,313,314,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-38,-35,-32,-33,-34,-37,-36,-178,233,-58,-168,-91,241,-58,-110,-105,-104,-80,-179,-57,-169,-77,-47,-50,-49,290,293,-59,295,303,-83,-39,-40,-60,-78,-84,-41,-48,]),'THEN':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,55,56,57,58,60,62,63,64,66,68,69,70,71,72,73,75,76,77,78,79,112,116,130,135,175,197,199,204,210,211,212,227,233,240,241,249,276,277,295,303,305,306,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-85,-76,-72,-71,-55,-103,-119,-68,-66,137,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,203,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,137,203,-83,-60,-78,203,-84,]),'$end':([2,15,16,19,30,35,36,38,94,96,172,178,185,238,239,],[-6,-1,-4,-5,-7,0,-8,-2,-3,-122,-9,-18,-24,-123,-188,]),'FI':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,84,96,112,116,135,136,145,175,197,199,204,207,209,210,211,212,227,233,238,240,241,244,248,277,279,280,281,295,303,306,307,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-143,-122,-56,-115,-121,208,-144,-178,-168,-91,-110,250,-142,-105,-104,-80,-179,-57,-123,-169,-77,277,-145,-83,306,-87,-146,-60,-78,-84,-147,]),'LOWER':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[21,-6,21,21,21,21,-4,-5,-7,-8,-2,21,21,21,-117,21,-116,21,21,21,-143,-3,21,-122,21,-133,21,21,21,-92,-93,-95,-99,21,-101,-96,-100,-97,-102,-98,-94,21,-111,-112,-113,21,21,21,-107,-106,-108,21,-144,21,21,-9,-18,21,-24,-139,-136,-135,-134,-138,-137,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-123,-188,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'UPPER':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[9,-6,9,9,9,9,-4,-5,-7,-8,-2,9,9,9,-117,9,-116,9,9,9,-143,-3,9,-122,9,-133,9,9,9,-92,-93,-95,-99,9,-101,-96,-100,-97,-102,-98,-94,9,-111,-112,-113,9,9,9,-107,-106,-108,9,-144,9,9,-9,-18,9,-24,-139,-136,-135,-134,-138,-137,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-123,-188,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LEQ':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,122,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,-90,-114,-69,-51,-62,-70,-109,-56,-115,-121,-178,-168,-91,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'ELSE':([1,3,17,29,34,43,45,46,47,49,50,51,52,54,56,57,58,60,62,63,64,66,69,70,71,72,73,75,76,77,78,79,84,96,112,116,135,136,145,175,197,199,202,204,209,210,211,212,227,233,238,240,241,245,247,277,281,295,303,304,306,324,],[-166,-17,-167,-52,-54,-53,-73,-74,-75,-67,-81,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-82,-64,-118,-90,-114,-69,-51,-62,-70,-109,-143,-122,-56,-115,-121,205,-144,-178,-168,-91,246,-110,-142,-105,-104,-80,-179,-57,-123,-169,-77,246,-86,-83,205,-60,-78,-88,-84,-89,]),'ABS':([0,2,7,10,14,15,16,19,30,36,38,42,48,59,61,65,67,74,81,83,84,94,95,96,100,104,110,113,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,137,138,139,140,141,142,145,146,152,172,178,181,185,187,188,189,190,191,193,203,205,206,209,213,215,218,220,222,224,226,229,232,234,238,239,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[37,-6,37,37,37,37,-4,-5,-7,-8,-2,37,37,37,-117,37,-116,37,37,37,-143,-3,37,-122,37,-133,37,37,37,-92,-93,-95,-99,37,-101,-96,-100,-97,-102,-98,-94,37,-111,-112,-113,37,37,37,-107,-106,-108,37,-144,37,37,-9,-18,37,-24,-139,-136,-135,-134,-138,-137,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-123,-188,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NULL':([7,14,42,48,59,61,67,74,83,95,100,104,110,114,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,138,139,140,141,142,181,187,188,189,190,191,193,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[47,47,47,47,47,-117,-116,47,47,47,47,-133,47,47,-92,-93,-95,-99,47,-101,-96,-100,-97,-102,-98,-94,47,-111,-112,-113,47,47,-107,-106,-108,47,47,-139,-136,-135,-134,-138,-137,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'FOR':([10,],[85,]),'END':([2,16,19,30,36,38,94,96,172,178,185,238,239,321,326,329,332,],[-6,-4,-5,-7,-8,-2,-3,-122,-9,-18,-24,-123,-188,328,331,333,336,]),'LAND':([1,3,17,25,29,33,34,40,43,45,46,47,49,51,52,54,56,57,58,60,62,63,64,66,70,71,72,73,75,76,77,78,79,86,112,116,135,175,197,199,204,210,211,212,227,233,240,241,262,295,303,],[-166,-17,-167,-55,-52,105,-54,-51,-53,-73,-74,-75,-67,-63,-120,-65,-76,-72,-71,-55,-103,-119,-68,-66,-64,-118,141,-114,-69,-51,-62,-70,-109,-51,-56,-115,-121,-178,-168,141,-110,-105,-104,-80,-179,-57,-169,-77,-51,-60,-78,]),'ARRAY':([3,88,89,99,156,184,219,272,290,323,],[-17,159,-15,159,159,159,-16,159,159,159,]),'LOC':([3,154,155,157,158,160,161,164,165,166,168,169,170,171,217,292,293,294,297,315,330,],[-17,-38,-30,-31,-35,-32,-33,-28,-34,-44,-37,-29,-43,-36,-42,-39,-45,-40,317,-46,334,]),'RETURN':([0,2,10,15,16,19,30,36,38,81,84,94,96,113,137,145,146,152,172,178,185,205,209,213,238,239,248,300,319,321,322,326,327,329,332,],[42,-6,42,42,-4,-5,-7,-8,-2,42,-143,-3,-122,42,42,-144,42,42,-9,-18,-24,42,42,42,-123,-188,42,42,42,42,42,42,42,42,42,]),'OD':([81,84,96,145,213,238,],[144,-143,-122,-144,251,-123,]),'INT':([3,88,89,99,156,184,214,218,219,256,272,289,290,323,],[-17,171,-15,171,171,171,171,171,-16,171,171,171,171,171,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'monadic_operator':([7,14,42,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'synonym_list':([23,],[97,]),'boolean_literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'list_index_mode':([218,],[261,]),'primitive_value':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'arithmetic_multiplicative_operator':([62,210,211,],[134,134,134,]),'parenthesized_expression':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'expression':([7,14,42,59,74,83,95,100,110,114,129,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[55,92,92,55,143,55,174,183,192,174,201,230,247,55,254,259,263,259,259,174,230,269,270,275,55,280,55,308,312,313,259,316,]),'formal_parameter_list':([237,],[273,]),'assigning_operator':([33,],[110,]),'declaration_list':([13,],[90,]),'index_mode':([218,289,],[257,314,]),'dereferenced_reference':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'boolean_mode':([88,99,156,184,214,218,256,272,289,290,323,],[161,161,161,161,161,161,161,161,161,161,161,]),'operand2':([7,14,42,59,74,83,95,100,110,114,121,129,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[62,62,62,62,62,62,62,62,62,62,62,62,210,211,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'mode_definition':([31,186,],[101,236,]),'procedure_call':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'statement_list':([0,300,319,322,327,],[15,321,326,329,332,]),'bracketed_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'operand0':([7,14,42,59,74,83,95,100,110,114,129,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'character_string_literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'action_statement_list':([10,137,146,205,],[81,209,213,248,]),'discrete_mode':([88,99,156,184,214,218,256,272,289,290,323,],[169,169,169,169,253,260,287,169,260,169,169,]),'else_expression':([202,245,],[244,279,]),'synonym_statement':([0,15,300,319,321,322,326,327,329,332,],[19,19,19,19,19,19,19,19,19,19,]),'boolean_expression':([7,59,83,206,243,278,],[68,130,147,249,276,305,]),'action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[22,22,22,22,195,22,22,195,22,22,22,22,22,22,22,22,22,22,22,22,]),'then_expression':([130,276,305,],[202,304,324,]),'do_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'procedure_definition':([113,],[196,]),'result_spec':([274,299,],[301,320,]),'operator1':([50,],[121,]),'parameter':([95,114,226,291,],[177,177,267,177,]),'identifier_list':([13,23,31,173,179,186,237,298,],[88,99,102,88,99,102,272,272,]),'assignment_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'value_array_slice':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'expression_list':([100,129,],[182,200,]),'discrete_range_mode':([88,99,156,184,214,218,256,272,289,290,323,],[158,158,158,158,158,158,158,158,158,158,158,]),'exit_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'newmode_list':([31,],[103,]),'array_location':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'result':([14,42,],[93,115,]),'program':([0,],[35,]),'action_statement':([0,10,15,81,137,146,205,209,213,248,300,319,321,322,326,327,329,332,],[36,84,36,145,84,84,84,145,145,145,36,36,36,36,36,36,36,36,]),'literal_range':([218,222,224,289,291,],[258,264,266,258,264,]),'synonym_definition':([23,179,],[98,228,]),'return_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'while_control':([10,87,],[80,153,]),'builtin_call':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'parameter_spec':([272,],[296,]),'array_mode':([88,99,156,184,272,290,323,],[166,166,166,166,166,166,166,]),'literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'for_control':([10,],[87,]),'range_enumeration':([85,],[150,]),'newmode_statement':([0,15,300,319,321,322,326,327,329,332,],[2,2,2,2,2,2,2,2,2,2,]),'character_literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'value_array_element':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'procedure_statement':([0,15,300,319,321,322,326,327,329,332,],[30,30,30,30,30,30,30,30,30,30,]),'array_primitive_value':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'constant_expression':([181,229,],[231,268,]),'identifier':([0,4,7,10,13,14,15,23,31,42,48,59,65,74,81,83,85,88,95,99,100,110,113,114,121,129,134,137,138,142,146,152,156,162,173,179,181,184,186,203,205,206,209,213,214,215,218,220,222,224,226,229,232,234,237,242,243,246,248,256,272,278,282,285,288,289,290,291,298,300,319,321,322,323,326,327,329,332,],[40,44,76,86,89,76,40,89,89,76,76,76,76,76,86,76,151,164,76,164,76,76,76,76,76,76,76,86,76,76,86,76,164,219,89,89,76,164,89,76,86,76,86,86,252,76,262,76,76,76,76,76,76,76,89,76,76,76,86,252,164,76,76,76,76,262,164,76,89,40,40,40,40,164,40,40,40,40,]),'relational_operator':([50,],[117,]),'integer_mode':([88,99,156,184,214,218,256,272,289,290,323,],[160,160,160,160,160,160,160,160,160,160,160,]),'empty_literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'iteration':([85,],[149,]),'mode':([88,99,156,184,272,290,323,],[163,180,217,235,297,315,330,]),'arithmetic_additive_operator':([72,199,],[142,142,]),'formal_parameter':([237,298,],[271,318,]),'integer_literal':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,223,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,265,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'builtin_name':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'result_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_element':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'array_slice':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'string_mode':([88,99,156,184,272,290,323,],[170,170,170,170,170,170,170,]),'conditional_expression':([7,14,42,59,74,83,95,100,110,114,129,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'string_concatenation_operator':([72,199,],[138,138,]),'call_action':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[25,60,25,60,25,60,60,60,60,60,25,60,60,60,60,25,60,60,60,60,25,60,60,25,25,60,60,25,60,25,25,60,60,60,60,60,60,60,60,60,60,60,60,25,60,60,60,60,60,60,25,25,25,25,25,25,25,25,]),'control_part':([10,],[82,]),'step_enumeration':([85,],[148,]),'declaration':([13,173,],[91,225,]),'operand1':([7,14,42,59,74,83,95,100,110,114,121,129,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[72,72,72,72,72,72,72,72,72,72,199,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'operand4':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[73,73,73,116,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'membership_operator':([50,],[118,]),'then_clause':([68,249,],[136,281,]),'else_clause':([136,281,],[207,307,]),'location':([0,7,10,14,15,42,48,59,65,74,81,83,95,100,110,113,114,121,129,134,137,138,142,146,152,181,203,205,206,209,213,215,218,220,222,224,226,229,232,234,242,243,246,248,278,282,285,288,289,291,300,319,321,322,326,327,329,332,],[33,71,33,71,33,71,71,71,135,71,33,71,71,71,71,33,71,71,71,71,33,71,71,33,33,71,71,33,71,33,33,71,71,71,71,71,71,71,71,71,71,71,71,33,71,71,71,71,71,71,33,33,33,33,33,33,33,33,]),'operand3':([7,14,42,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[79,79,79,79,79,79,79,79,79,79,79,79,204,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'declaration_statement':([0,15,300,319,321,322,326,327,329,332,],[16,16,16,16,16,16,16,16,16,16,]),'step_value':([255,],[283,]),'statement':([0,15,300,319,321,322,326,327,329,332,],[38,94,38,38,94,38,94,38,94,94,]),'referenced_location':([7,14,42,48,59,74,83,95,100,110,114,121,129,134,138,142,181,203,206,215,218,220,222,224,226,229,232,234,242,243,246,278,282,285,288,289,291,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'elsif_expression':([202,],[245,]),'reference_mode':([88,99,156,184,272,290,323,],[155,155,155,155,155,155,155,]),'if_action':([0,10,15,81,113,137,146,152,205,209,213,248,300,319,321,322,326,327,329,332,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'character_mode':([88,99,156,184,214,218,256,272,289,290,323,],[165,165,165,165,165,165,165,165,165,165,165,]),'parameter_list':([95,114,291,],[176,198,198,]),'composite_mode':([88,99,156,184,272,290,323,],[157,157,157,157,157,157,157,]),'start_value':([215,],[255,]),'initialization':([163,],[221,]),'end_value':([255,283,284,309,],[286,310,311,325,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',295),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',302),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',303),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',312),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',326),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',328),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',336),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',339),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',353),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',354),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',361),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',368),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',375),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',382),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',389),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',396),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',402),
  ('expression -> operand0','expression',1,'p_expression','parser.py',409),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',410),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',417),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',418),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',428),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',442),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',449),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',450),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',473),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',474),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',494),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',501),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',502),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',514),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',515),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',522),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',529),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',530),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',541),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',542),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',549),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',550),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',561),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',562),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',569),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',570),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',571),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',578),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',585),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',586),
  ('action -> bracketed_action','action',1,'p_action','parser.py',597),
  ('action -> assignment_action','action',1,'p_action','parser.py',598),
  ('action -> call_action','action',1,'p_action','parser.py',599),
  ('action -> exit_action','action',1,'p_action','parser.py',600),
  ('action -> return_action','action',1,'p_action','parser.py',601),
  ('action -> result_action','action',1,'p_action','parser.py',602),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',609),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',610),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',617),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',624),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',625),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',639),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',640),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',650),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',656),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',657),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',665),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',666),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',667),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',679),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',680),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',692),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',702),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',709),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',710),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',717),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',718),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',719),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',720),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',735),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',741),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',747),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',753),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',754),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',764),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',771),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',772),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',779),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',780),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',789),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',790),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',799),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',805),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',812),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',813),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',822),
  ('result -> expression','result',1,'p_result','parser.py',829),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',835),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',836),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',847),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',848),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',849),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',850),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',854),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',860),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',867),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',868),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',869),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',870),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',885),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',886),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',895),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',902),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',903),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',913),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',914),
]
