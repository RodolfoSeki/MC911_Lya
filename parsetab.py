
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT INT TRUE DOWN FALSE END ELSE ARRAY EXIT BOOL CHARS LOWER TO FI RETURNS ELSIF IN THEN FOR SYN REF READ LOC ASC LENGTH OD PRINT PROC NUM DO ABS DCL IF NULL BY RETURN WHILE RESULT TYPE UPPER CHARprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n                     | string_slice\n                     | string_element\n         dereferenced_reference : location ARROW\n         string_element : identifier LBRACKET start_element RBRACKET\n         start_element : expression\n         string_slice : identifier LBRACKET left_element COLON right_element RBRACKET \n         left_element : expression\n         right_element : expression\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_mode\n                              | identifier DOWN IN discrete_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'INT':([39,96,101,112,158,180,223,233,237,277,282,299,300,330,],[-17,-15,164,164,164,164,-16,164,164,164,164,164,164,164,]),'RETURNS':([284,313,],[310,310,]),'FI':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,81,90,110,142,143,153,155,193,197,206,207,208,209,210,215,216,221,226,244,245,247,251,256,259,286,288,290,292,293,307,316,318,319,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-129,-58,-150,-128,-122,218,-185,-151,-175,-117,-98,-111,-112,-87,-149,257,-186,-64,-176,-59,-130,286,-84,-152,-90,316,-94,-153,-67,-61,-91,-85,-154,]),'DOWN':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,186,197,206,207,208,209,210,221,226,244,245,256,275,276,286,293,304,307,316,318,324,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,239,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-167,305,-90,-67,327,-61,-91,-85,-168,]),'LBRACKET':([1,9,13,17,23,25,27,28,30,39,41,45,46,52,53,54,56,57,58,62,63,64,67,68,69,72,73,75,76,77,78,79,90,108,142,155,176,177,197,203,210,221,226,244,245,256,270,293,307,318,],[-56,-68,-55,-54,100,-174,-53,-52,-57,-17,-173,117,-69,-78,-68,-83,-82,-55,-76,-70,-77,-74,-81,-75,-71,117,-79,-72,144,-73,-80,-86,-58,117,-68,-185,232,233,-175,117,-87,-186,-64,-176,-59,-84,117,-67,-61,-85,]),'BY':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,275,276,286,293,307,316,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-167,302,-90,-67,-61,-91,-85,]),'$end':([14,15,20,21,33,37,42,43,81,115,160,182,195,247,249,],[-4,-2,-7,-5,-6,0,-1,-8,-129,-3,-24,-18,-9,-130,-195,]),'TO':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,275,276,286,293,304,305,307,316,318,324,327,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-167,303,-90,-67,303,303,-61,-91,-85,-168,303,]),'ARRAY':([39,96,101,112,158,180,223,282,299,330,],[-17,-15,177,177,177,177,-16,177,177,177,]),'RESULT':([0,14,15,20,21,33,34,42,43,81,110,111,115,118,152,160,182,189,190,193,195,215,219,240,247,249,259,311,331,332,333,340,341,342,347,],[4,-4,-2,-7,-5,-6,4,4,-8,-129,-150,4,-3,4,4,-24,-18,4,4,-151,-9,4,4,4,-130,-195,4,4,4,4,4,4,4,4,4,]),'LPAREN':([3,4,7,8,10,11,19,22,31,32,39,40,44,45,51,55,66,70,72,80,86,87,94,100,106,108,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,164,165,168,169,170,171,172,173,174,181,203,204,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,267,270,273,274,289,294,295,296,298,300,302,303,306,310,],[-192,51,-190,51,51,94,-188,-194,-187,-189,-17,-193,-191,116,51,51,-124,51,116,-123,51,-140,51,51,51,116,51,51,-118,-119,-120,51,-101,-100,51,-104,-99,-102,-109,-108,-107,-105,-103,-106,51,51,-115,-113,-114,51,-143,-144,-145,-146,-141,-142,-36,-32,-34,228,229,51,-35,-38,-37,-33,116,248,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,228,298,228,229,51,51,-40,-39,51,51,51,51,228,330,]),'FOR':([34,],[105,]),'LENGTH':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[3,3,3,3,-4,-2,-7,-5,-6,3,3,-8,3,3,3,-124,3,-123,-129,3,-140,3,3,3,-150,3,-3,3,3,3,-118,-119,-120,3,-101,-100,3,-104,-99,-102,-109,-108,-107,-105,-103,-106,3,3,-115,-113,-114,3,-143,-144,-145,-146,-141,-142,3,-24,3,-18,3,3,-151,-9,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-130,-195,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'RETURN':([0,14,15,20,21,33,34,42,43,81,110,111,115,118,152,160,182,189,190,193,195,215,219,240,247,249,259,311,331,332,333,340,341,342,347,],[8,-4,-2,-7,-5,-6,8,8,-8,-129,-150,8,-3,8,8,-24,-18,8,8,-151,-9,8,8,8,-130,-195,8,8,8,8,8,8,8,8,8,]),'LT':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,131,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'OD':([81,110,111,193,240,247,],[-129,-150,192,-151,278,-130,]),'DIVIDE':([1,9,13,17,25,27,28,30,39,41,45,46,47,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,197,203,206,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,84,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,120,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-51,-128,-122,-185,-175,-51,-117,120,120,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'ARROW':([1,4,8,9,10,13,17,25,27,28,30,39,41,45,51,53,55,57,66,70,72,80,86,87,90,94,100,106,108,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,144,145,146,147,149,150,151,155,171,197,203,211,217,220,221,225,226,227,228,229,233,234,238,241,244,245,246,252,254,255,270,289,293,294,298,300,302,303,307,],[-56,59,59,90,59,-55,-54,-174,-53,-52,-57,-17,-173,-51,59,90,59,-55,-124,59,-51,-123,59,-140,-58,59,59,59,-51,59,59,-118,-119,-120,59,-101,-100,59,-104,-99,-102,-109,-108,-107,-105,-103,-106,59,59,-115,-113,-114,90,59,-143,-144,-145,-146,-141,-142,-185,59,-175,-51,59,59,59,-186,59,-64,59,59,59,59,59,59,59,-176,-59,59,59,59,59,-51,59,-67,59,59,59,59,59,-61,]),'ASC':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[19,19,19,19,-4,-2,-7,-5,-6,19,19,-8,19,19,19,-124,19,-123,-129,19,-140,19,19,19,-150,19,-3,19,19,19,-118,-119,-120,19,-101,-100,19,-104,-99,-102,-109,-108,-107,-105,-103,-106,19,19,-115,-113,-114,19,-143,-144,-145,-146,-141,-142,19,-24,19,-18,19,19,-151,-9,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-130,-195,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'GEQ':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,134,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'RBRACKET':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,162,163,164,165,168,172,173,174,181,197,199,200,206,207,208,209,210,213,214,221,226,244,245,256,261,262,266,267,268,269,271,280,281,286,291,293,295,296,307,316,318,320,323,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-65,226,-36,-32,-34,-35,-38,-37,-33,-175,-60,245,-117,-98,-111,-112,-87,-65,256,-186,-64,-176,-59,-84,293,-66,297,-49,-47,-50,299,307,-63,-90,318,-67,-40,-39,-61,-91,-85,-41,-48,]),'NULL':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[56,56,56,56,56,-124,56,-123,56,-140,56,56,56,56,56,-118,-119,-120,56,-101,-100,56,-104,-99,-102,-109,-108,-107,-105,-103,-106,56,56,-115,-113,-114,56,-143,-144,-145,-146,-141,-142,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'TYPE':([0,14,15,20,21,33,42,43,81,115,160,182,195,247,249,311,331,332,333,340,341,342,347,],[12,-4,-2,-7,-5,-6,12,-8,-129,-3,-24,-18,-9,-130,-195,12,12,12,12,12,12,12,12,]),'BOOL':([39,96,101,112,158,180,223,233,237,277,282,299,300,330,],[-17,-15,174,174,174,174,-16,174,174,174,174,174,174,174,]),'CHARS':([39,96,101,112,158,180,223,282,299,330,],[-17,-15,176,176,176,176,-16,176,176,176,]),'THEN':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,92,93,141,142,143,155,197,206,207,208,209,210,221,226,244,245,256,258,286,287,293,307,316,317,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-92,152,211,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,152,-90,211,-67,-61,-91,211,-85,]),'GT':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,132,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'OR':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,128,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'RPAREN':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,94,116,140,142,143,154,155,156,157,164,165,166,167,168,169,170,172,173,174,175,178,181,197,198,206,207,208,209,210,221,226,235,244,245,248,256,260,264,265,283,285,286,293,295,296,297,298,307,308,309,316,318,320,321,322,329,335,338,344,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,155,197,210,-128,-122,-179,-185,-177,221,-36,-32,-31,-30,-34,-29,-28,-35,-38,-37,-43,-44,-33,-175,244,-117,-98,-111,-112,-87,-186,-64,-42,-176,-59,284,-84,-178,295,296,-200,313,-90,-67,-40,-39,-45,197,-61,-202,-203,-91,-85,-41,-179,-46,-204,-201,343,348,]),'EXIT':([0,14,15,20,21,33,34,42,43,81,110,111,115,118,152,160,182,189,190,193,195,215,219,240,247,249,259,311,331,332,333,340,341,342,347,],[18,-4,-2,-7,-5,-6,18,18,-8,-129,-150,18,-3,18,18,-24,-18,18,18,-151,-9,18,18,18,-130,-195,18,18,18,18,18,18,18,18,18,]),'NUM':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[32,32,32,32,-4,-2,-7,-5,-6,32,32,-8,32,32,32,-124,32,-123,-129,32,-140,32,32,32,-150,32,-3,32,32,32,-118,-119,-120,32,-101,-100,32,-104,-99,-102,-109,-108,-107,-105,-103,-106,32,32,-115,-113,-114,32,-143,-144,-145,-146,-141,-142,32,-24,32,-18,32,32,-151,-9,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-130,-195,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'END':([14,15,20,21,33,43,81,115,160,182,195,247,249,331,340,341,347,],[-4,-2,-7,-5,-6,-8,-129,-3,-24,-18,-9,-130,-195,339,345,346,349,]),'IF':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,81,86,87,94,100,106,110,111,115,116,117,118,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[10,55,55,55,-4,-2,-7,-5,-6,10,10,-8,55,55,-129,55,-140,55,55,55,-150,10,-3,55,55,10,55,-143,-144,-145,-146,-141,-142,10,-24,55,-18,10,10,-151,-9,55,10,55,10,55,55,55,55,55,55,55,55,10,55,55,-130,-195,55,55,55,10,55,55,55,55,55,55,10,10,10,10,10,10,10,10,]),'TRUE':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[78,78,78,78,78,-124,78,-123,78,-140,78,78,78,78,78,-118,-119,-120,78,-101,-100,78,-104,-99,-102,-109,-108,-107,-105,-103,-106,78,78,-115,-113,-114,78,-143,-144,-145,-146,-141,-142,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'DCL':([0,14,15,20,21,33,42,43,81,115,160,182,195,247,249,311,331,332,333,340,341,342,347,],[38,-4,-2,-7,-5,-6,38,-8,-129,-3,-24,-18,-9,-130,-195,38,38,38,38,38,38,38,38,]),'COMMA':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,95,96,97,98,101,102,103,112,113,114,142,143,154,155,156,157,162,163,164,165,166,167,168,169,170,172,173,174,175,178,181,194,197,198,206,207,208,209,210,213,214,221,222,223,224,226,230,231,235,236,242,243,244,245,256,260,262,267,268,269,271,272,279,282,283,285,286,293,295,296,297,307,308,309,316,318,320,321,322,323,329,335,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,159,-15,-25,161,159,-19,183,159,196,-10,-128,-122,-179,-185,-177,220,-65,227,-36,-32,-31,-30,-34,-29,-28,-35,-38,-37,-43,-44,-33,-12,-175,220,-117,-98,-111,-112,-87,-65,227,-186,-27,-16,-26,-64,-23,-22,-42,-20,-13,-11,-176,-59,-84,-178,-66,-49,-47,-50,300,-21,-14,159,-200,314,-90,-67,-40,-39,-45,-61,-202,-203,-91,-85,-41,-179,-46,-48,-204,-201,]),'SYN':([0,14,15,20,21,33,42,43,81,115,160,182,195,247,249,311,331,332,333,340,341,342,347,],[24,-4,-2,-7,-5,-6,24,-8,-129,-3,-24,-18,-9,-130,-195,24,24,24,24,24,24,24,24,]),'NOT':([4,8,10,51,55,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[66,66,66,66,66,66,-140,66,66,66,66,66,-118,-119,-120,66,-101,-100,66,-104,-99,-102,-109,-108,-107,-105,-103,-106,66,66,-115,-113,-114,66,-143,-144,-145,-146,-141,-142,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'AND':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,123,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'WHILE':([1,17,25,27,28,30,34,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,109,142,143,155,164,165,168,172,173,174,181,184,185,187,197,206,207,208,209,210,221,226,244,245,256,273,286,293,295,296,301,306,307,316,318,325,326,328,337,],[-56,-54,-174,-53,-52,-57,106,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,106,-128,-122,-185,-36,-32,-34,-35,-38,-37,-33,-162,-161,-160,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-170,-90,-67,-40,-39,-163,-171,-61,-91,-85,-169,-164,-165,-166,]),'UPPER':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[7,7,7,7,-4,-2,-7,-5,-6,7,7,-8,7,7,7,-124,7,-123,-129,7,-140,7,7,7,-150,7,-3,7,7,7,-118,-119,-120,7,-101,-100,7,-104,-99,-102,-109,-108,-107,-105,-103,-106,7,7,-115,-113,-114,7,-143,-144,-145,-146,-141,-142,7,-24,7,-18,7,7,-151,-9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-130,-195,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ELSE':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,81,90,110,142,143,153,155,193,197,206,207,208,209,210,212,215,221,226,244,245,247,250,253,256,286,292,293,307,315,316,318,336,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-129,-58,-150,-128,-122,219,-185,-151,-175,-117,-98,-111,-112,-87,254,-149,-186,-64,-176,-59,-130,-93,254,-84,-90,219,-67,-61,-95,-91,-85,-96,]),'ELSIF':([1,17,25,27,28,30,39,41,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,81,90,110,142,143,153,155,193,197,206,207,208,209,210,212,215,221,226,244,245,247,250,253,256,286,292,293,307,315,316,318,336,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-129,-58,-150,-128,-122,217,-185,-151,-175,-117,-98,-111,-112,-87,252,-149,-186,-64,-176,-59,-130,-93,289,-84,-90,217,-67,-61,-95,-91,-85,-96,]),'ABS':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[31,31,31,31,-4,-2,-7,-5,-6,31,31,-8,31,31,31,-124,31,-123,-129,31,-140,31,31,31,-150,31,-3,31,31,31,-118,-119,-120,31,-101,-100,31,-104,-99,-102,-109,-108,-107,-105,-103,-106,31,31,-115,-113,-114,31,-143,-144,-145,-146,-141,-142,31,-24,31,-18,31,31,-151,-9,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-130,-195,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'LAND':([1,9,13,17,25,27,28,30,39,41,45,46,47,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,197,203,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,88,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,-110,137,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-51,-128,-122,-185,-175,-51,-117,137,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'SEMI':([1,2,5,6,8,13,16,17,25,26,27,28,29,30,35,36,39,41,46,47,48,49,50,52,53,54,56,57,58,60,61,62,63,64,65,67,68,69,71,72,73,74,75,77,78,79,82,90,92,97,98,99,102,103,104,107,109,113,114,142,143,148,155,164,165,166,167,168,169,170,172,173,174,175,178,181,184,185,187,188,191,192,194,197,202,205,206,207,208,209,210,218,221,222,224,226,230,231,235,236,242,243,244,245,256,257,272,273,278,279,284,286,293,295,296,297,301,306,307,312,313,316,318,322,325,326,328,334,337,339,343,345,346,348,349,],[-56,-136,81,-137,-181,-133,-131,-54,-174,-138,-53,-52,-132,-57,-134,-135,-17,-173,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-184,-121,-70,-77,-74,-183,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-182,-58,-92,-25,160,-180,-19,182,-159,189,-157,195,-10,-128,-122,-139,-185,-36,-32,-31,-30,-34,-29,-28,-35,-38,-37,-43,-44,-33,-162,-161,-160,-172,-158,-155,-12,-175,247,249,-117,-98,-111,-112,-87,-147,-186,-27,-26,-64,-23,-22,-42,-20,-13,-11,-176,-59,-84,-148,-21,-170,-156,-14,311,-90,-67,-40,-39,-45,-163,-171,-61,332,333,-91,-85,-46,-169,-164,-165,342,-166,-196,-205,-198,-197,-206,-199,]),'MODULO':([1,9,13,17,25,27,28,30,39,41,45,46,47,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,197,203,206,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,85,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,121,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-51,-128,-122,-185,-175,-51,-117,121,121,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'CHAR':([39,96,101,112,158,180,223,233,237,277,282,299,300,330,],[-17,-15,173,173,173,173,-16,173,173,173,173,173,173,173,]),'FALSE':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[73,73,73,73,73,-124,73,-123,73,-140,73,73,73,73,73,-118,-119,-120,73,-101,-100,73,-104,-99,-102,-109,-108,-107,-105,-103,-106,73,73,-115,-113,-114,73,-143,-144,-145,-146,-141,-142,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'LEQ':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,130,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'DO':([0,14,15,20,21,33,34,42,43,81,110,111,115,118,152,160,182,189,190,193,195,215,219,240,247,249,259,311,331,332,333,340,341,342,347,],[34,-4,-2,-7,-5,-6,34,34,-8,-129,-150,34,-3,34,34,-24,-18,34,34,-151,-9,34,34,34,-130,-195,34,34,34,34,34,34,34,34,34,]),'EQ':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,133,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'PRINT':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[22,22,22,22,-4,-2,-7,-5,-6,22,22,-8,22,22,22,-124,22,-123,-129,22,-140,22,22,22,-150,22,-3,22,22,22,-118,-119,-120,22,-101,-100,22,-104,-99,-102,-109,-108,-107,-105,-103,-106,22,22,-115,-113,-114,22,-143,-144,-145,-146,-141,-142,22,-24,22,-18,22,22,-151,-9,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-130,-195,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'PROC':([118,],[204,]),'EQUALS':([1,9,13,17,25,27,28,30,39,41,45,83,84,85,88,89,90,91,95,96,101,108,155,164,165,166,167,168,169,170,172,173,174,175,178,179,181,186,194,197,203,221,223,226,235,244,245,293,295,296,297,307,322,],[-56,87,-55,-54,-174,-53,-52,-57,-17,-173,-51,145,146,147,149,150,-58,151,158,-15,171,-51,-185,-36,-32,-31,-30,-34,-29,-28,-35,-38,-37,-43,-44,234,-33,238,241,-175,-51,-186,-16,-64,-42,-176,-59,-67,-40,-39,-45,-61,-46,]),'SCONST':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[54,54,54,54,54,-124,54,-123,54,-140,54,54,54,54,54,-118,-119,-120,54,-101,-100,54,-104,-99,-102,-109,-108,-107,-105,-103,-106,54,54,-115,-113,-114,54,-143,-144,-145,-146,-141,-142,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NE':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,197,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,126,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,-175,-117,-98,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'LOC':([39,164,165,166,167,168,169,170,172,173,174,175,178,181,235,295,296,297,309,322,338,],[-17,-36,-32,-31,-30,-34,-29,-28,-35,-38,-37,-43,-44,-33,-42,-40,-39,-45,329,-46,344,]),'IN':([1,17,25,27,28,30,39,41,46,47,48,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,142,143,155,186,197,206,207,208,209,210,221,226,239,244,245,256,270,293,307,318,],[-56,-54,-174,-53,-52,-57,-17,-173,-69,-110,129,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-128,-122,-185,237,-175,-117,-98,-111,-112,-87,-186,-64,277,-176,-59,-84,-51,-67,-61,-85,]),'TIMES':([1,9,13,17,25,27,28,30,39,41,45,46,47,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,197,203,206,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,83,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,119,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-51,-128,-122,-185,-175,-51,-117,119,119,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'ID':([0,4,8,10,12,14,15,18,20,21,24,33,34,38,39,42,43,51,55,59,66,70,80,81,86,87,94,96,100,101,105,106,110,111,112,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,158,159,160,161,171,180,182,183,189,190,193,195,196,211,215,217,219,220,223,225,227,228,229,233,234,237,238,240,241,246,247,248,249,252,254,255,259,277,282,289,294,298,299,300,302,303,311,314,330,331,332,333,340,341,342,347,],[39,39,39,39,39,-4,-2,39,-7,-5,39,-6,39,39,-17,39,-8,39,39,39,-124,39,-123,-129,39,-140,39,-15,39,39,39,39,-150,39,39,-3,39,39,39,-118,-119,-120,39,-101,-100,39,-104,-99,-102,-109,-108,-107,-105,-103,-106,39,39,-115,-113,-114,39,-143,-144,-145,-146,-141,-142,39,39,39,-24,39,39,39,-18,39,39,39,-151,-9,39,39,39,39,39,39,-16,39,39,39,39,39,39,39,39,39,39,39,-130,39,-195,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ICONST':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[52,52,52,52,52,-124,52,-123,52,-140,52,52,52,52,52,-118,-119,-120,52,-101,-100,52,-104,-99,-102,-109,-108,-107,-105,-103,-106,52,52,-115,-113,-114,52,-143,-144,-145,-146,-141,-142,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'REF':([39,96,101,112,158,180,223,282,299,330,],[-17,-15,180,180,180,180,-16,180,180,180,]),'CCONST':([4,8,10,51,55,66,70,80,86,87,94,100,106,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[67,67,67,67,67,-124,67,-123,67,-140,67,67,67,67,67,-118,-119,-120,67,-101,-100,67,-104,-99,-102,-109,-108,-107,-105,-103,-106,67,67,-115,-113,-114,67,-143,-144,-145,-146,-141,-142,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'READ':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[40,40,40,40,-4,-2,-7,-5,-6,40,40,-8,40,40,40,-124,40,-123,-129,40,-140,40,40,40,-150,40,-3,40,40,40,-118,-119,-120,40,-101,-100,40,-104,-99,-102,-109,-108,-107,-105,-103,-106,40,40,-115,-113,-114,40,-143,-144,-145,-146,-141,-142,40,-24,40,-18,40,40,-151,-9,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-130,-195,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'PLUS':([1,9,13,17,25,27,28,30,39,41,45,46,47,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,197,203,206,207,208,209,210,221,226,244,245,256,270,293,307,318,],[-56,89,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,-110,138,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,-51,-128,-122,-185,-175,-51,-117,138,-111,-112,-87,-186,-64,-176,-59,-84,-51,-67,-61,-85,]),'COLON':([1,17,25,27,28,30,39,41,45,46,47,48,49,50,52,53,54,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,90,108,142,143,155,162,197,199,201,206,207,208,209,210,213,221,226,244,245,256,263,270,286,293,307,316,318,321,],[-56,-54,-174,-53,-52,-57,-17,-173,118,-69,-110,-88,-89,-97,-78,-125,-83,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,-58,190,-128,-122,-185,225,-175,-62,246,-117,-98,-111,-112,-87,255,-186,-64,-176,-59,-84,294,-51,-90,-67,-61,-91,-85,294,]),'MINUS':([1,4,8,9,10,13,17,25,27,28,30,39,41,45,46,47,50,51,52,53,54,55,56,57,58,61,62,63,64,67,68,69,71,72,73,74,75,77,78,79,86,87,90,94,100,106,108,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,143,144,145,146,147,149,150,151,155,171,197,203,206,207,208,209,210,211,217,220,221,225,226,227,228,229,233,234,238,241,244,245,246,252,254,255,256,270,289,293,294,298,300,302,303,307,318,],[-56,80,80,91,80,-55,-54,-174,-53,-52,-57,-17,-173,-51,-69,-110,139,80,-78,-125,-83,80,-82,-55,-76,-121,-70,-77,-74,-81,-75,-71,-116,-51,-79,-126,-72,-73,-80,-127,80,-140,-58,80,80,80,-51,80,80,-118,-119,-120,80,-101,-100,80,-104,-99,-102,-109,-108,-107,-105,-103,-106,80,80,-115,-113,-114,-128,-122,80,-143,-144,-145,-146,-141,-142,-185,80,-175,-51,-117,139,-111,-112,-87,80,80,80,-186,80,-64,80,80,80,80,80,80,80,-176,-59,80,80,80,80,-84,-51,80,-67,80,80,80,80,80,-61,-85,]),'LOWER':([0,4,8,10,14,15,20,21,33,34,42,43,51,55,59,66,70,80,81,86,87,94,100,106,110,111,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,144,145,146,147,149,150,151,152,160,171,182,189,190,193,195,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,247,249,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[44,44,44,44,-4,-2,-7,-5,-6,44,44,-8,44,44,44,-124,44,-123,-129,44,-140,44,44,44,-150,44,-3,44,44,44,-118,-119,-120,44,-101,-100,44,-104,-99,-102,-109,-108,-107,-105,-103,-106,44,44,-115,-113,-114,44,-143,-144,-145,-146,-141,-142,44,-24,44,-18,44,44,-151,-9,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-130,-195,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,266,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'operand2':([4,8,10,51,55,86,94,100,106,116,117,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[47,47,47,47,47,47,47,47,47,47,47,47,208,209,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'arithmetic_additive_operator':([50,207,],[135,135,]),'assigning_operator':([9,],[86,]),'result_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'conditional_expression':([4,8,10,51,55,86,94,100,106,116,117,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'while_control':([34,109,],[104,191,]),'then_clause':([93,258,],[153,292,]),'array_slice':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[5,5,5,5,202,5,5,202,5,5,5,5,5,5,5,5,5,5,5,5,]),'right_element':([246,],[280,]),'empty_literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'declaration_statement':([0,42,311,331,332,333,340,341,342,347,],[14,14,14,14,14,14,14,14,14,14,]),'arithmetic_multiplicative_operator':([47,208,209,],[122,122,122,]),'bracketed_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'referenced_location':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'operand4':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[61,61,61,61,61,143,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'result_spec':([284,313,],[312,334,]),'string_slice':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'boolean_mode':([101,112,158,180,233,237,277,282,299,300,330,],[181,181,181,181,181,181,181,181,181,181,181,]),'else_expression':([212,253,],[251,288,]),'identifier_list':([12,24,38,161,183,196,248,314,],[95,101,112,95,101,112,282,282,]),'elsif_expression':([212,],[253,]),'operator1':([48,],[125,]),'parameter_spec':([282,],[308,]),'array_element':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'value_array_slice':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'step_value':([276,],[304,]),'parameter_list':([94,116,298,],[157,198,198,]),'operand3':([4,8,10,51,55,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[71,71,71,71,71,71,71,71,71,71,71,206,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'reference_mode':([101,112,158,180,282,299,330,],[167,167,167,167,167,167,167,]),'value_array_element':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'discrete_range_mode':([101,112,158,180,233,237,277,282,299,300,330,],[172,172,172,172,172,172,172,172,172,172,172,]),'synonym_statement':([0,42,311,331,332,333,340,341,342,347,],[21,21,21,21,21,21,21,21,21,21,]),'string_mode':([101,112,158,180,282,299,330,],[175,175,175,175,175,175,175,]),'range_enumeration':([105,],[184,]),'return_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'discrete_mode':([101,112,158,180,233,237,277,282,299,300,330,],[169,169,169,169,267,273,306,169,169,267,169,]),'left_element':([117,],[201,]),'boolean_expression':([10,55,106,217,252,289,],[93,141,188,258,287,317,]),'constant_expression':([171,234,],[231,272,]),'array_primitive_value':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'procedure_definition':([118,],[205,]),'declaration_list':([38,],[113,]),'integer_literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'dereferenced_reference':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'declaration':([38,196,],[114,243,]),'procedure_call':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primitive_value':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_mode':([101,112,158,180,282,299,330,],[178,178,178,178,178,178,178,]),'action_statement_list':([34,152,189,219,],[111,215,240,259,]),'builtin_call':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'membership_operator':([48,],[124,]),'operand0':([4,8,10,51,55,86,94,100,106,116,117,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'formal_parameter':([248,314,],[283,335,]),'synonym_definition':([24,183,],[102,236,]),'character_string_literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'relational_operator':([48,],[127,]),'operand1':([4,8,10,51,55,86,94,100,106,116,117,125,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[50,50,50,50,50,50,50,50,50,50,50,207,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'initialization':([194,],[242,]),'if_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'end_value':([276,304,305,327,],[301,326,328,337,]),'iteration':([105,],[187,]),'location':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[9,53,53,53,9,9,53,53,142,53,53,53,53,53,9,53,53,9,53,53,53,53,53,9,53,9,9,53,9,53,9,53,53,53,53,53,53,53,53,9,53,53,53,53,53,9,53,53,53,53,53,53,9,9,9,9,9,9,9,9,]),'then_expression':([141,287,317,],[212,315,336,]),'start_value':([238,],[276,]),'builtin_name':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'call_action':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[13,57,57,57,13,13,57,57,57,57,57,57,57,57,13,57,57,13,57,57,57,57,57,13,57,13,13,57,13,57,13,57,57,57,57,57,57,57,57,13,57,57,57,57,57,13,57,57,57,57,57,57,13,13,13,13,13,13,13,13,]),'statement':([0,42,311,331,332,333,340,341,342,347,],[15,115,15,115,15,15,115,115,15,115,]),'literal_range':([228,229,233,298,300,],[264,265,269,265,269,]),'expression':([4,8,10,51,55,86,94,100,106,116,117,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[60,60,92,140,92,148,154,162,92,154,199,213,230,250,92,154,261,262,263,263,263,230,275,279,281,92,290,291,92,320,321,263,324,325,]),'boolean_literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'procedure_statement':([0,42,311,331,332,333,340,341,342,347,],[20,20,20,20,20,20,20,20,20,20,]),'result':([4,8,],[65,82,]),'array_location':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'parameter':([94,116,220,298,],[156,156,260,156,]),'do_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'else_clause':([153,292,],[216,319,]),'integer_mode':([101,112,158,180,233,237,277,282,299,300,330,],[165,165,165,165,165,165,165,165,165,165,165,]),'character_literal':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,232,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'formal_parameter_list':([248,],[285,]),'composite_mode':([101,112,158,180,282,299,330,],[166,166,166,166,166,166,166,]),'expression_list':([100,144,],[163,214,]),'assignment_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'string_concatenation_operator':([50,207,],[136,136,]),'string_element':([0,4,8,10,34,42,51,55,59,70,86,94,100,106,111,116,117,118,122,125,135,136,144,152,171,189,190,211,215,217,219,220,225,227,228,229,233,234,238,240,241,246,252,254,255,259,289,294,298,300,302,303,311,331,332,333,340,341,342,347,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'monadic_operator':([4,8,10,51,55,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'control_part':([34,],[107,]),'synonym_list':([24,],[103,]),'mode_definition':([12,161,],[97,224,]),'for_control':([34,],[109,]),'list_index_mode':([233,],[271,]),'newmode_statement':([0,42,311,331,332,333,340,341,342,347,],[33,33,33,33,33,33,33,33,33,33,]),'character_mode':([101,112,158,180,233,237,277,282,299,300,330,],[168,168,168,168,168,168,168,168,168,168,168,]),'start_element':([117,],[200,]),'parenthesized_expression':([4,8,10,51,55,70,86,94,100,106,116,117,122,125,135,136,144,171,211,217,220,225,227,228,229,233,234,238,241,246,252,254,255,289,294,298,300,302,303,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'exit_action':([0,34,42,111,118,152,189,190,215,219,240,259,311,331,332,333,340,341,342,347,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'program':([0,],[37,]),'index_mode':([233,300,],[268,323,]),'step_enumeration':([105,],[185,]),'action_statement':([0,34,42,111,152,189,215,219,240,259,311,331,332,333,340,341,342,347,],[43,110,43,193,110,110,193,110,193,193,43,43,43,43,43,43,43,43,]),'mode':([101,112,158,180,282,299,330,],[179,194,222,235,309,322,338,]),'newmode_list':([12,],[98,]),'statement_list':([0,311,332,333,342,],[42,331,340,341,347,]),'identifier':([0,4,8,10,12,18,24,34,38,42,51,55,59,70,86,94,100,101,105,106,111,112,116,117,118,122,125,135,136,144,152,158,159,161,171,180,183,189,190,196,211,215,217,219,220,225,227,228,229,233,234,237,238,240,241,246,248,252,254,255,259,277,282,289,294,298,299,300,302,303,311,314,330,331,332,333,340,341,342,347,],[45,72,72,72,96,99,96,108,96,45,72,72,72,72,72,72,72,170,186,72,108,170,72,72,203,72,72,72,72,72,108,170,223,96,72,170,96,108,203,96,72,108,72,108,72,72,72,72,72,270,72,274,72,108,72,72,96,72,72,72,108,274,170,72,72,72,170,270,72,72,45,96,170,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',45),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',46),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',55),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',56),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',65),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',71),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',72),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',80),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',85),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',91),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',92),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',101),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',102),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',111),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',117),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',123),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',124),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',133),
  ('mode -> identifier','mode',1,'p_mode','parser.py',139),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',140),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',141),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',142),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',148),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',149),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',150),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',151),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',157),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',163),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',169),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',175),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',176),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',181),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',187),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',192),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',193),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',198),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',204),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',209),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',210),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',218),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',219),
  ('location -> identifier','location',1,'p_location','parser.py',225),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',226),
  ('location -> array_element','location',1,'p_location','parser.py',227),
  ('location -> array_slice','location',1,'p_location','parser.py',228),
  ('location -> call_action','location',1,'p_location','parser.py',229),
  ('location -> string_slice','location',1,'p_location','parser.py',230),
  ('location -> string_element','location',1,'p_location','parser.py',231),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',237),
  ('string_element -> identifier LBRACKET start_element RBRACKET','string_element',4,'p_string_element','parser.py',243),
  ('start_element -> expression','start_element',1,'p_start_element','parser.py',250),
  ('string_slice -> identifier LBRACKET left_element COLON right_element RBRACKET','string_slice',6,'p_string_slice','parser.py',256),
  ('left_element -> expression','left_element',1,'p_left_element','parser.py',262),
  ('right_element -> expression','right_element',1,'p_right_element','parser.py',268),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',274),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',280),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',281),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',290),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',296),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',302),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',303),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',304),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',305),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',311),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',312),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',313),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',314),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',315),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',321),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',327),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',328),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',334),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',340),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',346),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',352),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',358),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',364),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',370),
  ('expression -> operand0','expression',1,'p_expression','parser.py',376),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',377),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',383),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',384),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',393),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',399),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',405),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',411),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',412),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',421),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',422),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',432),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',433),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',439),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',440),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',441),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',442),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',443),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',444),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',445),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',446),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',452),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',458),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',459),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',460),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',470),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',471),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',477),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',483),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',484),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',494),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',495),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',496),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',501),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',502),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',512),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',513),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',519),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',520),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',521),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',528),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',534),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',535),
  ('action -> bracketed_action','action',1,'p_action','parser.py',544),
  ('action -> assignment_action','action',1,'p_action','parser.py',545),
  ('action -> call_action','action',1,'p_action','parser.py',546),
  ('action -> exit_action','action',1,'p_action','parser.py',547),
  ('action -> return_action','action',1,'p_action','parser.py',548),
  ('action -> result_action','action',1,'p_action','parser.py',549),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',555),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',556),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',562),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',568),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',569),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',570),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',571),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',572),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',573),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',574),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',582),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',583),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',592),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',597),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',598),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',606),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',607),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',608),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',619),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',620),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',629),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',630),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',631),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',640),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',646),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',647),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',653),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',654),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',655),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',656),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',670),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',676),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',682),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',688),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',689),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',698),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',704),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',705),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',711),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',712),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',720),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',721),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',730),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',736),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',742),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',743),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',751),
  ('result -> expression','result',1,'p_result','parser.py',757),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',763),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',764),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',774),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',775),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',776),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',777),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',778),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',779),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',780),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',781),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',787),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',793),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',794),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',795),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',796),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',810),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',811),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',820),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',826),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',827),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',836),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',837),
]
