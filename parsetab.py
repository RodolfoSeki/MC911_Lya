
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '198133770B99D07AFDFFD217A1DF7811'
    
_lr_action_items = {'ID':([0,1,7,8,10,12,13,19,22,24,25,30,32,33,36,38,40,44,50,55,56,58,72,78,80,81,87,91,92,94,95,98,99,101,104,105,108,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,169,172,179,182,189,190,192,194,195,196,199,209,210,211,212,213,214,216,217,219,223,224,225,227,229,232,233,234,236,242,244,246,252,257,273,278,281,285,289,291,295,296,297,298,307,308,309,310,327,328,329,335,],[1,-17,1,1,1,-4,-7,1,-5,-6,1,1,-2,1,1,1,-8,-122,1,1,1,1,-116,-117,-3,1,-133,1,1,1,1,1,-143,1,-15,1,1,1,1,-98,-97,-99,-92,1,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,1,-107,1,-108,1,-106,-134,-138,-139,-135,-137,-136,-144,1,1,-18,1,1,1,1,-9,1,1,-24,1,1,1,1,-123,-188,1,1,1,1,1,1,1,-16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'DIVIDE':([1,6,9,11,14,18,20,26,35,46,48,49,51,52,53,57,59,60,61,62,63,64,66,67,68,69,70,73,75,76,77,79,84,97,118,120,152,198,203,205,206,207,208,218,240,247,264,294,306,],[-17,-53,88,-52,-167,-51,-54,-55,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-51,-63,133,-55,-76,-68,-71,-74,-64,-69,-56,-51,-115,-121,-168,-178,-80,-110,133,133,-169,-57,-179,-77,-51,-60,-78,]),'LBRACKET':([1,6,9,11,14,18,20,23,26,35,48,49,51,52,53,54,57,61,62,63,64,66,67,69,70,73,75,76,77,79,84,97,120,152,174,187,198,203,208,218,240,247,264,294,306,],[-17,-53,-61,-52,-167,-51,-54,101,-55,-166,-70,-61,-62,-79,-72,117,-75,-73,-67,-65,-66,-51,-63,-55,-76,-68,-71,-74,-64,-69,-56,-51,-61,-168,223,228,-178,-80,-169,-57,-179,-77,-51,-60,-78,]),'READ':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[2,2,2,2,-4,-7,2,-5,-6,-2,2,-8,-122,2,2,2,2,-116,-117,-3,2,-133,2,2,2,2,-143,2,2,2,-98,-97,-99,-92,2,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,2,-107,2,-108,2,-106,-134,-138,-139,-135,-137,-136,-144,2,2,-18,2,-9,2,-24,2,2,-123,-188,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'LOWER':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[43,43,43,43,-4,-7,43,-5,-6,-2,43,-8,-122,43,43,43,43,-116,-117,-3,43,-133,43,43,43,43,-143,43,43,43,-98,-97,-99,-92,43,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,43,-107,43,-108,43,-106,-134,-138,-139,-135,-137,-136,-144,43,43,-18,43,-9,43,-24,43,43,-123,-188,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'ASC':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[4,4,4,4,-4,-7,4,-5,-6,-2,4,-8,-122,4,4,4,4,-116,-117,-3,4,-133,4,4,4,4,-143,4,4,4,-98,-97,-99,-92,4,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,4,-107,4,-108,4,-106,-134,-138,-139,-135,-137,-136,-144,4,4,-18,4,-9,4,-24,4,4,-123,-188,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'EQUALS':([1,6,9,11,14,18,20,26,35,66,82,83,84,85,86,88,89,97,104,105,114,152,159,170,171,173,175,176,177,178,180,181,183,184,185,186,188,191,198,208,218,224,226,240,294,299,300,301,320,],[-17,-53,87,-52,-167,-51,-54,-55,-166,-51,143,144,-56,145,146,147,148,-51,-15,172,196,-168,214,-30,-33,-36,-37,-31,-32,-34,225,-44,-35,-29,-38,-43,-28,232,-178,-169,-57,-16,-42,-179,-60,-40,-45,-39,-46,]),'INT':([1,104,105,108,182,196,213,223,224,252,257,296,297,308,],[-17,-15,173,173,173,173,173,173,-16,173,173,173,173,173,]),'ELSE':([1,6,11,14,20,35,44,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,99,118,120,152,158,193,198,200,203,204,205,206,207,208,210,218,233,240,241,245,247,276,294,302,303,305,306,324,],[-17,-53,-52,-167,-54,-166,-122,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-143,-115,-121,-168,-144,236,-178,244,-80,-91,-110,-105,-104,-169,-123,-57,-142,-179,-86,244,-77,-83,-60,236,-88,-84,-78,-89,]),'ARRAY':([1,104,105,108,182,196,224,252,296,308,],[-17,-15,174,174,174,174,-16,174,174,174,]),'RETURN':([0,8,12,13,19,22,24,32,40,44,80,92,94,99,158,163,165,168,189,192,194,210,211,216,233,236,273,281,307,309,310,327,328,329,335,],[7,7,-4,-7,7,-5,-6,-2,-8,-122,-3,7,7,-143,-144,7,7,-18,-9,7,-24,-123,-188,7,7,7,7,7,7,7,7,7,7,7,7,]),'IF':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,56,80,81,87,91,92,94,98,99,101,115,117,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[33,50,33,50,-4,-7,33,-5,-6,-2,50,-8,-122,50,50,-3,50,-133,50,33,33,50,-143,50,50,50,-134,-138,-139,-135,-137,-136,-144,33,33,-18,50,-9,33,-24,50,50,-123,-188,50,33,50,50,50,50,50,50,50,33,50,33,50,50,50,33,50,33,50,50,50,50,50,33,33,33,33,33,33,33,]),'SCONST':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[70,70,70,70,70,70,-116,-117,70,-133,70,70,70,70,70,-98,-97,-99,-92,70,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,70,-107,70,-108,70,-106,-134,-138,-139,-135,-137,-136,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'BY':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,255,256,276,294,305,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-160,289,-83,-60,-84,-78,]),'FOR':([19,],[95,]),'RESULT':([0,8,12,13,19,22,24,32,40,44,80,92,94,99,158,163,165,168,189,192,194,210,211,216,233,236,273,281,307,309,310,327,328,329,335,],[10,10,-4,-7,10,-5,-6,-2,-8,-122,-3,10,10,-143,-144,10,10,-18,-9,10,-24,-123,-188,10,10,10,10,10,10,10,10,10,10,10,10,]),'COMMA':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,102,103,104,105,106,107,108,112,113,114,118,120,149,150,151,152,166,167,170,171,173,175,176,177,178,181,183,184,185,186,188,191,197,198,201,202,203,204,205,206,207,208,218,220,221,222,224,226,230,231,238,239,240,247,248,250,251,252,260,262,263,265,266,267,271,276,286,287,294,299,300,301,305,306,312,313,319,320,321,322,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-19,169,-15,179,190,-10,179,-25,195,179,-115,-121,-172,209,-170,-168,-58,219,-30,-33,-36,-37,-31,-32,-34,-44,-35,-29,-38,-43,-28,-12,209,-178,-58,219,-80,-91,-110,-105,-104,-169,-57,-20,-23,-22,-16,-42,-11,-13,-26,-27,-179,-77,-171,285,-193,179,-59,-50,297,-47,-49,-21,-14,-83,-195,-196,-60,-40,-45,-39,-84,-78,-194,-197,-41,-46,-48,-172,]),'FALSE':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[53,53,53,53,53,53,-116,-117,53,-133,53,53,53,53,53,-98,-97,-99,-92,53,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,53,-107,53,-108,53,-106,-134,-138,-139,-135,-137,-136,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'GT':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,121,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'RPAREN':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,91,115,118,119,120,149,150,151,152,170,171,173,175,176,177,178,181,183,184,185,186,188,197,198,203,204,205,206,207,208,212,218,226,240,247,248,250,251,268,270,276,286,287,294,298,299,300,301,305,306,312,313,319,320,322,326,331,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,152,198,-115,203,-121,-172,208,-170,-168,-30,-33,-36,-37,-31,-32,-34,-44,-35,-29,-38,-43,-28,240,-178,-80,-91,-110,-105,-104,-169,249,-57,-42,-179,-77,-171,284,-193,299,301,-83,-195,-196,-60,152,-40,-45,-39,-84,-78,-194,-197,-41,-46,-172,332,336,]),'LPAREN':([1,2,4,7,10,15,16,17,18,29,33,34,39,43,50,55,56,66,72,78,81,87,91,97,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,155,171,172,173,175,177,178,183,184,185,188,199,209,214,217,219,223,225,227,229,232,234,242,244,246,253,254,264,266,278,282,289,291,293,295,297,298,299,301,],[-17,-186,-181,56,56,-187,-182,-183,91,-180,56,-185,115,-184,56,56,56,91,-116,-117,56,-133,56,91,56,56,56,56,-98,-97,-99,-92,56,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,56,-107,56,-108,56,-106,-134,-138,-139,-135,-137,-136,212,-33,56,-36,-37,-32,-34,-35,227,-38,229,56,56,56,56,56,56,56,56,56,56,56,56,56,56,227,229,298,227,56,308,56,56,227,56,56,56,-40,-39,]),'NULL':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[57,57,57,57,57,57,-116,-117,57,-133,57,57,57,57,57,-98,-97,-99,-92,57,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,57,-107,57,-108,57,-106,-134,-138,-139,-135,-137,-136,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ARROW':([1,6,7,9,10,11,14,18,20,26,33,35,49,50,55,56,66,69,72,78,81,84,87,91,97,98,101,115,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,152,172,198,199,208,209,214,217,218,219,223,225,227,229,232,234,240,242,244,246,264,278,289,291,294,295,297,298,],[-17,-53,58,84,58,-52,-167,-51,-54,-55,58,-166,84,58,58,58,-51,-55,-116,-117,58,-56,-133,58,-51,58,58,58,58,84,-98,-97,-99,-92,58,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,58,-107,58,-108,58,-106,-134,-138,-139,-135,-137,-136,-168,58,-178,58,-169,58,58,58,-57,58,58,58,58,58,58,58,-179,58,58,58,-51,58,58,58,-60,58,58,58,]),'NOT':([7,10,33,50,56,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[78,78,78,78,78,78,-133,78,78,78,78,78,-98,-97,-99,-92,78,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,78,-107,78,-108,78,-106,-134,-138,-139,-135,-137,-136,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'PLUS':([1,6,9,11,14,18,20,26,35,46,48,49,51,52,53,57,59,60,61,62,63,64,66,67,68,69,70,71,73,75,76,77,79,84,97,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,82,-52,-167,-51,-54,-55,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-51,-63,-103,-55,-76,141,-68,-71,-74,-64,-69,-56,-51,-115,-121,-168,-178,-80,141,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'ICONST':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[75,75,75,75,75,75,-116,-117,75,-133,75,75,75,75,75,-98,-97,-99,-92,75,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,75,-107,75,-108,75,-106,-134,-138,-139,-135,-137,-136,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'TRUE':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[61,61,61,61,61,61,-116,-117,61,-133,61,61,61,61,61,-98,-97,-99,-92,61,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,61,-107,61,-108,61,-106,-134,-138,-139,-135,-137,-136,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PRINT':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[15,15,15,15,-4,-7,15,-5,-6,-2,15,-8,-122,15,15,15,15,-116,-117,-3,15,-133,15,15,15,15,-143,15,15,15,-98,-97,-99,-92,15,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,15,-107,15,-108,15,-106,-134,-138,-139,-135,-137,-136,-144,15,15,-18,15,-9,15,-24,15,15,-123,-188,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CCONST':([7,10,33,50,55,56,72,78,81,87,91,98,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[76,76,76,76,76,76,-116,-117,76,-133,76,76,76,76,76,-98,-97,-99,-92,76,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,76,-107,76,-108,76,-106,-134,-138,-139,-135,-137,-136,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'FI':([1,6,11,14,20,35,44,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,99,118,120,152,158,193,198,203,204,205,206,207,208,210,218,233,237,240,243,247,273,276,277,279,294,302,305,306,323,],[-17,-53,-52,-167,-54,-166,-122,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-143,-115,-121,-168,-144,235,-178,-80,-91,-110,-105,-104,-169,-123,-57,-142,274,-179,276,-77,-145,-83,-87,305,-60,-146,-84,-78,-147,]),'GEQ':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,123,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'NUM':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[16,16,16,16,-4,-7,16,-5,-6,-2,16,-8,-122,16,16,16,16,-116,-117,-3,16,-133,16,16,16,16,-143,16,16,16,-98,-97,-99,-92,16,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,16,-107,16,-108,16,-106,-134,-138,-139,-135,-137,-136,-144,16,16,-18,16,-9,16,-24,16,16,-123,-188,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'EQ':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,129,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'LEQ':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,132,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'OR':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,131,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'DO':([0,8,12,13,19,22,24,32,40,44,80,92,94,99,158,163,165,168,189,192,194,210,211,216,233,236,273,281,307,309,310,327,328,329,335,],[19,19,-4,-7,19,-5,-6,-2,-8,-122,-3,19,19,-143,-144,19,19,-18,-9,19,-24,-123,-188,19,19,19,19,19,19,19,19,19,19,19,19,]),'THEN':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,109,110,116,118,120,152,198,203,204,205,206,207,208,218,240,247,272,275,276,294,304,305,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-85,192,199,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,192,199,-83,-60,199,-84,-78,]),'SYN':([0,8,12,13,22,24,32,40,44,80,168,189,194,210,211,281,307,309,310,327,328,329,335,],[25,25,-4,-7,-5,-6,-2,-8,-122,-3,-18,-9,-24,-123,-188,25,25,25,25,25,25,25,25,]),'RBRACKET':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,118,120,152,166,167,171,173,175,177,178,183,185,198,201,202,203,204,205,206,207,208,218,240,247,259,260,262,263,265,266,269,276,280,294,299,301,305,306,319,321,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-115,-121,-168,-58,218,-33,-36,-37,-32,-34,-35,-38,-178,-58,247,-80,-91,-110,-105,-104,-169,-57,-179,-77,294,-59,-50,296,-47,-49,300,-83,306,-60,-40,-39,-84,-78,-41,-48,]),'OD':([44,94,99,158,210,216,],[-122,157,-143,-144,-123,258,]),'SEMI':([1,3,5,6,7,11,14,20,21,26,27,28,31,35,41,42,45,46,47,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,90,93,96,100,102,103,106,107,109,111,112,113,118,120,142,152,153,154,156,157,160,161,162,164,170,171,173,175,176,177,178,181,183,184,185,186,188,191,198,203,204,205,206,207,208,218,220,221,222,226,230,231,235,238,239,240,247,249,253,258,267,271,274,276,283,284,288,293,294,299,300,301,305,306,311,315,317,318,320,325,330,332,333,334,336,337,],[-17,44,-127,-53,-174,-52,-167,-54,-130,-126,-125,-124,-131,-166,-128,-129,-175,-119,-177,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-176,-150,-152,165,-19,168,189,-10,-85,-173,-25,194,-115,-121,-132,-168,210,211,-151,-148,-153,-155,-154,-165,-30,-33,-36,-37,-31,-32,-34,-44,-35,-29,-38,-43,-28,-12,-178,-80,-91,-110,-105,-104,-169,-57,-20,-23,-22,-42,-11,-13,-140,-26,-27,-179,-77,281,-163,-149,-21,-14,-141,-83,309,310,-156,-164,-60,-40,-45,-39,-84,-78,329,-157,-162,-158,-46,-189,-159,-198,-191,-190,-199,-192,]),'WHILE':([1,6,11,14,19,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,93,118,120,152,160,161,162,171,173,175,177,178,183,185,198,203,204,205,206,207,208,218,240,247,253,276,288,293,294,299,301,305,306,315,317,318,330,],[-17,-53,-52,-167,98,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,98,-115,-121,-168,-153,-155,-154,-33,-36,-37,-32,-34,-35,-38,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-163,-83,-156,-164,-60,-40,-39,-84,-78,-157,-162,-158,-159,]),'ABS':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[29,29,29,29,-4,-7,29,-5,-6,-2,29,-8,-122,29,29,29,29,-116,-117,-3,29,-133,29,29,29,29,-143,29,29,29,-98,-97,-99,-92,29,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,29,-107,29,-108,29,-106,-134,-138,-139,-135,-137,-136,-144,29,29,-18,29,-9,29,-24,29,29,-123,-188,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'DCL':([0,8,12,13,22,24,32,40,44,80,168,189,194,210,211,281,307,309,310,327,328,329,335,],[30,30,-4,-7,-5,-6,-2,-8,-122,-3,-18,-9,-24,-123,-188,30,30,30,30,30,30,30,30,]),'MODULO':([1,6,9,11,14,18,20,26,35,46,48,49,51,52,53,57,59,60,61,62,63,64,66,67,68,69,70,73,75,76,77,79,84,97,118,120,152,198,203,205,206,207,208,218,240,247,264,294,306,],[-17,-53,83,-52,-167,-51,-54,-55,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-51,-63,134,-55,-76,-68,-71,-74,-64,-69,-56,-51,-115,-121,-168,-178,-80,-110,134,134,-169,-57,-179,-77,-51,-60,-78,]),'END':([12,13,22,24,32,40,44,80,168,189,194,210,211,307,327,328,335,],[-4,-7,-5,-6,-2,-8,-122,-3,-18,-9,-24,-123,-188,325,333,334,337,]),'MINUS':([1,6,7,9,10,11,14,18,20,26,33,35,46,48,49,50,51,52,53,56,57,59,60,61,62,63,64,66,67,68,69,70,71,73,75,76,77,79,81,84,87,91,97,98,101,115,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,152,172,198,199,203,204,205,206,207,208,209,214,217,218,219,223,225,227,229,232,234,240,242,244,246,247,264,278,289,291,294,295,297,298,306,],[-17,-53,72,86,72,-52,-167,-51,-54,-55,72,-166,-119,-70,-118,72,-62,-120,-72,72,-75,-114,-109,-73,-67,-65,-66,-51,-63,-103,-55,-76,137,-68,-71,-74,-64,-69,72,-56,-133,72,-51,72,72,72,72,-115,-121,-98,-97,-99,-92,72,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,72,-107,72,-108,72,-106,-134,-138,-139,-135,-137,-136,-168,72,-178,72,-80,137,-110,-105,-104,-169,72,72,72,-57,72,72,72,72,72,72,72,-179,72,72,72,-77,-51,72,72,72,-60,72,72,72,-78,]),'AND':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,130,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'UPPER':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[17,17,17,17,-4,-7,17,-5,-6,-2,17,-8,-122,17,17,17,17,-116,-117,-3,17,-133,17,17,17,17,-143,17,17,17,-98,-97,-99,-92,17,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,17,-107,17,-108,17,-106,-134,-138,-139,-135,-137,-136,-144,17,17,-18,17,-9,17,-24,17,17,-123,-188,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'BOOL':([1,104,105,108,182,196,213,223,224,252,257,296,297,308,],[-17,-15,175,175,175,175,175,175,-16,175,175,175,175,175,]),'PROC':([92,],[155,]),'NE':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,122,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'LENGTH':([0,7,8,10,12,13,19,22,24,32,33,40,44,50,55,56,58,72,78,80,81,87,91,92,94,98,99,101,115,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,158,163,165,168,172,189,192,194,199,209,210,211,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[34,34,34,34,-4,-7,34,-5,-6,-2,34,-8,-122,34,34,34,34,-116,-117,-3,34,-133,34,34,34,34,-143,34,34,34,-98,-97,-99,-92,34,-100,-102,-93,-96,-94,-95,-101,-112,-113,-111,34,-107,34,-108,34,-106,-134,-138,-139,-135,-137,-136,-144,34,34,-18,34,-9,34,-24,34,34,-123,-188,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'LOC':([1,170,171,173,175,176,177,178,181,183,184,185,186,188,226,287,299,300,301,320,326,],[-17,-30,-33,-36,-37,-31,-32,-34,-44,-35,-29,-38,-43,-28,-42,313,-40,-45,-39,-46,331,]),'EXIT':([0,8,12,13,19,22,24,32,40,44,80,92,94,99,158,163,165,168,189,192,194,210,211,216,233,236,273,281,307,309,310,327,328,329,335,],[36,36,-4,-7,36,-5,-6,-2,-8,-122,-3,36,36,-143,-144,36,36,-18,-9,36,-24,-123,-188,36,36,36,36,36,36,36,36,36,36,36,36,]),'LAND':([1,6,9,11,14,18,20,26,35,46,48,49,51,52,53,57,59,60,61,62,63,64,66,67,68,69,70,71,73,75,76,77,79,84,97,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,85,-52,-167,-51,-54,-55,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-51,-63,-103,-55,-76,139,-68,-71,-74,-64,-69,-56,-51,-115,-121,-168,-178,-80,139,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'$end':([8,12,13,22,24,32,37,40,44,80,168,189,194,210,211,],[-1,-4,-7,-5,-6,-2,0,-8,-122,-3,-18,-9,-24,-123,-188,]),'COLON':([1,6,11,14,18,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,97,118,120,152,166,198,201,203,204,205,206,207,208,218,240,247,261,264,276,294,305,306,322,],[-17,-53,-52,-167,92,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,163,-115,-121,-168,217,-178,246,-80,-91,-110,-105,-104,-169,-57,-179,-77,295,-51,-83,-60,-84,-78,295,]),'RETURNS':([249,284,],[282,282,]),'ELSIF':([1,6,11,14,20,35,44,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,99,118,120,152,158,193,198,200,203,204,205,206,207,208,210,218,233,240,241,245,247,276,294,302,303,305,306,324,],[-17,-53,-52,-167,-54,-166,-122,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-143,-115,-121,-168,-144,234,-178,242,-80,-91,-110,-105,-104,-169,-123,-57,-142,-179,-86,278,-77,-83,-60,234,-88,-84,-78,-89,]),'TYPE':([0,8,12,13,22,24,32,40,44,80,168,189,194,210,211,281,307,309,310,327,328,329,335,],[38,38,-4,-7,-5,-6,-2,-8,-122,-3,-18,-9,-24,-123,-188,38,38,38,38,38,38,38,38,]),'IN':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,159,198,203,204,205,206,207,208,215,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,127,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,213,-178,-80,-91,-110,-105,-104,-169,257,-57,-179,-77,-51,-60,-78,]),'LT':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,264,294,306,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,126,-51,-63,-103,-55,-76,-90,-68,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-51,-60,-78,]),'CHAR':([1,104,105,108,182,196,213,223,224,252,257,296,297,308,],[-17,-15,185,185,185,185,185,185,-16,185,185,185,185,185,]),'REF':([1,104,105,108,182,196,224,252,296,308,],[-17,-15,182,182,182,182,-16,182,182,182,]),'CHARS':([1,104,105,108,182,196,224,252,296,308,],[-17,-15,187,187,187,187,-16,187,187,187,]),'DOWN':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,118,120,152,159,198,203,204,205,206,207,208,218,240,247,255,256,276,290,294,305,306,314,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-115,-121,-168,215,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-160,292,-83,316,-60,-84,-78,-161,]),'TIMES':([1,6,9,11,14,18,20,26,35,46,48,49,51,52,53,57,59,60,61,62,63,64,66,67,68,69,70,73,75,76,77,79,84,97,118,120,152,198,203,205,206,207,208,218,240,247,264,294,306,],[-17,-53,89,-52,-167,-51,-54,-55,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-51,-63,135,-55,-76,-68,-71,-74,-64,-69,-56,-51,-115,-121,-168,-178,-80,-110,135,135,-169,-57,-179,-77,-51,-60,-78,]),'TO':([1,6,11,14,20,35,46,48,49,51,52,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,84,118,120,152,198,203,204,205,206,207,208,218,240,247,255,256,276,290,292,294,305,306,314,316,],[-17,-53,-52,-167,-54,-166,-119,-70,-118,-62,-120,-72,-75,-114,-109,-73,-67,-65,-66,-81,-51,-63,-103,-55,-76,-90,-68,-82,-71,-74,-64,-69,-56,-115,-121,-168,-178,-80,-91,-110,-105,-104,-169,-57,-179,-77,-160,291,-83,291,291,-60,-84,-78,-161,291,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'result':([7,10,],[45,90,]),'character_string_literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'expression_list':([101,117,],[167,202,]),'boolean_mode':([105,108,182,196,213,223,252,257,296,297,308,],[171,171,171,171,171,171,171,171,171,171,171,]),'value_array_element':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'array_element':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'expression':([7,10,33,50,56,81,91,98,101,115,117,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[47,47,109,109,119,142,149,109,166,149,201,221,241,149,255,259,260,261,221,261,261,271,109,109,277,280,109,314,317,319,261,322,]),'procedure_call':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'mode_definition':([38,195,],[112,238,]),'composite_mode':([105,108,182,196,252,296,308,],[176,176,176,176,176,176,176,]),'constant_expression':([172,225,],[222,267,]),'iteration':([95,],[160,]),'location':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[9,49,9,49,9,49,49,49,49,120,49,49,9,9,49,49,49,49,49,49,49,49,9,9,49,9,49,49,49,9,49,49,49,49,49,49,49,9,49,9,49,49,49,9,49,9,49,49,49,49,49,9,9,9,9,9,9,9,]),'procedure_definition':([92,],[154,]),'list_index_mode':([223,],[263,]),'literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,269,51,51,51,51,51,51,51,51,51,51,51,51,]),'array_location':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'dereferenced_reference':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'monadic_operator':([7,10,33,50,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'boolean_expression':([33,50,98,234,242,278,],[110,116,164,272,275,304,]),'while_control':([19,93,],[96,156,]),'discrete_range_mode':([105,108,182,196,213,223,252,257,296,297,308,],[183,183,183,183,183,183,183,183,183,183,183,]),'newmode_list':([38,],[113,]),'elsif_expression':([200,],[245,]),'boolean_literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'string_concatenation_operator':([71,204,],[138,138,]),'synonym_list':([25,],[103,]),'string_mode':([105,108,182,196,252,296,308,],[186,186,186,186,186,186,186,]),'integer_literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'identifier':([0,7,8,10,19,25,30,33,36,38,50,55,56,58,81,91,92,94,95,98,101,105,108,115,117,125,136,138,140,163,165,169,172,179,182,190,192,195,196,199,209,212,213,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,252,257,273,278,281,285,289,291,295,296,297,298,307,308,309,310,327,328,329,335,],[18,66,18,66,97,104,104,66,111,104,66,66,66,66,66,66,66,97,159,66,66,188,188,66,66,66,66,66,66,66,97,104,66,224,188,104,97,104,188,66,66,104,254,66,97,66,66,264,66,66,66,66,97,66,97,66,66,66,188,254,97,66,18,104,66,66,66,188,264,66,18,188,18,18,18,18,18,18,]),'arithmetic_additive_operator':([71,204,],[140,140,]),'arithmetic_multiplicative_operator':([68,206,207,],[136,136,136,]),'synonym_definition':([25,169,],[102,220,]),'relational_operator':([65,],[124,]),'control_part':([19,],[100,]),'if_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'synonym_statement':([0,8,281,307,309,310,327,328,329,335,],[22,22,22,22,22,22,22,22,22,22,]),'newmode_statement':([0,8,281,307,309,310,327,328,329,335,],[24,24,24,24,24,24,24,24,24,24,]),'operand2':([7,10,33,50,56,81,91,98,101,115,117,125,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[68,68,68,68,68,68,68,68,68,68,68,68,206,207,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'call_action':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[26,69,26,69,26,69,69,69,69,69,69,69,26,26,69,69,69,69,69,69,69,69,26,26,69,26,69,69,69,26,69,69,69,69,69,69,69,26,69,26,69,69,69,26,69,26,69,69,69,69,69,26,26,26,26,26,26,26,]),'return_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'integer_mode':([105,108,182,196,213,223,252,257,296,297,308,],[177,177,177,177,177,177,177,177,177,177,177,]),'operand1':([7,10,33,50,56,81,91,98,101,115,117,125,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[71,71,71,71,71,71,71,71,71,71,71,204,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'parameter_list':([91,115,298,],[150,197,150,]),'character_literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'parameter':([91,115,209,298,],[151,151,248,151,]),'operator1':([65,],[125,]),'literal_range':([223,227,229,297,298,],[262,268,270,262,270,]),'for_control':([19,],[93,]),'then_expression':([116,275,304,],[200,303,324,]),'discrete_mode':([105,108,182,196,213,223,252,257,296,297,308,],[184,184,184,184,253,266,184,293,184,266,184,]),'value_array_slice':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'else_expression':([200,245,],[243,279,]),'range_enumeration':([95,],[161,]),'end_value':([256,290,292,316,],[288,315,318,330,]),'declaration':([30,190,],[107,230,]),'identifier_list':([25,30,38,169,190,195,212,285,],[105,108,114,105,108,114,252,252,]),'reference_mode':([105,108,182,196,252,296,308,],[170,170,170,170,170,170,170,]),'action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[3,3,3,153,3,153,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'referenced_location':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'exit_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'parameter_spec':([252,],[286,]),'program':([0,],[37,]),'statement_list':([0,281,309,310,329,],[8,307,327,328,335,]),'action_statement_list':([19,165,192,236,],[94,216,233,273,]),'formal_parameter':([212,285,],[251,312,]),'character_mode':([105,108,182,196,213,223,252,257,296,297,308,],[178,178,178,178,178,178,178,178,178,178,178,]),'step_enumeration':([95,],[162,]),'array_primitive_value':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'procedure_statement':([0,8,281,307,309,310,327,328,329,335,],[13,13,13,13,13,13,13,13,13,13,]),'array_mode':([105,108,182,196,252,296,308,],[181,181,181,181,181,181,181,]),'builtin_call':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'operand4':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[59,59,59,59,118,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'operand3':([7,10,33,50,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[60,60,60,60,60,60,60,60,60,60,60,60,205,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'primitive_value':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'membership_operator':([65,],[128,]),'operand0':([7,10,33,50,56,81,91,98,101,115,117,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'step_value':([256,],[290,]),'array_slice':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'assignment_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'bracketed_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'formal_parameter_list':([212,],[250,]),'else_clause':([193,302,],[237,323,]),'parenthesized_expression':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'do_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'statement':([0,8,281,307,309,310,327,328,329,335,],[32,80,32,80,32,32,80,80,32,80,]),'mode':([105,108,182,196,252,296,308,],[180,191,226,239,287,320,326,]),'result_action':([0,8,19,92,94,163,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'then_clause':([110,272,],[193,302,]),'conditional_expression':([7,10,33,50,56,81,91,98,101,115,117,172,199,209,214,217,219,223,225,227,229,232,234,242,244,246,278,289,291,295,297,298,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'initialization':([191,],[231,]),'result_spec':([249,284,],[283,311,]),'index_mode':([223,297,],[265,321,]),'declaration_statement':([0,8,281,307,309,310,327,328,329,335,],[12,12,12,12,12,12,12,12,12,12,]),'assigning_operator':([9,],[81,]),'builtin_name':([0,7,8,10,19,33,50,55,56,58,81,91,92,94,98,101,115,117,125,136,138,140,163,165,172,192,199,209,214,216,217,219,223,225,227,229,232,233,234,236,242,244,246,273,278,281,289,291,295,297,298,307,309,310,327,328,329,335,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'action_statement':([0,8,19,94,165,192,216,233,236,273,281,307,309,310,327,328,329,335,],[40,40,99,158,99,99,158,158,99,158,40,40,40,40,40,40,40,40,]),'declaration_list':([30,],[106,]),'empty_literal':([7,10,33,50,55,56,81,91,98,101,115,117,125,136,138,140,172,199,209,214,217,219,223,225,227,228,229,232,234,242,244,246,278,289,291,295,297,298,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'start_value':([214,],[256,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',295),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',302),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',303),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',312),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',319),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',325),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',326),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',328),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',335),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',336),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',339),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',346),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',353),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',354),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',361),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',368),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',375),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',382),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',389),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',396),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',402),
  ('expression -> operand0','expression',1,'p_expression','parser.py',409),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',410),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',417),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',418),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',428),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',435),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',442),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',449),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',450),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',461),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',462),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',473),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',474),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',480),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',481),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',494),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',501),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',502),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',503),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',514),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',515),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',522),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',529),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',530),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',541),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',542),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',549),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',550),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',561),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',562),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',569),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',570),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',571),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',578),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',585),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',586),
  ('action -> bracketed_action','action',1,'p_action','parser.py',597),
  ('action -> assignment_action','action',1,'p_action','parser.py',598),
  ('action -> call_action','action',1,'p_action','parser.py',599),
  ('action -> exit_action','action',1,'p_action','parser.py',600),
  ('action -> return_action','action',1,'p_action','parser.py',601),
  ('action -> result_action','action',1,'p_action','parser.py',602),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',609),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',610),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',617),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',624),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',625),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',639),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',640),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',650),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',656),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',657),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',665),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',666),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',667),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',679),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',680),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',690),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',691),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',692),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',702),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',709),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',710),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',717),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',718),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',719),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',720),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',735),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',741),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',747),
  ('range_enumeration -> identifier IN discrete_mode','range_enumeration',3,'p_range_enumeration','parser.py',753),
  ('range_enumeration -> identifier DOWN IN discrete_mode','range_enumeration',4,'p_range_enumeration','parser.py',754),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',764),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',771),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',772),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',779),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',780),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',789),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',790),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',799),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',805),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',812),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',813),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',822),
  ('result -> expression','result',1,'p_result','parser.py',829),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',835),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',836),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',847),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',848),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',849),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',850),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',854),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',860),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',867),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',868),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',869),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',870),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',885),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',886),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',895),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',902),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',903),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',913),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',914),
]
