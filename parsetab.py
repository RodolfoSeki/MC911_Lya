
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEleftGTGEQLTLEQleftPLUSMINUSleftTIMESDIVIDEMODULOID ICONST CCONST SCONST PLUS MINUS TIMES DIVIDE MODULO EQUALS SEMI ARROW LPAREN RPAREN LBRACKET RBRACKET AND LAND OR EQ NE GT GEQ LT LEQ COLON COMMA NOT LENGTH LOWER RETURNS THEN EXIT BY LOC NUM TYPE READ IN END FALSE CHARS IF PRINT TRUE RETURN NULL CHAR TO ELSE WHILE FOR DCL RESULT ASC BOOL SYN INT REF DOWN ELSIF ABS UPPER OD ARRAY PROC FI DOprogram : statement_liststatement_list : statement\n                          | statement_list statement\n        statement : declaration_statement\n                     | synonym_statement\n                     | newmode_statement\n                     | procedure_statement\n                     | action_statement\n        declaration_statement : DCL declaration_list SEMIdeclaration_list : declaration\n                            | declaration_list COMMA declaration\n        declaration : identifier_list mode \n                       | identifier_list mode initialization\n        initialization : EQUALS expression\n        identifier_list : identifier\n                           | identifier_list COMMA identifier\n        identifier : ID  synonym_statement : SYN synonym_list SEMI\n         synonym_list : synonym_definition \n                         | synonym_list COMMA synonym_definition\n         synonym_definition : identifier_list mode EQUALS constant_expression\n                               | identifier_list EQUALS constant_expression\n         constant_expression : expression\n         newmode_statement : TYPE newmode_list SEMI\n         newmode_list : mode_definition \n                         | newmode_list COMMA mode_definition\n         mode_definition : identifier_list EQUALS mode\n         mode : identifier\n                 | discrete_mode\n                 | reference_mode\n                 | composite_mode\n         discrete_mode : integer_mode\n                          | boolean_mode\n                          | character_mode\n                          | discrete_range_mode\n         integer_mode : INT\n         boolean_mode : BOOL\n         character_mode : CHAR\n         discrete_range_mode : identifier LPAREN literal_range RPAREN\n                                | discrete_mode LPAREN literal_range RPAREN\n         literal_range : expression COLON expression\n         reference_mode : REF mode\n         composite_mode : string_mode\n                           | array_mode\n         string_mode : CHARS LBRACKET integer_literal RBRACKET\n         array_mode : ARRAY LBRACKET list_index_mode RBRACKET mode\n         list_index_mode : index_mode\n                            | list_index_mode COMMA index_mode\n         index_mode : discrete_mode\n                       | literal_range\n         location : identifier\n                     | dereferenced_reference\n                     | array_element\n                     | array_slice\n                     | call_action\n         dereferenced_reference : location ARROW\n         array_element : array_location LBRACKET expression_list RBRACKET\n         expression_list : expression\n                            | expression_list COMMA expression\n         array_slice : array_location LBRACKET expression COLON expression RBRACKET\n         array_location : location\n         primitive_value : literal\n                            | value_array_element\n                            | value_array_slice\n                            | parenthesized_expression\n         literal : integer_literal\n                    | boolean_literal\n                    | character_literal\n                    | empty_literal\n                    | character_string_literal\n         integer_literal : ICONST\n         boolean_literal : FALSE\n                            | TRUE\n         character_literal : CCONST\n         empty_literal : NULL\n         character_string_literal : SCONST\n         value_array_element : array_primitive_value LBRACKET expression_list RBRACKET\n         value_array_slice : array_primitive_value LBRACKET expression COLON expression RBRACKET\n         array_primitive_value : primitive_value\n         parenthesized_expression : LPAREN expression RPAREN\n         expression : operand0\n                       | conditional_expression\n         conditional_expression : IF boolean_expression then_expression else_expression FI\n                                   | IF boolean_expression then_expression elsif_expression else_expression FI\n         boolean_expression : expression\n         then_expression : THEN expression\n         else_expression : ELSE expression\n         elsif_expression : ELSIF boolean_expression then_expression\n                             | elsif_expression ELSIF boolean_expression then_expression\n         operand0 : operand1\n                     | operand0 operator1 operand1\n         operator1 : relational_operator\n                      | membership_operator\n         relational_operator : AND\n                                | OR \n                                | EQ \n                                | NE\n                                | GT\n                                | GEQ\n                                | LT\n                                | LEQ\n         membership_operator : IN\n         operand1 : operand2\n                     | operand1 arithmetic_additive_operator operand2\n                     | operand1 string_concatenation_operator operand2\n         arithmetic_additive_operator : PLUS\n                                         | MINUS\n         string_concatenation_operator : LAND\n         operand2 : operand3 \n                     | operand2 arithmetic_multiplicative_operator operand3\n         arithmetic_multiplicative_operator : TIMES\n                                               | DIVIDE\n                                               | MODULO \n         operand3 : operand4\n                     | monadic_operator operand4\n         monadic_operator : MINUS\n                             | NOT \n         operand4 : location\n                     | referenced_location\n                     | primitive_value\n         referenced_location : ARROW location\n         action_statement : action SEMI\n                             | identifier COLON action SEMI\n         action : bracketed_action\n                   | assignment_action\n                   | call_action\n                   | exit_action\n                   | return_action\n                   | result_action\n         bracketed_action : if_action\n                             | do_action\n         assignment_action : location assigning_operator expression\n         assigning_operator : EQUALS\n                               | PLUS EQUALS\n                               | MINUS EQUALS\n                               | TIMES EQUALS\n                               | DIVIDE EQUALS\n                               | MODULO EQUALS\n                               | LAND EQUALS\n         if_action : IF boolean_expression then_clause FI\n                      | IF boolean_expression then_clause else_clause FI\n         then_clause : THEN action_statement_list\n        action_statement_list : action_statement\n                                 | action_statement_list action_statement\n         else_clause : ELSE action_statement_list\n                        | ELSIF boolean_expression then_clause \n                        | ELSIF boolean_expression then_clause else_clause\n         do_action : DO action_statement_list OD\n                      | DO control_part SEMI action_statement_list OD\n         control_part : for_control \n                         | for_control while_control\n                         | while_control\n         for_control : FOR iteration\n         iteration : step_enumeration\n                      | range_enumeration\n         step_enumeration : identifier EQUALS start_value end_value\n                             | identifier EQUALS start_value step_value end_value\n                             | identifier EQUALS start_value DOWN end_value\n                             | identifier EQUALS start_value step_value DOWN end_value\n         start_value : expression\n         step_value : BY expression\n         end_value : TO expression\n         range_enumeration : identifier IN discrete_range_mode \n                              | identifier DOWN IN discrete_range_mode\n         while_control : WHILE boolean_expression\n         call_action : procedure_call\n                        | builtin_call\n         procedure_call : identifier LPAREN  RPAREN\n                           | identifier LPAREN parameter_list RPAREN\n         parameter_list : parameter\n                           | parameter_list COMMA parameter\n         parameter : expression\n         exit_action : EXIT identifier\n         return_action : RETURN \n                          | RETURN result\n         result_action : RESULT result\n         result : expression\n         builtin_call : builtin_name LPAREN RPAREN\n                         | builtin_name LPAREN parameter_list RPAREN\n         builtin_name : ABS\n                         | ASC\n                         | NUM\n                         | UPPER\n                         | LOWER\n                         | LENGTH\n                         | READ\n                         | PRINT\n         procedure_statement : identifier COLON procedure_definition SEMI\n         procedure_definition : PROC LPAREN RPAREN SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END\n                                 | PROC LPAREN RPAREN result_spec SEMI statement_list END\n                                 | PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END\n         formal_parameter_list : formal_parameter \n                                  | formal_parameter_list COMMA formal_parameter\n         formal_parameter : identifier_list parameter_spec\n         parameter_spec : mode \n                           | mode LOC\n         result_spec : RETURNS LPAREN mode RPAREN\n                        | RETURNS LPAREN mode LOC RPAREN\n        '
    
_lr_action_items = {'TIMES':([3,6,8,15,20,25,29,34,43,54,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,108,118,143,166,197,200,213,214,216,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,97,-55,-67,-51,-66,-72,-109,-73,-63,-76,-68,-119,161,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-51,-168,-115,-121,-178,-169,161,161,-110,-80,-57,-179,-51,-77,-60,-78,]),'NOT':([16,26,27,45,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[52,52,52,52,52,52,-133,52,52,52,52,-108,-107,52,52,-106,-92,-93,-100,-101,-102,52,-98,-97,-94,-95,-96,-99,-111,-113,-112,52,52,52,-136,-134,-137,-135,-138,-139,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'EQUALS':([3,6,8,15,20,25,29,34,43,50,57,88,90,97,98,99,100,103,104,105,108,118,123,124,125,126,128,129,130,132,133,135,136,137,138,139,175,192,197,200,208,209,237,240,283,285,286,303,313,],[-167,-17,-51,-166,-54,-53,-52,101,-55,-15,-51,171,174,178,179,-56,180,182,183,184,-51,-168,-37,-29,-36,-35,207,-34,-30,-43,-32,-28,-33,-31,-38,-44,227,235,-178,-169,-42,-16,-57,-179,-40,-45,-39,-60,-46,]),'THEN':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,92,93,99,118,143,165,166,197,200,213,214,215,216,219,237,240,261,265,290,291,303,316,317,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,176,-85,-56,-168,-115,218,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-77,176,-83,218,-60,-84,218,-78,]),'TO':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,118,143,166,197,200,213,214,215,216,219,237,240,261,271,272,290,299,301,303,316,318,322,324,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-77,298,-160,-83,298,298,-60,-84,-78,-161,298,]),'MINUS':([3,6,8,15,16,20,25,26,27,29,34,43,45,54,55,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,83,85,99,101,102,107,108,114,115,118,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,174,178,179,180,182,183,184,197,199,200,204,207,210,211,213,214,215,216,218,219,227,231,235,237,238,239,240,252,257,258,261,262,284,287,289,294,298,300,303,318,],[-167,-17,-51,-166,53,-54,-53,53,53,-52,103,-55,53,-67,145,-51,-66,-72,-109,-73,-63,-76,-68,-119,-103,-70,-71,-64,-69,-114,53,-62,53,-75,-65,-118,-120,-74,-55,-56,-133,53,53,-51,53,53,-168,-115,-108,-107,53,53,-106,-92,-93,-100,-101,-102,53,-98,-97,-94,-95,-96,-99,-111,-113,-112,53,-121,53,53,-136,-134,-137,-135,-138,-139,-178,53,-169,53,53,53,53,-104,-105,145,-110,53,-80,53,53,53,-57,53,53,-179,-51,53,53,-77,53,53,53,53,53,53,53,-60,-78,]),'OD':([44,111,112,194,201,233,],[-122,193,-143,-144,-123,267,]),'END':([2,17,31,32,35,41,44,95,141,169,172,201,202,309,326,327,332,],[-6,-7,-2,-4,-8,-5,-122,-3,-9,-24,-18,-123,-188,329,333,334,337,]),'UPPER':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[4,-6,4,-7,4,4,4,-2,-4,-8,4,-5,-122,4,4,4,-117,-116,4,4,4,-3,-133,4,4,4,-143,4,4,-9,-108,-107,4,4,-106,-92,-93,-100,-101,-102,4,-98,-97,-94,-95,-96,-99,-111,-113,-112,4,4,-24,-18,4,4,-136,-134,-137,-135,-138,-139,4,4,-144,4,-123,-188,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'CHARS':([6,47,50,90,131,171,209,244,288,308,],[-17,127,-15,127,127,127,-16,127,127,127,]),'ID':([0,2,6,10,16,17,21,24,26,27,28,31,32,33,35,37,41,44,45,46,47,50,51,52,53,74,76,77,90,95,101,102,107,110,111,112,114,115,131,134,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,170,171,172,173,174,176,178,179,180,182,183,184,187,188,194,199,201,202,203,204,207,209,210,211,218,227,228,231,232,233,234,235,238,239,244,257,258,262,266,273,276,280,284,287,288,289,294,298,300,306,307,308,309,325,326,327,332,],[6,-6,-17,6,6,-7,6,6,6,6,6,-2,-4,6,-8,6,-5,-122,6,6,6,-15,6,-117,-116,6,6,6,6,-3,-133,6,6,6,6,-143,6,6,6,6,-9,6,-108,-107,6,6,-106,-92,-93,-100,-101,-102,6,-98,-97,-94,-95,-96,-99,-111,-113,-112,6,6,-24,6,6,-18,6,6,6,-136,-134,-137,-135,-138,-139,6,6,-144,6,-123,-188,6,6,6,-16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQ':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,159,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'$end':([1,2,17,28,31,32,35,41,44,95,141,169,172,201,202,],[0,-6,-7,-1,-2,-4,-8,-5,-122,-3,-9,-24,-18,-123,-188,]),'DCL':([0,2,17,28,31,32,35,41,44,95,141,169,172,201,202,280,306,307,309,325,326,327,332,],[10,-6,-7,10,-2,-4,-8,-5,-122,-3,-9,-24,-18,-123,-188,10,10,10,10,10,10,10,10,]),'REF':([6,47,50,90,131,171,209,244,288,308,],[-17,131,-15,131,131,131,-16,131,131,131,]),'FALSE':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[59,59,59,59,59,-117,-116,59,59,-133,59,59,59,59,-108,-107,59,59,-106,-92,-93,-100,-101,-102,59,-98,-97,-94,-95,-96,-99,-111,-113,-112,59,59,59,-136,-134,-137,-135,-138,-139,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ELSE':([3,6,15,20,25,29,44,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,112,118,143,166,177,194,197,200,201,213,214,215,216,217,219,228,237,240,259,260,261,290,296,303,315,316,318,330,],[-167,-17,-166,-54,-53,-52,-122,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-143,-168,-115,-121,232,-144,-178,-169,-123,-104,-105,-91,-110,258,-80,-142,-57,-179,258,-86,-77,-83,232,-60,-88,-84,-78,-89,]),'LAND':([3,6,8,15,20,25,29,34,43,54,55,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,108,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,105,-55,-67,144,-51,-66,-72,-109,-73,-63,-76,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-51,-168,-115,-121,-178,-169,-104,-105,144,-110,-80,-57,-179,-51,-77,-60,-78,]),'ARRAY':([6,47,50,90,131,171,209,244,288,308,],[-17,140,-15,140,140,140,-16,140,140,140,]),'DO':([0,2,17,28,31,32,35,37,41,44,46,95,111,112,141,169,172,176,187,188,194,201,202,228,232,233,266,280,306,307,309,325,326,327,332,],[37,-6,-7,37,-2,-4,-8,37,-5,-122,37,-3,37,-143,-9,-24,-18,37,37,37,-144,-123,-188,37,37,37,37,37,37,37,37,37,37,37,37,]),'READ':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[12,-6,12,-7,12,12,12,-2,-4,-8,12,-5,-122,12,12,12,-117,-116,12,12,12,-3,-133,12,12,12,-143,12,12,-9,-108,-107,12,12,-106,-92,-93,-100,-101,-102,12,-98,-97,-94,-95,-96,-99,-111,-113,-112,12,12,-24,-18,12,12,-136,-134,-137,-135,-138,-139,12,12,-144,12,-123,-188,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SEMI':([3,5,6,7,9,11,14,15,20,22,25,27,29,36,38,43,48,49,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,86,87,89,91,93,94,96,99,106,109,113,118,120,121,123,124,125,126,128,129,130,132,133,135,136,137,138,139,143,166,181,185,186,189,190,191,193,197,200,206,208,212,213,214,215,216,219,222,223,224,225,226,229,237,240,243,249,261,263,264,267,270,277,278,283,285,286,290,297,302,303,305,313,316,318,320,321,323,329,331,333,334,336,337,338,],[-167,-131,-17,44,-127,-128,-125,-166,-54,-129,-53,-174,-52,-124,-130,-126,-10,141,-67,-90,-177,-51,-66,-72,-109,-73,-176,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-25,169,172,-19,-85,-175,-173,-56,-150,188,-152,-168,201,202,-37,-29,-36,-35,-12,-34,-30,-43,-32,-28,-33,-31,-38,-44,-115,-121,-132,-151,-165,-155,-153,-154,-148,-178,-169,-13,-42,-11,-104,-105,-91,-110,-80,-26,-27,-20,-22,-23,-140,-57,-179,280,-14,-77,-21,-141,-149,-163,306,307,-40,-45,-39,-83,-156,-164,-60,325,-46,-84,-78,-162,-158,-157,-189,-159,-190,-191,-198,-192,-199,]),'RESULT':([0,2,17,28,31,32,35,37,41,44,46,95,111,112,141,169,172,176,187,188,194,201,202,228,232,233,266,280,306,307,309,325,326,327,332,],[16,-6,-7,16,-2,-4,-8,16,-5,-122,16,-3,16,-143,-9,-24,-18,16,16,16,-144,-123,-188,16,16,16,16,16,16,16,16,16,16,16,16,]),'SCONST':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[64,64,64,64,64,-117,-116,64,64,-133,64,64,64,64,-108,-107,64,64,-106,-92,-93,-100,-101,-102,64,-98,-97,-94,-95,-96,-99,-111,-113,-112,64,64,64,-136,-134,-137,-135,-138,-139,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'MODULO':([3,6,8,15,20,25,29,34,43,54,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,108,118,143,166,197,200,213,214,216,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,104,-55,-67,-51,-66,-72,-109,-73,-63,-76,-68,-119,162,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-51,-168,-115,-121,-178,-169,162,162,-110,-80,-57,-179,-51,-77,-60,-78,]),'IN':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,192,197,200,213,214,215,216,219,236,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,153,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,234,-178,-169,-104,-105,-91,-110,-80,273,-57,-179,-51,-77,-60,-78,]),'AND':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,157,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'ABS':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[19,-6,19,-7,19,19,19,-2,-4,-8,19,-5,-122,19,19,19,-117,-116,19,19,19,-3,-133,19,19,19,-143,19,19,-9,-108,-107,19,19,-106,-92,-93,-100,-101,-102,19,-98,-97,-94,-95,-96,-99,-111,-113,-112,19,19,-24,-18,19,19,-136,-134,-137,-135,-138,-139,19,19,-144,19,-123,-188,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'RETURNS':([243,277,],[279,279,]),'GEQ':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,160,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'ICONST':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,205,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[70,70,70,70,70,-117,-116,70,70,-133,70,70,70,70,-108,-107,70,70,-106,-92,-93,-100,-101,-102,70,-98,-97,-94,-95,-96,-99,-111,-113,-112,70,70,70,-136,-134,-137,-135,-138,-139,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'PROC':([46,],[122,]),'FOR':([37,],[110,]),'ASC':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[13,-6,13,-7,13,13,13,-2,-4,-8,13,-5,-122,13,13,13,-117,-116,13,13,13,-3,-133,13,13,13,-143,13,13,-9,-108,-107,13,13,-106,-92,-93,-100,-101,-102,13,-98,-97,-94,-95,-96,-99,-111,-113,-112,13,13,-24,-18,13,13,-136,-134,-137,-135,-138,-139,13,13,-144,13,-123,-188,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'LPAREN':([4,6,8,12,13,16,18,19,23,26,27,30,40,42,45,51,52,53,57,74,77,101,102,107,108,114,115,122,123,124,125,126,129,133,135,136,138,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,252,254,257,258,262,268,269,270,279,283,284,286,287,289,294,298,300,302,],[-183,-17,45,-186,-181,77,-184,-180,-182,77,77,-185,115,-187,77,77,-117,-116,45,77,77,-133,77,77,45,77,77,203,-37,204,-36,-35,-34,-32,210,-33,-38,-108,-107,77,77,-106,-92,-93,-100,-101,-102,77,-98,-97,-94,-95,-96,-99,-111,-113,-112,77,77,77,-136,-134,-137,-135,-138,-139,77,77,77,77,77,77,77,77,77,77,77,287,204,77,77,77,210,204,-35,308,-40,77,-39,77,77,77,77,77,-35,]),'LOC':([6,123,124,125,126,129,130,132,133,135,136,137,138,139,208,281,283,285,286,313,328,],[-17,-37,-29,-36,-35,-34,-30,-43,-32,-28,-33,-31,-38,-44,-42,310,-40,-45,-39,-46,335,]),'ELSIF':([3,6,15,20,25,29,44,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,112,118,143,166,177,194,197,200,201,213,214,215,216,217,219,228,237,240,259,260,261,290,296,303,315,316,318,330,],[-167,-17,-166,-54,-53,-52,-122,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-143,-168,-115,-121,231,-144,-178,-169,-123,-104,-105,-91,-110,257,-80,-142,-57,-179,294,-86,-77,-83,231,-60,-88,-84,-78,-89,]),'FI':([3,6,15,20,25,29,44,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,112,118,143,166,177,194,197,200,201,213,214,215,216,219,228,230,237,240,256,261,266,290,292,293,296,303,316,318,319,],[-167,-17,-166,-54,-53,-52,-122,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-143,-168,-115,-121,229,-144,-178,-169,-123,-104,-105,-91,-110,-80,-142,264,-57,-179,290,-77,-145,-83,-87,316,-146,-60,-84,-78,-147,]),'SYN':([0,2,17,28,31,32,35,41,44,95,141,169,172,201,202,280,306,307,309,325,326,327,332,],[24,-6,-7,24,-2,-4,-8,-5,-122,-3,-9,-24,-18,-123,-188,24,24,24,24,24,24,24,24,]),'RPAREN':([3,6,15,20,25,29,45,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,115,116,117,118,119,123,124,125,126,129,130,132,133,135,136,137,138,139,143,166,167,197,198,200,203,208,213,214,215,216,219,237,240,241,242,245,246,250,261,281,282,283,285,286,287,290,303,304,310,311,312,313,316,318,328,335,],[-167,-17,-166,-54,-53,-52,118,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,197,-172,-170,-168,200,-37,-29,-36,-35,-34,-30,-43,-32,-28,-33,-31,-38,-44,-115,-121,219,-178,240,-169,243,-42,-104,-105,-91,-110,-80,-57,-179,-171,277,-193,283,286,-77,-196,-195,-40,-45,-39,118,-83,-60,-194,-197,-41,-172,-46,-84,-78,336,338,]),'INT':([6,47,50,90,131,171,209,211,234,244,273,288,289,308,],[-17,125,-15,125,125,125,-16,125,125,125,125,125,125,125,]),'IF':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,74,77,95,101,102,107,111,112,114,115,141,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[26,-6,74,-7,74,74,26,-2,-4,-8,26,-5,-122,74,26,74,74,-3,-133,74,74,26,-143,74,74,-9,74,-24,-18,74,26,-136,-134,-137,-135,-138,-139,26,26,-144,74,-123,-188,74,74,74,74,74,74,26,74,26,26,74,74,74,74,74,74,26,26,74,74,74,74,74,74,26,26,26,26,26,26,26,]),'RETURN':([0,2,17,28,31,32,35,37,41,44,46,95,111,112,141,169,172,176,187,188,194,201,202,228,232,233,266,280,306,307,309,325,326,327,332,],[27,-6,-7,27,-2,-4,-8,27,-5,-122,27,-3,27,-143,-9,-24,-18,27,27,27,-144,-123,-188,27,27,27,27,27,27,27,27,27,27,27,27,]),'NE':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,156,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'GT':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,155,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'LENGTH':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[30,-6,30,-7,30,30,30,-2,-4,-8,30,-5,-122,30,30,30,-117,-116,30,30,30,-3,-133,30,30,30,-143,30,30,-9,-108,-107,30,30,-106,-92,-93,-100,-101,-102,30,-98,-97,-94,-95,-96,-99,-111,-113,-112,30,30,-24,-18,30,30,-136,-134,-137,-135,-138,-139,30,30,-144,30,-123,-188,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'TRUE':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[61,61,61,61,61,-117,-116,61,61,-133,61,61,61,61,-108,-107,61,61,-106,-92,-93,-100,-101,-102,61,-98,-97,-94,-95,-96,-99,-111,-113,-112,61,61,61,-136,-134,-137,-135,-138,-139,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'BOOL':([6,47,50,90,131,171,209,211,234,244,273,288,289,308,],[-17,123,-15,123,123,123,-16,123,123,123,123,123,123,123,]),'DOWN':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,118,143,166,192,197,200,213,214,215,216,219,237,240,261,271,272,290,301,303,316,318,322,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-168,-115,-121,236,-178,-169,-104,-105,-91,-110,-80,-57,-179,-77,299,-160,-83,324,-60,-84,-78,-161,]),'NULL':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[78,78,78,78,78,-117,-116,78,78,-133,78,78,78,78,-108,-107,78,78,-106,-92,-93,-100,-101,-102,78,-98,-97,-94,-95,-96,-99,-111,-113,-112,78,78,78,-136,-134,-137,-135,-138,-139,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'TYPE':([0,2,17,28,31,32,35,41,44,95,141,169,172,201,202,280,306,307,309,325,326,327,332,],[21,-6,-7,21,-2,-4,-8,-5,-122,-3,-9,-24,-18,-123,-188,21,21,21,21,21,21,21,21,]),'LBRACKET':([3,6,8,15,20,25,29,34,39,43,54,57,58,59,61,63,64,66,69,70,71,72,75,78,79,80,81,82,83,85,99,108,118,127,140,166,197,200,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,-61,114,-55,-67,-51,-66,-72,-73,-63,-76,-68,-70,-71,-64,-69,-62,-75,-65,-61,-79,168,-74,-55,-56,-51,-168,205,211,-61,-178,-169,-80,-57,-179,-51,-77,-60,-78,]),'DIVIDE':([3,6,8,15,20,25,29,34,43,54,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,108,118,143,166,197,200,213,214,216,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,100,-55,-67,-51,-66,-72,-109,-73,-63,-76,-68,-119,163,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-51,-168,-115,-121,-178,-169,163,163,-110,-80,-57,-179,-51,-77,-60,-78,]),'LT':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,151,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'COMMA':([3,6,15,20,25,29,47,48,49,50,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,86,87,88,89,90,91,99,116,117,118,119,123,124,125,126,128,129,130,132,133,135,136,137,138,139,143,166,195,196,197,198,200,206,208,209,212,213,214,215,216,219,220,221,222,223,224,225,226,237,240,241,242,244,245,249,251,253,254,255,261,263,274,281,282,283,285,286,290,303,304,310,311,312,313,314,316,318,],[-167,-17,-166,-54,-53,-52,134,-10,142,-15,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-25,170,134,173,134,-19,-56,-172,-170,-168,199,-37,-29,-36,-35,-12,-34,-30,-43,-32,-28,-33,-31,-38,-44,-115,-121,238,-58,-178,199,-169,-13,-42,-16,-11,-104,-105,-91,-110,-80,238,-58,-26,-27,-20,-22,-23,-57,-179,-171,276,134,-193,-14,-50,-47,-49,289,-77,-21,-59,-196,-195,-40,-45,-39,-83,-60,-194,-197,-41,-172,-46,-48,-84,-78,]),'RBRACKET':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,118,123,125,126,129,133,136,138,143,166,195,196,197,200,213,214,215,216,219,220,221,237,240,248,251,253,254,255,261,274,275,283,286,290,295,303,311,314,316,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-168,-37,-36,-35,-34,-32,-33,-38,-115,-121,237,-58,-178,-169,-104,-105,-91,-110,-80,261,-58,-57,-179,285,-50,-47,-49,288,-77,-59,303,-40,-39,-83,318,-60,-41,-48,-84,-78,]),'PRINT':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[42,-6,42,-7,42,42,42,-2,-4,-8,42,-5,-122,42,42,42,-117,-116,42,42,42,-3,-133,42,42,42,-143,42,42,-9,-108,-107,42,42,-106,-92,-93,-100,-101,-102,42,-98,-97,-94,-95,-96,-99,-111,-113,-112,42,42,-24,-18,42,42,-136,-134,-137,-135,-138,-139,42,42,-144,42,-123,-188,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'NUM':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[23,-6,23,-7,23,23,23,-2,-4,-8,23,-5,-122,23,23,23,-117,-116,23,23,23,-3,-133,23,23,23,-143,23,23,-9,-108,-107,23,23,-106,-92,-93,-100,-101,-102,23,-98,-97,-94,-95,-96,-99,-111,-113,-112,23,23,-24,-18,23,23,-136,-134,-137,-135,-138,-139,23,23,-144,23,-123,-188,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'ARROW':([3,6,8,15,16,20,25,26,27,29,34,43,45,51,52,53,57,74,77,80,85,99,101,102,107,108,114,115,118,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,168,174,178,179,180,182,183,184,197,199,200,204,207,210,211,218,227,231,235,237,238,239,240,252,257,258,262,284,287,289,294,298,300,303,],[-167,-17,-51,-166,76,-54,-53,76,76,-52,99,-55,76,76,-117,-116,-51,76,76,99,-55,-56,-133,76,76,-51,76,76,-168,-108,-107,76,76,-106,-92,-93,-100,-101,-102,76,-98,-97,-94,-95,-96,-99,-111,-113,-112,76,99,76,76,-136,-134,-137,-135,-138,-139,-178,76,-169,76,76,76,76,76,76,76,76,-57,76,76,-179,-51,76,76,76,76,76,76,76,76,76,-60,]),'EXIT':([0,2,17,28,31,32,35,37,41,44,46,95,111,112,141,169,172,176,187,188,194,201,202,228,232,233,266,280,306,307,309,325,326,327,332,],[33,-6,-7,33,-2,-4,-8,33,-5,-122,33,-3,33,-143,-9,-24,-18,33,33,33,-144,-123,-188,33,33,33,33,33,33,33,33,33,33,33,33,]),'BY':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,118,143,166,197,200,213,214,215,216,219,237,240,261,271,272,290,303,316,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-77,300,-160,-83,-60,-84,-78,]),'LOWER':([0,2,16,17,26,27,28,31,32,35,37,41,44,45,46,51,52,53,74,76,77,95,101,102,107,111,112,114,115,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,169,172,174,176,178,179,180,182,183,184,187,188,194,199,201,202,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[18,-6,18,-7,18,18,18,-2,-4,-8,18,-5,-122,18,18,18,-117,-116,18,18,18,-3,-133,18,18,18,-143,18,18,-9,-108,-107,18,18,-106,-92,-93,-100,-101,-102,18,-98,-97,-94,-95,-96,-99,-111,-113,-112,18,18,-24,-18,18,18,-136,-134,-137,-135,-138,-139,18,18,-144,18,-123,-188,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'OR':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,158,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'CHAR':([6,47,50,90,131,171,209,211,234,244,273,288,289,308,],[-17,138,-15,138,138,138,-16,138,138,138,138,138,138,138,]),'COLON':([3,6,8,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,108,118,143,166,196,197,200,213,214,215,216,219,221,237,240,247,252,261,290,303,312,316,318,],[-167,-17,46,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,187,-168,-115,-121,239,-178,-169,-104,-105,-91,-110,-80,262,-57,-179,284,-51,-77,-83,-60,284,-84,-78,]),'CCONST':([16,26,27,45,51,52,53,74,77,101,102,107,114,115,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,168,174,178,179,180,182,183,184,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[83,83,83,83,83,-117,-116,83,83,-133,83,83,83,83,-108,-107,83,83,-106,-92,-93,-100,-101,-102,83,-98,-97,-94,-95,-96,-99,-111,-113,-112,83,83,83,-136,-134,-137,-135,-138,-139,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'LEQ':([3,6,15,20,25,29,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-166,-54,-53,-52,-67,-90,-51,-66,-72,-109,-73,-63,-76,152,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-168,-115,-121,-178,-169,-104,-105,-91,-110,-80,-57,-179,-51,-77,-60,-78,]),'PLUS':([3,6,8,15,20,25,29,34,43,54,55,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,75,78,79,80,81,83,85,99,108,118,143,166,197,200,213,214,215,216,219,237,240,252,261,303,318,],[-167,-17,-51,-166,-54,-53,-52,98,-55,-67,148,-51,-66,-72,-109,-73,-63,-76,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-55,-56,-51,-168,-115,-121,-178,-169,-104,-105,148,-110,-80,-57,-179,-51,-77,-60,-78,]),'WHILE':([3,6,15,20,25,29,37,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,75,78,79,80,81,83,84,85,99,106,118,143,166,189,190,191,197,200,213,214,215,216,219,237,240,261,270,283,286,290,297,302,303,316,318,320,321,323,331,],[-167,-17,-166,-54,-53,-52,107,-67,-90,-51,-66,-72,-109,-73,-63,-76,-81,-68,-119,-103,-70,-71,-64,-69,-114,-62,-75,-65,-118,-120,-74,-82,-55,-56,107,-168,-115,-121,-155,-153,-154,-178,-169,-104,-105,-91,-110,-80,-57,-179,-77,-163,-40,-39,-83,-156,-164,-60,-84,-78,-162,-158,-157,-159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'monadic_operator':([16,26,27,45,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'program':([0,],[1,]),'newmode_list':([21,],[87,]),'expression_list':([114,168,],[195,220,]),'formal_parameter':([203,276,],[245,304,]),'arithmetic_additive_operator':([55,215,],[146,146,]),'return_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'builtin_call':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'relational_operator':([65,],[149,]),'boolean_literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'do_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[7,7,7,120,7,7,120,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'mode':([47,90,131,171,244,288,308,],[128,175,208,223,281,313,328,]),'identifier':([0,10,16,21,24,26,27,28,33,37,45,46,47,51,74,76,77,90,102,107,110,111,114,115,131,134,142,146,147,154,164,168,170,171,173,174,176,187,188,199,203,204,207,210,211,218,227,228,231,232,233,234,235,238,239,244,257,258,262,266,273,276,280,284,287,288,289,294,298,300,306,307,308,309,325,326,327,332,],[8,50,57,50,50,57,57,8,96,108,57,57,135,57,57,57,57,135,57,57,192,108,57,57,135,209,50,57,57,57,57,57,50,135,50,57,108,57,108,57,50,57,57,57,252,57,57,108,57,108,108,268,57,57,57,135,57,57,57,108,268,50,8,57,57,135,252,57,57,57,8,8,135,8,8,8,8,8,]),'declaration_statement':([0,28,280,306,307,309,325,326,327,332,],[32,32,32,32,32,32,32,32,32,32,]),'statement':([0,28,280,306,307,309,325,326,327,332,],[31,95,31,31,31,95,31,95,95,95,]),'parenthesized_expression':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'array_location':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'value_array_element':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'composite_mode':([47,90,131,171,244,288,308,],[137,137,137,137,137,137,137,]),'end_value':([271,299,301,324,],[297,321,323,331,]),'identifier_list':([10,21,24,142,170,173,203,276,],[47,88,90,47,88,90,244,244,]),'control_part':([37,],[109,]),'operand2':([16,26,27,45,74,77,102,107,114,115,146,147,154,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[68,68,68,68,68,68,68,68,68,68,213,214,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'referenced_location':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'procedure_statement':([0,28,280,306,307,309,325,326,327,332,],[17,17,17,17,17,17,17,17,17,17,]),'arithmetic_multiplicative_operator':([68,213,214,],[164,164,164,]),'string_concatenation_operator':([55,215,],[147,147,]),'index_mode':([211,289,],[253,314,]),'bracketed_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'result_spec':([243,277,],[278,305,]),'character_literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'step_value':([271,],[301,]),'literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'declaration_list':([10,],[49,]),'elsif_expression':([217,],[259,]),'character_mode':([47,90,131,171,211,234,244,273,288,289,308,],[129,129,129,129,129,129,129,129,129,129,129,]),'membership_operator':([65,],[150,]),'if_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'assigning_operator':([34,],[102,]),'primitive_value':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'parameter_list':([45,115,287,],[119,198,119,]),'boolean_mode':([47,90,131,171,211,234,244,273,288,289,308,],[136,136,136,136,136,136,136,136,136,136,136,]),'builtin_name':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'else_clause':([177,296,],[230,319,]),'array_mode':([47,90,131,171,244,288,308,],[139,139,139,139,139,139,139,]),'synonym_statement':([0,28,280,306,307,309,325,326,327,332,],[41,41,41,41,41,41,41,41,41,41,]),'mode_definition':([21,170,],[86,222,]),'newmode_statement':([0,28,280,306,307,309,325,326,327,332,],[2,2,2,2,2,2,2,2,2,2,]),'constant_expression':([174,227,],[225,263,]),'literal_range':([204,210,211,287,289,],[246,250,251,250,251,]),'initialization':([128,],[206,]),'operator1':([65,],[154,]),'start_value':([235,],[271,]),'for_control':([37,],[106,]),'list_index_mode':([211,],[255,]),'discrete_range_mode':([47,90,131,171,211,234,244,273,288,289,308,],[126,126,126,126,126,270,126,302,126,126,126,]),'integer_literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,205,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,248,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'expression':([16,26,27,45,74,77,102,107,114,115,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[56,93,56,116,93,167,181,93,196,116,221,226,116,247,249,247,247,260,226,93,272,274,275,93,292,295,311,312,247,93,320,322,]),'parameter':([45,115,199,287,],[117,117,241,117,]),'operand3':([16,26,27,45,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[60,60,60,60,60,60,60,60,60,60,60,60,60,216,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declaration':([10,142,],[48,212,]),'dereferenced_reference':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'step_enumeration':([110,],[191,]),'procedure_call':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'then_clause':([92,265,],[177,296,]),'array_primitive_value':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'exit_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'operand0':([16,26,27,45,74,77,102,107,114,115,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'procedure_definition':([46,],[121,]),'parameter_spec':([244,],[282,]),'character_string_literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'value_array_slice':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'formal_parameter_list':([203,],[242,]),'result_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'empty_literal':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'iteration':([110,],[190,]),'location':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[34,80,80,80,34,34,80,34,80,80,166,80,80,80,34,80,80,80,80,80,80,80,80,34,34,34,80,80,80,80,80,80,80,34,80,34,34,80,80,80,80,80,80,34,34,80,80,80,80,80,80,34,34,34,34,34,34,34,]),'operand4':([16,26,27,45,51,74,77,102,107,114,115,146,147,154,164,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[73,73,73,73,143,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'discrete_mode':([47,90,131,171,211,234,244,273,288,289,308,],[124,124,124,124,254,269,124,269,124,254,124,]),'string_mode':([47,90,131,171,244,288,308,],[132,132,132,132,132,132,132,]),'array_slice':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'action_statement_list':([37,176,188,232,],[111,228,233,266,]),'statement_list':([0,280,306,307,325,],[28,309,326,327,332,]),'array_element':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'synonym_list':([24,],[89,]),'boolean_expression':([26,74,107,231,257,294,],[92,165,186,265,291,317,]),'synonym_definition':([24,173,],[91,224,]),'reference_mode':([47,90,131,171,244,288,308,],[130,130,130,130,130,130,130,]),'action_statement':([0,28,37,111,176,188,228,232,233,266,280,306,307,309,325,326,327,332,],[35,35,112,194,112,112,194,112,194,194,35,35,35,35,35,35,35,35,]),'range_enumeration':([110,],[189,]),'else_expression':([217,259,],[256,293,]),'integer_mode':([47,90,131,171,211,234,244,273,288,289,308,],[133,133,133,133,133,133,133,133,133,133,133,]),'assignment_action':([0,28,37,46,111,176,187,188,228,232,233,266,280,306,307,309,325,326,327,332,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'while_control':([37,106,],[113,185,]),'operand1':([16,26,27,45,74,77,102,107,114,115,154,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[55,55,55,55,55,55,55,55,55,55,215,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'result':([16,27,],[62,94,]),'conditional_expression':([16,26,27,45,74,77,102,107,114,115,168,174,199,204,207,210,211,218,227,231,235,238,239,257,258,262,284,287,289,294,298,300,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'call_action':([0,16,26,27,28,37,45,46,51,74,76,77,102,107,111,114,115,146,147,154,164,168,174,176,187,188,199,204,207,210,211,218,227,228,231,232,233,235,238,239,257,258,262,266,280,284,287,289,294,298,300,306,307,309,325,326,327,332,],[43,85,85,85,43,43,85,43,85,85,85,85,85,85,43,85,85,85,85,85,85,85,85,43,43,43,85,85,85,85,85,85,85,43,85,43,43,85,85,85,85,85,85,43,43,85,85,85,85,85,85,43,43,43,43,43,43,43,]),'then_expression':([165,291,317,],[217,315,330,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',18),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',22),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',23),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',32),
  ('statement -> synonym_statement','statement',1,'p_statement','parser.py',33),
  ('statement -> newmode_statement','statement',1,'p_statement','parser.py',34),
  ('statement -> procedure_statement','statement',1,'p_statement','parser.py',35),
  ('statement -> action_statement','statement',1,'p_statement','parser.py',36),
  ('declaration_statement -> DCL declaration_list SEMI','declaration_statement',3,'p_declaration_statement','parser.py',41),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',46),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list','parser.py',47),
  ('declaration -> identifier_list mode','declaration',2,'p_declaration','parser.py',56),
  ('declaration -> identifier_list mode initialization','declaration',3,'p_declaration','parser.py',57),
  ('initialization -> EQUALS expression','initialization',2,'p_initialization','parser.py',67),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','parser.py',74),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','parser.py',75),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',83),
  ('synonym_statement -> SYN synonym_list SEMI','synonym_statement',3,'p_synonym_statement','parser.py',89),
  ('synonym_list -> synonym_definition','synonym_list',1,'p_synonym_list','parser.py',96),
  ('synonym_list -> synonym_list COMMA synonym_definition','synonym_list',3,'p_synonym_list','parser.py',97),
  ('synonym_definition -> identifier_list mode EQUALS constant_expression','synonym_definition',4,'p_synonym_definition','parser.py',106),
  ('synonym_definition -> identifier_list EQUALS constant_expression','synonym_definition',3,'p_synonym_definition','parser.py',107),
  ('constant_expression -> expression','constant_expression',1,'p_constant_expression','parser.py',118),
  ('newmode_statement -> TYPE newmode_list SEMI','newmode_statement',3,'p_newmode_statement','parser.py',124),
  ('newmode_list -> mode_definition','newmode_list',1,'p_newmode_list','parser.py',131),
  ('newmode_list -> newmode_list COMMA mode_definition','newmode_list',3,'p_newmode_list','parser.py',132),
  ('mode_definition -> identifier_list EQUALS mode','mode_definition',3,'p_mode_definition','parser.py',141),
  ('mode -> identifier','mode',1,'p_mode','parser.py',148),
  ('mode -> discrete_mode','mode',1,'p_mode','parser.py',149),
  ('mode -> reference_mode','mode',1,'p_mode','parser.py',150),
  ('mode -> composite_mode','mode',1,'p_mode','parser.py',151),
  ('discrete_mode -> integer_mode','discrete_mode',1,'p_discrete_mode','parser.py',158),
  ('discrete_mode -> boolean_mode','discrete_mode',1,'p_discrete_mode','parser.py',159),
  ('discrete_mode -> character_mode','discrete_mode',1,'p_discrete_mode','parser.py',160),
  ('discrete_mode -> discrete_range_mode','discrete_mode',1,'p_discrete_mode','parser.py',161),
  ('integer_mode -> INT','integer_mode',1,'p_integer_mode','parser.py',168),
  ('boolean_mode -> BOOL','boolean_mode',1,'p_boolean_mode','parser.py',175),
  ('character_mode -> CHAR','character_mode',1,'p_character_mode','parser.py',182),
  ('discrete_range_mode -> identifier LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',189),
  ('discrete_range_mode -> discrete_mode LPAREN literal_range RPAREN','discrete_range_mode',4,'p_discrete_range_mode','parser.py',190),
  ('literal_range -> expression COLON expression','literal_range',3,'p_literal_range','parser.py',196),
  ('reference_mode -> REF mode','reference_mode',2,'p_reference_mode','parser.py',203),
  ('composite_mode -> string_mode','composite_mode',1,'p_composite_mode','parser.py',209),
  ('composite_mode -> array_mode','composite_mode',1,'p_composite_mode','parser.py',210),
  ('string_mode -> CHARS LBRACKET integer_literal RBRACKET','string_mode',4,'p_string_mode','parser.py',215),
  ('array_mode -> ARRAY LBRACKET list_index_mode RBRACKET mode','array_mode',5,'p_array_mode','parser.py',222),
  ('list_index_mode -> index_mode','list_index_mode',1,'p_list_index_mode','parser.py',228),
  ('list_index_mode -> list_index_mode COMMA index_mode','list_index_mode',3,'p_list_index_mode','parser.py',229),
  ('index_mode -> discrete_mode','index_mode',1,'p_index_mode','parser.py',237),
  ('index_mode -> literal_range','index_mode',1,'p_index_mode','parser.py',238),
  ('location -> identifier','location',1,'p_location','parser.py',244),
  ('location -> dereferenced_reference','location',1,'p_location','parser.py',245),
  ('location -> array_element','location',1,'p_location','parser.py',246),
  ('location -> array_slice','location',1,'p_location','parser.py',247),
  ('location -> call_action','location',1,'p_location','parser.py',248),
  ('dereferenced_reference -> location ARROW','dereferenced_reference',2,'p_dereferenced_reference','parser.py',258),
  ('array_element -> array_location LBRACKET expression_list RBRACKET','array_element',4,'p_array_element','parser.py',297),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',304),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',305),
  ('array_slice -> array_location LBRACKET expression COLON expression RBRACKET','array_slice',6,'p_array_slice','parser.py',314),
  ('array_location -> location','array_location',1,'p_array_location','parser.py',321),
  ('primitive_value -> literal','primitive_value',1,'p_primitive_value','parser.py',327),
  ('primitive_value -> value_array_element','primitive_value',1,'p_primitive_value','parser.py',328),
  ('primitive_value -> value_array_slice','primitive_value',1,'p_primitive_value','parser.py',329),
  ('primitive_value -> parenthesized_expression','primitive_value',1,'p_primitive_value','parser.py',330),
  ('literal -> integer_literal','literal',1,'p_literal','parser.py',337),
  ('literal -> boolean_literal','literal',1,'p_literal','parser.py',338),
  ('literal -> character_literal','literal',1,'p_literal','parser.py',339),
  ('literal -> empty_literal','literal',1,'p_literal','parser.py',340),
  ('literal -> character_string_literal','literal',1,'p_literal','parser.py',341),
  ('integer_literal -> ICONST','integer_literal',1,'p_integer_literal','parser.py',348),
  ('boolean_literal -> FALSE','boolean_literal',1,'p_boolean_literal','parser.py',355),
  ('boolean_literal -> TRUE','boolean_literal',1,'p_boolean_literal','parser.py',356),
  ('character_literal -> CCONST','character_literal',1,'p_character_literal','parser.py',363),
  ('empty_literal -> NULL','empty_literal',1,'p_empty_literal','parser.py',370),
  ('character_string_literal -> SCONST','character_string_literal',1,'p_character_string_literal','parser.py',377),
  ('value_array_element -> array_primitive_value LBRACKET expression_list RBRACKET','value_array_element',4,'p_value_array_element','parser.py',384),
  ('value_array_slice -> array_primitive_value LBRACKET expression COLON expression RBRACKET','value_array_slice',6,'p_value_array_slice','parser.py',391),
  ('array_primitive_value -> primitive_value','array_primitive_value',1,'p_array_primitive_value','parser.py',398),
  ('parenthesized_expression -> LPAREN expression RPAREN','parenthesized_expression',3,'p_parenthesized_expression','parser.py',404),
  ('expression -> operand0','expression',1,'p_expression','parser.py',411),
  ('expression -> conditional_expression','expression',1,'p_expression','parser.py',412),
  ('conditional_expression -> IF boolean_expression then_expression else_expression FI','conditional_expression',5,'p_conditional_expression','parser.py',419),
  ('conditional_expression -> IF boolean_expression then_expression elsif_expression else_expression FI','conditional_expression',6,'p_conditional_expression','parser.py',420),
  ('boolean_expression -> expression','boolean_expression',1,'p_boolean_expression','parser.py',430),
  ('then_expression -> THEN expression','then_expression',2,'p_then_expression','parser.py',437),
  ('else_expression -> ELSE expression','else_expression',2,'p_else_expression','parser.py',444),
  ('elsif_expression -> ELSIF boolean_expression then_expression','elsif_expression',3,'p_elsif_expression','parser.py',451),
  ('elsif_expression -> elsif_expression ELSIF boolean_expression then_expression','elsif_expression',4,'p_elsif_expression','parser.py',452),
  ('operand0 -> operand1','operand0',1,'p_operand0','parser.py',463),
  ('operand0 -> operand0 operator1 operand1','operand0',3,'p_operand0','parser.py',464),
  ('operator1 -> relational_operator','operator1',1,'p_operator1','parser.py',475),
  ('operator1 -> membership_operator','operator1',1,'p_operator1','parser.py',476),
  ('relational_operator -> AND','relational_operator',1,'p_relational_operator','parser.py',482),
  ('relational_operator -> OR','relational_operator',1,'p_relational_operator','parser.py',483),
  ('relational_operator -> EQ','relational_operator',1,'p_relational_operator','parser.py',484),
  ('relational_operator -> NE','relational_operator',1,'p_relational_operator','parser.py',485),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','parser.py',486),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','parser.py',487),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','parser.py',488),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','parser.py',489),
  ('membership_operator -> IN','membership_operator',1,'p_membership_operator','parser.py',496),
  ('operand1 -> operand2','operand1',1,'p_operand1','parser.py',503),
  ('operand1 -> operand1 arithmetic_additive_operator operand2','operand1',3,'p_operand1','parser.py',504),
  ('operand1 -> operand1 string_concatenation_operator operand2','operand1',3,'p_operand1','parser.py',505),
  ('arithmetic_additive_operator -> PLUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',516),
  ('arithmetic_additive_operator -> MINUS','arithmetic_additive_operator',1,'p_arithmetic_additive_operator','parser.py',517),
  ('string_concatenation_operator -> LAND','string_concatenation_operator',1,'p_string_concatenation_operator','parser.py',524),
  ('operand2 -> operand3','operand2',1,'p_operand2','parser.py',531),
  ('operand2 -> operand2 arithmetic_multiplicative_operator operand3','operand2',3,'p_operand2','parser.py',532),
  ('arithmetic_multiplicative_operator -> TIMES','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',543),
  ('arithmetic_multiplicative_operator -> DIVIDE','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',544),
  ('arithmetic_multiplicative_operator -> MODULO','arithmetic_multiplicative_operator',1,'p_arithmetic_multiplicative_operator','parser.py',545),
  ('operand3 -> operand4','operand3',1,'p_operand3','parser.py',551),
  ('operand3 -> monadic_operator operand4','operand3',2,'p_operand3','parser.py',552),
  ('monadic_operator -> MINUS','monadic_operator',1,'p_monadic_operator','parser.py',563),
  ('monadic_operator -> NOT','monadic_operator',1,'p_monadic_operator','parser.py',564),
  ('operand4 -> location','operand4',1,'p_operand4','parser.py',571),
  ('operand4 -> referenced_location','operand4',1,'p_operand4','parser.py',572),
  ('operand4 -> primitive_value','operand4',1,'p_operand4','parser.py',573),
  ('referenced_location -> ARROW location','referenced_location',2,'p_referenced_location','parser.py',580),
  ('action_statement -> action SEMI','action_statement',2,'p_action_statement','parser.py',587),
  ('action_statement -> identifier COLON action SEMI','action_statement',4,'p_action_statement','parser.py',588),
  ('action -> bracketed_action','action',1,'p_action','parser.py',599),
  ('action -> assignment_action','action',1,'p_action','parser.py',600),
  ('action -> call_action','action',1,'p_action','parser.py',601),
  ('action -> exit_action','action',1,'p_action','parser.py',602),
  ('action -> return_action','action',1,'p_action','parser.py',603),
  ('action -> result_action','action',1,'p_action','parser.py',604),
  ('bracketed_action -> if_action','bracketed_action',1,'p_bracketed_action','parser.py',611),
  ('bracketed_action -> do_action','bracketed_action',1,'p_bracketed_action','parser.py',612),
  ('assignment_action -> location assigning_operator expression','assignment_action',3,'p_assignment_action','parser.py',619),
  ('assigning_operator -> EQUALS','assigning_operator',1,'p_assigning_operator','parser.py',626),
  ('assigning_operator -> PLUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',627),
  ('assigning_operator -> MINUS EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',628),
  ('assigning_operator -> TIMES EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',629),
  ('assigning_operator -> DIVIDE EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',630),
  ('assigning_operator -> MODULO EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',631),
  ('assigning_operator -> LAND EQUALS','assigning_operator',2,'p_assigning_operator','parser.py',632),
  ('if_action -> IF boolean_expression then_clause FI','if_action',4,'p_if_action','parser.py',641),
  ('if_action -> IF boolean_expression then_clause else_clause FI','if_action',5,'p_if_action','parser.py',642),
  ('then_clause -> THEN action_statement_list','then_clause',2,'p_then_clause','parser.py',652),
  ('action_statement_list -> action_statement','action_statement_list',1,'p_action_statement_list','parser.py',658),
  ('action_statement_list -> action_statement_list action_statement','action_statement_list',2,'p_action_statement_list','parser.py',659),
  ('else_clause -> ELSE action_statement_list','else_clause',2,'p_else_clause','parser.py',667),
  ('else_clause -> ELSIF boolean_expression then_clause','else_clause',3,'p_else_clause','parser.py',668),
  ('else_clause -> ELSIF boolean_expression then_clause else_clause','else_clause',4,'p_else_clause','parser.py',669),
  ('do_action -> DO action_statement_list OD','do_action',3,'p_do_action','parser.py',681),
  ('do_action -> DO control_part SEMI action_statement_list OD','do_action',5,'p_do_action','parser.py',682),
  ('control_part -> for_control','control_part',1,'p_control_part','parser.py',692),
  ('control_part -> for_control while_control','control_part',2,'p_control_part','parser.py',693),
  ('control_part -> while_control','control_part',1,'p_control_part','parser.py',694),
  ('for_control -> FOR iteration','for_control',2,'p_for_control','parser.py',704),
  ('iteration -> step_enumeration','iteration',1,'p_iteration','parser.py',711),
  ('iteration -> range_enumeration','iteration',1,'p_iteration','parser.py',712),
  ('step_enumeration -> identifier EQUALS start_value end_value','step_enumeration',4,'p_step_enumeration','parser.py',720),
  ('step_enumeration -> identifier EQUALS start_value step_value end_value','step_enumeration',5,'p_step_enumeration','parser.py',721),
  ('step_enumeration -> identifier EQUALS start_value DOWN end_value','step_enumeration',5,'p_step_enumeration','parser.py',722),
  ('step_enumeration -> identifier EQUALS start_value step_value DOWN end_value','step_enumeration',6,'p_step_enumeration','parser.py',723),
  ('start_value -> expression','start_value',1,'p_start_value','parser.py',738),
  ('step_value -> BY expression','step_value',2,'p_step_value','parser.py',744),
  ('end_value -> TO expression','end_value',2,'p_end_value','parser.py',750),
  ('range_enumeration -> identifier IN discrete_range_mode','range_enumeration',3,'p_range_enumeration','parser.py',756),
  ('range_enumeration -> identifier DOWN IN discrete_range_mode','range_enumeration',4,'p_range_enumeration','parser.py',757),
  ('while_control -> WHILE boolean_expression','while_control',2,'p_while_control','parser.py',768),
  ('call_action -> procedure_call','call_action',1,'p_call_action','parser.py',775),
  ('call_action -> builtin_call','call_action',1,'p_call_action','parser.py',776),
  ('procedure_call -> identifier LPAREN RPAREN','procedure_call',3,'p_procedure_call','parser.py',783),
  ('procedure_call -> identifier LPAREN parameter_list RPAREN','procedure_call',4,'p_procedure_call','parser.py',784),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','parser.py',793),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','parser.py',794),
  ('parameter -> expression','parameter',1,'p_parameter','parser.py',803),
  ('exit_action -> EXIT identifier','exit_action',2,'p_exit_action','parser.py',809),
  ('return_action -> RETURN','return_action',1,'p_return_action','parser.py',816),
  ('return_action -> RETURN result','return_action',2,'p_return_action','parser.py',817),
  ('result_action -> RESULT result','result_action',2,'p_result_action','parser.py',826),
  ('result -> expression','result',1,'p_result','parser.py',833),
  ('builtin_call -> builtin_name LPAREN RPAREN','builtin_call',3,'p_builtin_call','parser.py',839),
  ('builtin_call -> builtin_name LPAREN parameter_list RPAREN','builtin_call',4,'p_builtin_call','parser.py',840),
  ('builtin_name -> ABS','builtin_name',1,'p_builtin_name','parser.py',851),
  ('builtin_name -> ASC','builtin_name',1,'p_builtin_name','parser.py',852),
  ('builtin_name -> NUM','builtin_name',1,'p_builtin_name','parser.py',853),
  ('builtin_name -> UPPER','builtin_name',1,'p_builtin_name','parser.py',854),
  ('builtin_name -> LOWER','builtin_name',1,'p_builtin_name','parser.py',855),
  ('builtin_name -> LENGTH','builtin_name',1,'p_builtin_name','parser.py',856),
  ('builtin_name -> READ','builtin_name',1,'p_builtin_name','parser.py',857),
  ('builtin_name -> PRINT','builtin_name',1,'p_builtin_name','parser.py',858),
  ('procedure_statement -> identifier COLON procedure_definition SEMI','procedure_statement',4,'p_procedure_statement','parser.py',864),
  ('procedure_definition -> PROC LPAREN RPAREN SEMI statement_list END','procedure_definition',6,'p_procedure_definition','parser.py',871),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',872),
  ('procedure_definition -> PROC LPAREN RPAREN result_spec SEMI statement_list END','procedure_definition',7,'p_procedure_definition','parser.py',873),
  ('procedure_definition -> PROC LPAREN formal_parameter_list RPAREN result_spec SEMI statement_list END','procedure_definition',8,'p_procedure_definition','parser.py',874),
  ('formal_parameter_list -> formal_parameter','formal_parameter_list',1,'p_formal_parameter_list','parser.py',889),
  ('formal_parameter_list -> formal_parameter_list COMMA formal_parameter','formal_parameter_list',3,'p_formal_parameter_list','parser.py',890),
  ('formal_parameter -> identifier_list parameter_spec','formal_parameter',2,'p_formal_parameter','parser.py',899),
  ('parameter_spec -> mode','parameter_spec',1,'p_parameter_spec','parser.py',906),
  ('parameter_spec -> mode LOC','parameter_spec',2,'p_parameter_spec','parser.py',907),
  ('result_spec -> RETURNS LPAREN mode RPAREN','result_spec',4,'p_result_spec','parser.py',917),
  ('result_spec -> RETURNS LPAREN mode LOC RPAREN','result_spec',5,'p_result_spec','parser.py',918),
]
